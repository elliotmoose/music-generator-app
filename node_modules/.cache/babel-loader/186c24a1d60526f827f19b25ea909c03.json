{"ast":null,"code":"import _classCallCheck from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Scale } from \"./Scale\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Pow } from \"./Pow\";\n/**\n * Performs an exponential scaling on an input signal.\n * Scales a NormalRange value [0,1] exponentially\n * to the output range of outputMin to outputMax.\n * @example\n * const scaleExp = new Tone.ScaleExp(0, 100, 2);\n * const signal = new Tone.Signal(0.5).connect(scaleExp);\n * @category Signal\n */\n\nexport var ScaleExp = /*#__PURE__*/function (_Scale) {\n  _inherits(ScaleExp, _Scale);\n\n  var _super = _createSuper(ScaleExp);\n\n  function ScaleExp() {\n    var _this;\n\n    _classCallCheck(this, ScaleExp);\n\n    _this = _super.call(this, Object.assign(optionsFromArguments(ScaleExp.getDefaults(), arguments, [\"min\", \"max\", \"exponent\"])));\n    _this.name = \"ScaleExp\";\n    var options = optionsFromArguments(ScaleExp.getDefaults(), arguments, [\"min\", \"max\", \"exponent\"]);\n    _this.input = _this._exp = new Pow({\n      context: _this.context,\n      value: options.exponent\n    });\n\n    _this._exp.connect(_this._mult);\n\n    return _this;\n  }\n\n  _createClass(ScaleExp, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(ScaleExp.prototype), \"dispose\", this).call(this);\n\n      this._exp.dispose();\n\n      return this;\n    }\n  }, {\n    key: \"exponent\",\n\n    /**\n     * Instead of interpolating linearly between the [[min]] and\n     * [[max]] values, setting the exponent will interpolate between\n     * the two values with an exponential curve.\n     */\n    get: function get() {\n      return this._exp.value;\n    },\n    set: function set(exp) {\n      this._exp.value = exp;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(Scale.getDefaults(), {\n        exponent: 1\n      });\n    }\n  }]);\n\n  return ScaleExp;\n}(Scale);","map":{"version":3,"sources":["../../../Tone/signal/ScaleExp.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,KAAT,QAAoC,SAApC;AAEA,SAAS,oBAAT,QAAqC,uBAArC;AACA,SAAS,GAAT,QAAoB,OAApB;AAMA;;;;;;;;AAQG;;AACH,WAAa,QAAb;AAAA;;AAAA;;AAgBC,sBAAA;AAAA;;AAAA;;AACC,8BAAM,MAAM,CAAC,MAAP,CAAc,oBAAoB,CAAC,QAAQ,CAAC,WAAT,EAAD,EAAyB,SAAzB,EAAoC,CAAC,KAAD,EAAQ,KAAR,EAAe,UAAf,CAApC,CAAlC,CAAN;AAfQ,UAAA,IAAA,GAAe,UAAf;AAgBR,QAAM,OAAO,GAAG,oBAAoB,CAAC,QAAQ,CAAC,WAAT,EAAD,EAAyB,SAAzB,EAAoC,CAAC,KAAD,EAAQ,KAAR,EAAe,UAAf,CAApC,CAApC;AAEA,UAAK,KAAL,GAAa,MAAK,IAAL,GAAY,IAAI,GAAJ,CAAQ;AAChC,MAAA,OAAO,EAAE,MAAK,OADkB;AAEhC,MAAA,KAAK,EAAE,OAAO,CAAC;AAFiB,KAAR,CAAzB;;AAIA,UAAK,IAAL,CAAU,OAAV,CAAkB,MAAK,KAAvB;;AARD;AASC;;AAzBF;AAAA;AAAA,8BA6CQ;AACN;;AACA,WAAK,IAAL,CAAU,OAAV;;AACA,aAAO,IAAP;AACA;AAjDF;AAAA;;AAiCC;;;;AAIG;AArCJ,wBAsCa;AACX,aAAO,KAAK,IAAL,CAAU,KAAjB;AACA,KAxCF;AAAA,sBAyCc,GAzCd,EAyCiB;AACf,WAAK,IAAL,CAAU,KAAV,GAAkB,GAAlB;AACA;AA3CF;AAAA;AAAA,kCA2BmB;AACjB,aAAO,MAAM,CAAC,MAAP,CAAc,KAAK,CAAC,WAAN,EAAd,EAAmC;AACzC,QAAA,QAAQ,EAAE;AAD+B,OAAnC,CAAP;AAGA;AA/BF;;AAAA;AAAA,EAA8B,KAA9B","sourceRoot":"","sourcesContent":["import { Scale } from \"./Scale\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Pow } from \"./Pow\";\n/**\n * Performs an exponential scaling on an input signal.\n * Scales a NormalRange value [0,1] exponentially\n * to the output range of outputMin to outputMax.\n * @example\n * const scaleExp = new Tone.ScaleExp(0, 100, 2);\n * const signal = new Tone.Signal(0.5).connect(scaleExp);\n * @category Signal\n */\nexport class ScaleExp extends Scale {\n    constructor() {\n        super(Object.assign(optionsFromArguments(ScaleExp.getDefaults(), arguments, [\"min\", \"max\", \"exponent\"])));\n        this.name = \"ScaleExp\";\n        const options = optionsFromArguments(ScaleExp.getDefaults(), arguments, [\"min\", \"max\", \"exponent\"]);\n        this.input = this._exp = new Pow({\n            context: this.context,\n            value: options.exponent,\n        });\n        this._exp.connect(this._mult);\n    }\n    static getDefaults() {\n        return Object.assign(Scale.getDefaults(), {\n            exponent: 1,\n        });\n    }\n    /**\n     * Instead of interpolating linearly between the [[min]] and\n     * [[max]] values, setting the exponent will interpolate between\n     * the two values with an exponential curve.\n     */\n    get exponent() {\n        return this._exp.value;\n    }\n    set exponent(exp) {\n        this._exp.value = exp;\n    }\n    dispose() {\n        super.dispose();\n        this._exp.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=ScaleExp.js.map"]},"metadata":{},"sourceType":"module"}