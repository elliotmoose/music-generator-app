{"ast":null,"code":"var core = require('../../core'),\n    BlurXFilter = require('./BlurXFilter'),\n    BlurYFilter = require('./BlurYFilter');\n/**\n * The BlurFilter applies a Gaussian blur to an object.\n * The strength of the blur can be set for x- and y-axis separately.\n *\n * @class\n * @extends PIXI.AbstractFilter\n * @memberof PIXI.filters\n */\n\n\nfunction BlurFilter() {\n  core.AbstractFilter.call(this);\n  this.blurXFilter = new BlurXFilter();\n  this.blurYFilter = new BlurYFilter();\n}\n\nBlurFilter.prototype = Object.create(core.AbstractFilter.prototype);\nBlurFilter.prototype.constructor = BlurFilter;\nmodule.exports = BlurFilter;\n\nBlurFilter.prototype.applyFilter = function (renderer, input, output) {\n  var renderTarget = renderer.filterManager.getRenderTarget(true);\n  this.blurXFilter.applyFilter(renderer, input, renderTarget);\n  this.blurYFilter.applyFilter(renderer, renderTarget, output);\n  renderer.filterManager.returnRenderTarget(renderTarget);\n};\n\nObject.defineProperties(BlurFilter.prototype, {\n  /**\n   * Sets the strength of both the blurX and blurY properties simultaneously\n   *\n   * @member {number}\n   * @memberOf BlurFilter#\n   * @default 2\n   */\n  blur: {\n    get: function () {\n      return this.blurXFilter.blur;\n    },\n    set: function (value) {\n      this.padding = Math.abs(value) * 0.5;\n      this.blurXFilter.blur = this.blurYFilter.blur = value;\n    }\n  },\n\n  /**\n   * Sets the number of passes for blur. More passes means higher quaility bluring.\n   *\n   * @member {number}\n   * @memberof BlurYFilter#\n   * @default 1\n   */\n  passes: {\n    get: function () {\n      return this.blurXFilter.passes;\n    },\n    set: function (value) {\n      this.blurXFilter.passes = this.blurYFilter.passes = value;\n    }\n  },\n\n  /**\n   * Sets the strength of the blurX property\n   *\n   * @member {number}\n   * @memberOf BlurFilter#\n   * @default 2\n   */\n  blurX: {\n    get: function () {\n      return this.blurXFilter.blur;\n    },\n    set: function (value) {\n      this.blurXFilter.blur = value;\n    }\n  },\n\n  /**\n   * Sets the strength of the blurY property\n   *\n   * @member {number}\n   * @memberOf BlurFilter#\n   * @default 2\n   */\n  blurY: {\n    get: function () {\n      return this.blurYFilter.blur;\n    },\n    set: function (value) {\n      this.blurYFilter.blur = value;\n    }\n  }\n});","map":{"version":3,"sources":["/Users/thebe/Desktop/music-generator-app/node_modules/pixi.js/src/filters/blur/BlurFilter.js"],"names":["core","require","BlurXFilter","BlurYFilter","BlurFilter","AbstractFilter","call","blurXFilter","blurYFilter","prototype","Object","create","constructor","module","exports","applyFilter","renderer","input","output","renderTarget","filterManager","getRenderTarget","returnRenderTarget","defineProperties","blur","get","set","value","padding","Math","abs","passes","blurX","blurY"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,YAAD,CAAlB;AAAA,IACIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CADzB;AAAA,IAEIE,WAAW,GAAGF,OAAO,CAAC,eAAD,CAFzB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,UAAT,GACA;AACIJ,EAAAA,IAAI,CAACK,cAAL,CAAoBC,IAApB,CAAyB,IAAzB;AAEA,OAAKC,WAAL,GAAmB,IAAIL,WAAJ,EAAnB;AACA,OAAKM,WAAL,GAAmB,IAAIL,WAAJ,EAAnB;AACH;;AAEDC,UAAU,CAACK,SAAX,GAAuBC,MAAM,CAACC,MAAP,CAAcX,IAAI,CAACK,cAAL,CAAoBI,SAAlC,CAAvB;AACAL,UAAU,CAACK,SAAX,CAAqBG,WAArB,GAAmCR,UAAnC;AACAS,MAAM,CAACC,OAAP,GAAiBV,UAAjB;;AAEAA,UAAU,CAACK,SAAX,CAAqBM,WAArB,GAAmC,UAAUC,QAAV,EAAoBC,KAApB,EAA2BC,MAA3B,EACnC;AACI,MAAIC,YAAY,GAAGH,QAAQ,CAACI,aAAT,CAAuBC,eAAvB,CAAuC,IAAvC,CAAnB;AAEA,OAAKd,WAAL,CAAiBQ,WAAjB,CAA6BC,QAA7B,EAAuCC,KAAvC,EAA8CE,YAA9C;AACA,OAAKX,WAAL,CAAiBO,WAAjB,CAA6BC,QAA7B,EAAuCG,YAAvC,EAAqDD,MAArD;AAEAF,EAAAA,QAAQ,CAACI,aAAT,CAAuBE,kBAAvB,CAA0CH,YAA1C;AACH,CARD;;AAUAT,MAAM,CAACa,gBAAP,CAAwBnB,UAAU,CAACK,SAAnC,EAA8C;AAC1C;AACJ;AACA;AACA;AACA;AACA;AACA;AACIe,EAAAA,IAAI,EAAE;AACFC,IAAAA,GAAG,EAAE,YACL;AACI,aAAO,KAAKlB,WAAL,CAAiBiB,IAAxB;AACH,KAJC;AAKFE,IAAAA,GAAG,EAAE,UAAUC,KAAV,EACL;AACI,WAAKC,OAAL,GAAeC,IAAI,CAACC,GAAL,CAASH,KAAT,IAAkB,GAAjC;AACA,WAAKpB,WAAL,CAAiBiB,IAAjB,GAAwB,KAAKhB,WAAL,CAAiBgB,IAAjB,GAAwBG,KAAhD;AACH;AATC,GARoC;;AAoB1C;AACJ;AACA;AACA;AACA;AACA;AACA;AACII,EAAAA,MAAM,EAAE;AACJN,IAAAA,GAAG,EAAE,YACL;AACI,aAAQ,KAAKlB,WAAL,CAAiBwB,MAAzB;AACH,KAJG;AAKJL,IAAAA,GAAG,EAAE,UAAUC,KAAV,EACL;AACI,WAAKpB,WAAL,CAAiBwB,MAAjB,GAA0B,KAAKvB,WAAL,CAAiBuB,MAAjB,GAA0BJ,KAApD;AACH;AARG,GA3BkC;;AAsC1C;AACJ;AACA;AACA;AACA;AACA;AACA;AACIK,EAAAA,KAAK,EAAE;AACHP,IAAAA,GAAG,EAAE,YACL;AACI,aAAO,KAAKlB,WAAL,CAAiBiB,IAAxB;AACH,KAJE;AAKHE,IAAAA,GAAG,EAAE,UAAUC,KAAV,EACL;AACI,WAAKpB,WAAL,CAAiBiB,IAAjB,GAAwBG,KAAxB;AACH;AARE,GA7CmC;;AAwD1C;AACJ;AACA;AACA;AACA;AACA;AACA;AACIM,EAAAA,KAAK,EAAE;AACHR,IAAAA,GAAG,EAAE,YACL;AACI,aAAO,KAAKjB,WAAL,CAAiBgB,IAAxB;AACH,KAJE;AAKHE,IAAAA,GAAG,EAAE,UAAUC,KAAV,EACL;AACI,WAAKnB,WAAL,CAAiBgB,IAAjB,GAAwBG,KAAxB;AACH;AARE;AA/DmC,CAA9C","sourcesContent":["var core = require('../../core'),\n    BlurXFilter = require('./BlurXFilter'),\n    BlurYFilter = require('./BlurYFilter');\n\n/**\n * The BlurFilter applies a Gaussian blur to an object.\n * The strength of the blur can be set for x- and y-axis separately.\n *\n * @class\n * @extends PIXI.AbstractFilter\n * @memberof PIXI.filters\n */\nfunction BlurFilter()\n{\n    core.AbstractFilter.call(this);\n\n    this.blurXFilter = new BlurXFilter();\n    this.blurYFilter = new BlurYFilter();\n}\n\nBlurFilter.prototype = Object.create(core.AbstractFilter.prototype);\nBlurFilter.prototype.constructor = BlurFilter;\nmodule.exports = BlurFilter;\n\nBlurFilter.prototype.applyFilter = function (renderer, input, output)\n{\n    var renderTarget = renderer.filterManager.getRenderTarget(true);\n\n    this.blurXFilter.applyFilter(renderer, input, renderTarget);\n    this.blurYFilter.applyFilter(renderer, renderTarget, output);\n\n    renderer.filterManager.returnRenderTarget(renderTarget);\n};\n\nObject.defineProperties(BlurFilter.prototype, {\n    /**\n     * Sets the strength of both the blurX and blurY properties simultaneously\n     *\n     * @member {number}\n     * @memberOf BlurFilter#\n     * @default 2\n     */\n    blur: {\n        get: function ()\n        {\n            return this.blurXFilter.blur;\n        },\n        set: function (value)\n        {\n            this.padding = Math.abs(value) * 0.5;\n            this.blurXFilter.blur = this.blurYFilter.blur = value;\n        }\n    },\n\n    /**\n     * Sets the number of passes for blur. More passes means higher quaility bluring.\n     *\n     * @member {number}\n     * @memberof BlurYFilter#\n     * @default 1\n     */\n    passes: {\n        get: function ()\n        {\n            return  this.blurXFilter.passes;\n        },\n        set: function (value)\n        {\n            this.blurXFilter.passes = this.blurYFilter.passes = value;\n        }\n    },\n\n    /**\n     * Sets the strength of the blurX property\n     *\n     * @member {number}\n     * @memberOf BlurFilter#\n     * @default 2\n     */\n    blurX: {\n        get: function ()\n        {\n            return this.blurXFilter.blur;\n        },\n        set: function (value)\n        {\n            this.blurXFilter.blur = value;\n        }\n    },\n\n    /**\n     * Sets the strength of the blurY property\n     *\n     * @member {number}\n     * @memberOf BlurFilter#\n     * @default 2\n     */\n    blurY: {\n        get: function ()\n        {\n            return this.blurYFilter.blur;\n        },\n        set: function (value)\n        {\n            this.blurYFilter.blur = value;\n        }\n    }\n});\n"]},"metadata":{},"sourceType":"script"}