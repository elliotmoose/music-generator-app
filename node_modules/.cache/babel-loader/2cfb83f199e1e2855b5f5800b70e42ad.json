{"ast":null,"code":"import _classCallCheck from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nexport var createAudioDestinationNodeConstructor = function createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(AudioDestinationNode, _audioNodeConstructor);\n\n    var _super = _createSuper(AudioDestinationNode);\n\n    function AudioDestinationNode(context, channelCount) {\n      var _this;\n\n      _classCallCheck(this, AudioDestinationNode);\n\n      var nativeContext = getNativeContext(context);\n      var isOffline = isNativeOfflineAudioContext(nativeContext);\n      var nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n      var audioDestinationNodeRenderer = isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null;\n      _this = _super.call(this, context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n      _this._isNodeOfNativeOfflineAudioContext = isOffline;\n      _this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n      return _this;\n    }\n\n    _createClass(AudioDestinationNode, [{\n      key: \"channelCount\",\n      get: function get() {\n        return this._nativeAudioDestinationNode.channelCount;\n      },\n      set: function set(value) {\n        // Bug #52: Chrome, Edge, Opera & Safari do not throw an exception at all.\n        // Bug #54: Firefox does throw an IndexSizeError.\n        if (this._isNodeOfNativeOfflineAudioContext) {\n          throw createInvalidStateError();\n        } // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n\n\n        if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n          throw createIndexSizeError();\n        }\n\n        this._nativeAudioDestinationNode.channelCount = value;\n      }\n    }, {\n      key: \"channelCountMode\",\n      get: function get() {\n        return this._nativeAudioDestinationNode.channelCountMode;\n      },\n      set: function set(value) {\n        // Bug #53: No browser does throw an exception yet.\n        if (this._isNodeOfNativeOfflineAudioContext) {\n          throw createInvalidStateError();\n        }\n\n        this._nativeAudioDestinationNode.channelCountMode = value;\n      }\n    }, {\n      key: \"maxChannelCount\",\n      get: function get() {\n        return this._nativeAudioDestinationNode.maxChannelCount;\n      }\n    }]);\n\n    return AudioDestinationNode;\n  }(audioNodeConstructor);\n};","map":{"version":3,"sources":["../../../src/factories/audio-destination-node-constructor.ts"],"names":[],"mappings":";;;;AASA,OAAO,IAAM,qCAAqC,GAA4C,SAAjF,qCAAiF,CAC1F,oBAD0F,EAE1F,kCAF0F,EAG1F,oBAH0F,EAI1F,uBAJ0F,EAK1F,gCAL0F,EAM1F,gBAN0F,EAO1F,2BAP0F,EAQ1F,uBAR0F,EAS1F;AACA;AAAA;;AAAA;;AAKI,kCAAY,OAAZ,EAAwB,YAAxB,EAA4C;AAAA;;AAAA;;AACxC,UAAM,aAAa,GAAG,gBAAgB,CAAC,OAAD,CAAtC;AACA,UAAM,SAAS,GAAG,2BAA2B,CAAC,aAAD,CAA7C;AACA,UAAM,0BAA0B,GAAG,gCAAgC,CAAC,aAAD,EAAgB,YAAhB,EAA8B,SAA9B,CAAnE;AACA,UAAM,4BAA4B,GAC7B,SAAS,GAAG,kCAAkC,CAAC,uBAAD,CAArC,GAAiE,IAD/E;AAIA,gCAAM,OAAN,EAAe,KAAf,EAAsB,0BAAtB,EAAkD,4BAAlD;AAEA,YAAK,kCAAL,GAA0C,SAA1C;AACA,YAAK,2BAAL,GAAmC,0BAAnC;AAXwC;AAY3C;;AAjBL;AAAA;AAAA,0BAmBoB;AACZ,eAAO,KAAK,2BAAL,CAAiC,YAAxC;AACH,OArBL;AAAA,wBAuBqB,KAvBrB,EAuB0B;AAClB;AACA;AACA,YAAI,KAAK,kCAAT,EAA6C;AACzC,gBAAM,uBAAuB,EAA7B;AACH,SALiB,CAOlB;;;AACA,YAAI,KAAK,GAAG,KAAK,2BAAL,CAAiC,eAA7C,EAA8D;AAC1D,gBAAM,oBAAoB,EAA1B;AACH;;AAED,aAAK,2BAAL,CAAiC,YAAjC,GAAgD,KAAhD;AACH;AApCL;AAAA;AAAA,0BAsCwB;AAChB,eAAO,KAAK,2BAAL,CAAiC,gBAAxC;AACH,OAxCL;AAAA,wBA0CyB,KA1CzB,EA0C8B;AACtB;AACA,YAAI,KAAK,kCAAT,EAA6C;AACzC,gBAAM,uBAAuB,EAA7B;AACH;;AAED,aAAK,2BAAL,CAAiC,gBAAjC,GAAoD,KAApD;AACH;AAjDL;AAAA;AAAA,0BAmDuB;AACf,eAAO,KAAK,2BAAL,CAAiC,eAAxC;AACH;AArDL;;AAAA;AAAA,IAA8D,oBAA9D;AAuDH,CAjEM","sourceRoot":"","sourcesContent":["export const createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) => {\n    return class AudioDestinationNode extends audioNodeConstructor {\n        constructor(context, channelCount) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = ((isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null));\n            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n        get channelCount() {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge, Opera & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            // Bug #47: The AudioDestinationNode in Safari does not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n        get maxChannelCount() {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n//# sourceMappingURL=audio-destination-node-constructor.js.map"]},"metadata":{},"sourceType":"module"}