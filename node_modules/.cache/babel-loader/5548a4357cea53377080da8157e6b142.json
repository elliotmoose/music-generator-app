{"ast":null,"code":"import _classCallCheck from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { noOp } from \"../util/Interface\";\n/**\n * TransportEvent is an internal class used by [[Transport]]\n * to schedule events. Do no invoke this class directly, it is\n * handled from within Tone.Transport.\n */\n\nexport var TransportEvent = /*#__PURE__*/function () {\n  /**\n   * @param transport The transport object which the event belongs to\n   */\n  function TransportEvent(transport, opts) {\n    _classCallCheck(this, TransportEvent);\n\n    /**\n     * The unique id of the event\n     */\n    this.id = TransportEvent._eventId++;\n    var options = Object.assign(TransportEvent.getDefaults(), opts);\n    this.transport = transport;\n    this.callback = options.callback;\n    this._once = options.once;\n    this.time = options.time;\n  }\n\n  _createClass(TransportEvent, [{\n    key: \"invoke\",\n\n    /**\n     * Invoke the event callback.\n     * @param  time  The AudioContext time in seconds of the event\n     */\n    value: function invoke(time) {\n      if (this.callback) {\n        this.callback(time);\n\n        if (this._once) {\n          this.transport.clear(this.id);\n        }\n      }\n    }\n    /**\n     * Clean up\n     */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.callback = undefined;\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return {\n        callback: noOp,\n        once: false,\n        time: 0\n      };\n    }\n  }]);\n\n  return TransportEvent;\n}();\n/**\n * Current ID counter\n */\n\nTransportEvent._eventId = 0;","map":{"version":3,"sources":["../../../../Tone/core/clock/TransportEvent.ts"],"names":[],"mappings":";;AACA,SAAS,IAAT,QAAqB,mBAArB;AAUA;;;;AAIG;;AACH,WAAa,cAAb;AA2BC;;AAEG;AACH,0BAAY,SAAZ,EAAkC,IAAlC,EAAsE;AAAA;;AAvBtE;;AAEG;AACH,SAAA,EAAA,GAAa,cAAc,CAAC,QAAf,EAAb;AAsBC,QAAM,OAAO,GAA0B,MAAM,CAAC,MAAP,CAAc,cAAc,CAAC,WAAf,EAAd,EAA4C,IAA5C,CAAvC;AAEA,SAAK,SAAL,GAAiB,SAAjB;AACA,SAAK,QAAL,GAAgB,OAAO,CAAC,QAAxB;AACA,SAAK,KAAL,GAAa,OAAO,CAAC,IAArB;AACA,SAAK,IAAL,GAAY,OAAO,CAAC,IAApB;AACA;;AAtCF;AAAA;;AAqDC;;;AAGG;AAxDJ,2BAyDQ,IAzDR,EAyDqB;AACnB,UAAI,KAAK,QAAT,EAAmB;AAClB,aAAK,QAAL,CAAc,IAAd;;AACA,YAAI,KAAK,KAAT,EAAgB;AACf,eAAK,SAAL,CAAe,KAAf,CAAqB,KAAK,EAA1B;AACA;AACD;AACD;AAED;;AAEG;;AApEJ;AAAA;AAAA,8BAqEQ;AACN,WAAK,QAAL,GAAgB,SAAhB;AACA,aAAO,IAAP;AACA;AAxEF;AAAA;AAAA,kCAwCmB;AACjB,aAAO;AACN,QAAA,QAAQ,EAAE,IADJ;AAEN,QAAA,IAAI,EAAE,KAFA;AAGN,QAAA,IAAI,EAAE;AAHA,OAAP;AAKA;AA9CF;;AAAA;AAAA;AAgDC;;AAEG;;AACY,cAAA,CAAA,QAAA,GAAW,CAAX","sourceRoot":"","sourcesContent":["import { noOp } from \"../util/Interface\";\n/**\n * TransportEvent is an internal class used by [[Transport]]\n * to schedule events. Do no invoke this class directly, it is\n * handled from within Tone.Transport.\n */\nexport class TransportEvent {\n    /**\n     * @param transport The transport object which the event belongs to\n     */\n    constructor(transport, opts) {\n        /**\n         * The unique id of the event\n         */\n        this.id = TransportEvent._eventId++;\n        const options = Object.assign(TransportEvent.getDefaults(), opts);\n        this.transport = transport;\n        this.callback = options.callback;\n        this._once = options.once;\n        this.time = options.time;\n    }\n    static getDefaults() {\n        return {\n            callback: noOp,\n            once: false,\n            time: 0,\n        };\n    }\n    /**\n     * Invoke the event callback.\n     * @param  time  The AudioContext time in seconds of the event\n     */\n    invoke(time) {\n        if (this.callback) {\n            this.callback(time);\n            if (this._once) {\n                this.transport.clear(this.id);\n            }\n        }\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        this.callback = undefined;\n        return this;\n    }\n}\n/**\n * Current ID counter\n */\nTransportEvent._eventId = 0;\n//# sourceMappingURL=TransportEvent.js.map"]},"metadata":{},"sourceType":"module"}