{"ast":null,"code":"var knowledge = require('./knowledge');\n\nvar vector = require('./vector');\n\nvar toCoord = require('interval-coords');\n\nfunction Interval(coord) {\n  if (!(this instanceof Interval)) return new Interval(coord);\n  this.coord = coord;\n}\n\nInterval.prototype = {\n  name: function () {\n    return knowledge.intervalsIndex[this.number() - 1];\n  },\n  semitones: function () {\n    return vector.sum(vector.mul(this.coord, [12, 7]));\n  },\n  number: function () {\n    return Math.abs(this.value());\n  },\n  value: function () {\n    var without = vector.sub(this.coord, vector.mul(knowledge.sharp, Math.floor((this.coord[1] - 2) / 7) + 1)),\n        i,\n        val;\n    i = knowledge.intervalFromFifth[without[1] + 5];\n    val = knowledge.stepNumber[i] + (without[0] - knowledge.intervals[i][0]) * 7;\n    return val > 0 ? val : val - 2;\n  },\n  type: function () {\n    return knowledge.intervals[this.base()][0] <= 1 ? 'perfect' : 'minor';\n  },\n  base: function () {\n    var fifth = vector.sub(this.coord, vector.mul(knowledge.sharp, this.qualityValue()))[1],\n        name;\n    fifth = this.value() > 0 ? fifth + 5 : -(fifth - 5) % 7;\n    fifth = fifth < 0 ? knowledge.intervalFromFifth.length + fifth : fifth;\n    name = knowledge.intervalFromFifth[fifth];\n    if (name === 'unison' && this.number() >= 8) name = 'octave';\n    return name;\n  },\n  direction: function (dir) {\n    if (dir) {\n      var is = this.value() >= 1 ? 'up' : 'down';\n      if (is !== dir) this.coord = vector.mul(this.coord, -1);\n      return this;\n    } else return this.value() >= 1 ? 'up' : 'down';\n  },\n  simple: function (ignore) {\n    // Get the (upwards) base interval (with quality)\n    var simple = knowledge.intervals[this.base()];\n    simple = vector.add(simple, vector.mul(knowledge.sharp, this.qualityValue())); // Turn it around if necessary\n\n    if (!ignore) simple = this.direction() === 'down' ? vector.mul(simple, -1) : simple;\n    return new Interval(simple);\n  },\n  isCompound: function () {\n    return this.number() > 8;\n  },\n  octaves: function () {\n    var without, octaves;\n\n    if (this.direction() === 'up') {\n      without = vector.sub(this.coord, vector.mul(knowledge.sharp, this.qualityValue()));\n      octaves = without[0] - knowledge.intervals[this.base()][0];\n    } else {\n      without = vector.sub(this.coord, vector.mul(knowledge.sharp, -this.qualityValue()));\n      octaves = -(without[0] + knowledge.intervals[this.base()][0]);\n    }\n\n    return octaves;\n  },\n  invert: function () {\n    var i = this.base();\n    var qual = this.qualityValue();\n    var acc = this.type() === 'minor' ? -(qual - 1) : -qual;\n    var coord = knowledge.intervals[knowledge.intervalsIndex[9 - knowledge.stepNumber[i] - 1]];\n    coord = vector.add(coord, vector.mul(knowledge.sharp, acc));\n    return new Interval(coord);\n  },\n  quality: function (lng) {\n    var quality = knowledge.alterations[this.type()][this.qualityValue() + 2];\n    return lng ? knowledge.qualityLong[quality] : quality;\n  },\n  qualityValue: function () {\n    if (this.direction() === 'down') return Math.floor((-this.coord[1] - 2) / 7) + 1;else return Math.floor((this.coord[1] - 2) / 7) + 1;\n  },\n  equal: function (interval) {\n    return this.coord[0] === interval.coord[0] && this.coord[1] === interval.coord[1];\n  },\n  greater: function (interval) {\n    var semi = this.semitones();\n    var isemi = interval.semitones(); // If equal in absolute size, measure which interval is bigger\n    // For example P4 is bigger than A3\n\n    return semi === isemi ? this.number() > interval.number() : semi > isemi;\n  },\n  smaller: function (interval) {\n    return !this.equal(interval) && !this.greater(interval);\n  },\n  add: function (interval) {\n    return new Interval(vector.add(this.coord, interval.coord));\n  },\n  toString: function (ignore) {\n    // If given true, return the positive value\n    var number = ignore ? this.number() : this.value();\n    return this.quality() + number;\n  }\n};\n\nInterval.toCoord = function (simple) {\n  var coord = toCoord(simple);\n  if (!coord) throw new Error('Invalid simple format interval');\n  return new Interval(coord);\n};\n\nInterval.from = function (from, to) {\n  return from.interval(to);\n};\n\nInterval.between = function (from, to) {\n  return new Interval(vector.sub(to.coord, from.coord));\n};\n\nInterval.invert = function (sInterval) {\n  return Interval.toCoord(sInterval).invert().toString();\n};\n\nmodule.exports = Interval;","map":{"version":3,"sources":["/Users/thebe/Desktop/music-generator-app/node_modules/teoria/lib/interval.js"],"names":["knowledge","require","vector","toCoord","Interval","coord","prototype","name","intervalsIndex","number","semitones","sum","mul","Math","abs","value","without","sub","sharp","floor","i","val","intervalFromFifth","stepNumber","intervals","type","base","fifth","qualityValue","length","direction","dir","is","simple","ignore","add","isCompound","octaves","invert","qual","acc","quality","lng","alterations","qualityLong","equal","interval","greater","semi","isemi","smaller","toString","Error","from","to","between","sInterval","module","exports"],"mappings":"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","sourcesContent":["var knowledge = require('./knowledge');\nvar vector = require('./vector');\nvar toCoord = require('interval-coords');\n\nfunction Interval(coord) {\n  if (!(this instanceof Interval)) return new Interval(coord);\n  this.coord = coord;\n}\n\nInterval.prototype = {\n  name: function() {\n    return knowledge.intervalsIndex[this.number() - 1];\n  },\n\n  semitones: function() {\n    return vector.sum(vector.mul(this.coord, [12, 7]));\n  },\n\n  number: function() {\n    return Math.abs(this.value());\n  },\n\n  value: function() {\n    var without = vector.sub(this.coord,\n      vector.mul(knowledge.sharp, Math.floor((this.coord[1] - 2) / 7) + 1))\n      , i, val;\n\n    i = knowledge.intervalFromFifth[without[1] + 5];\n    val = knowledge.stepNumber[i] + (without[0] - knowledge.intervals[i][0]) * 7;\n\n    return (val > 0) ? val : val - 2;\n  },\n\n  type: function() {\n    return knowledge.intervals[this.base()][0] <= 1 ? 'perfect' : 'minor';\n  },\n\n  base: function() {\n    var fifth = vector.sub(this.coord, vector.mul(knowledge.sharp, this.qualityValue()))[1], name;\n    fifth = this.value() > 0 ? fifth + 5 : -(fifth - 5) % 7;\n    fifth = fifth < 0 ? knowledge.intervalFromFifth.length + fifth : fifth;\n\n    name = knowledge.intervalFromFifth[fifth];\n    if (name === 'unison' && this.number() >= 8)\n      name = 'octave';\n\n    return name;\n  },\n\n  direction: function(dir) {\n    if (dir) {\n      var is = this.value() >= 1 ? 'up' : 'down';\n      if (is !== dir)\n        this.coord = vector.mul(this.coord, -1);\n\n      return this;\n    }\n    else\n      return this.value() >= 1 ? 'up' : 'down';\n  },\n\n  simple: function(ignore) {\n    // Get the (upwards) base interval (with quality)\n    var simple = knowledge.intervals[this.base()];\n    simple = vector.add(simple, vector.mul(knowledge.sharp, this.qualityValue()));\n\n    // Turn it around if necessary\n    if (!ignore)\n      simple = this.direction() === 'down' ? vector.mul(simple, -1) : simple;\n\n    return new Interval(simple);\n  },\n\n  isCompound: function() {\n    return this.number() > 8;\n  },\n\n  octaves: function() {\n    var without, octaves;\n\n    if (this.direction() === 'up') {\n      without = vector.sub(this.coord, vector.mul(knowledge.sharp, this.qualityValue()));\n      octaves = without[0] - knowledge.intervals[this.base()][0];\n    } else {\n      without = vector.sub(this.coord, vector.mul(knowledge.sharp, -this.qualityValue()));\n      octaves = -(without[0] + knowledge.intervals[this.base()][0]);\n    }\n\n    return octaves;\n  },\n\n  invert: function() {\n    var i = this.base();\n    var qual = this.qualityValue();\n    var acc = this.type() === 'minor' ? -(qual - 1) : -qual;\n    var coord = knowledge.intervals[knowledge.intervalsIndex[9 - knowledge.stepNumber[i] - 1]];\n    coord = vector.add(coord, vector.mul(knowledge.sharp, acc));\n\n    return new Interval(coord);\n  },\n\n  quality: function(lng) {\n    var quality = knowledge.alterations[this.type()][this.qualityValue() + 2];\n\n    return lng ? knowledge.qualityLong[quality] : quality;\n  },\n\n  qualityValue: function() {\n    if (this.direction() === 'down')\n      return Math.floor((-this.coord[1] - 2) / 7) + 1;\n    else\n      return Math.floor((this.coord[1] - 2) / 7) + 1;\n  },\n\n  equal: function(interval) {\n      return this.coord[0] === interval.coord[0] &&\n          this.coord[1] === interval.coord[1];\n  },\n\n  greater: function(interval) {\n    var semi = this.semitones();\n    var isemi = interval.semitones();\n\n    // If equal in absolute size, measure which interval is bigger\n    // For example P4 is bigger than A3\n    return (semi === isemi) ?\n      (this.number() > interval.number()) : (semi > isemi);\n  },\n\n  smaller: function(interval) {\n    return !this.equal(interval) && !this.greater(interval);\n  },\n\n  add: function(interval) {\n    return new Interval(vector.add(this.coord, interval.coord));\n  },\n\n  toString: function(ignore) {\n    // If given true, return the positive value\n    var number = ignore ? this.number() : this.value();\n\n    return this.quality() + number;\n  }\n}\n\nInterval.toCoord = function(simple) {\n  var coord = toCoord(simple);\n  if (!coord)\n    throw new Error('Invalid simple format interval');\n\n  return new Interval(coord);\n}\n\nInterval.from = function(from, to) {\n  return from.interval(to);\n}\n\nInterval.between = function(from, to) {\n  return new Interval(vector.sub(to.coord, from.coord));\n}\n\nInterval.invert = function(sInterval) {\n  return Interval.toCoord(sInterval).invert().toString();\n}\n\nmodule.exports = Interval;\n"]},"metadata":{},"sourceType":"script"}