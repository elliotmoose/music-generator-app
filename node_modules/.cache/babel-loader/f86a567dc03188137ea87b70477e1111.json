{"ast":null,"code":"var handler = {\n  construct: function construct() {\n    return handler;\n  }\n};\nexport var isConstructible = function isConstructible(constructible) {\n  try {\n    var proxy = new Proxy(constructible, handler);\n    new proxy(); // tslint:disable-line:no-unused-expression\n  } catch (_unused) {\n    return false;\n  }\n\n  return true;\n};","map":{"version":3,"sources":["../../../src/helpers/is-constructible.ts"],"names":[],"mappings":"AAEA,IAAM,OAAO,GAAG;AACZ,EAAA,SADY,uBACH;AACL,WAAO,OAAP;AACH;AAHW,CAAhB;AAMA,OAAO,IAAM,eAAe,GAAG,SAAlB,eAAkB,CAAC,aAAD,EAAyC;AACpE,MAAI;AACA,QAAM,KAAK,GAAG,IAAI,KAAJ,CAAU,aAAV,EAAyB,OAAzB,CAAd;AAEA,QAAI,KAAJ,GAHA,CAGa;AAChB,GAJD,CAIE,gBAAM;AACJ,WAAO,KAAP;AACH;;AAED,SAAO,IAAP;AACH,CAVM","sourceRoot":"","sourcesContent":["const handler = {\n    construct() {\n        return handler;\n    }\n};\nexport const isConstructible = (constructible) => {\n    try {\n        const proxy = new Proxy(constructible, handler);\n        new proxy(); // tslint:disable-line:no-unused-expression\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=is-constructible.js.map"]},"metadata":{},"sourceType":"module"}