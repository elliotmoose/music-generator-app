{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/thebe/Desktop/music-generator-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport Player from './Player';\nimport * as Tone from 'tone';\nlet interval;\n\nfunction App() {\n  _s();\n\n  const [play, setPlay] = useState(false);\n  const [player, setPlayer] = useState(new Player());\n  const [notes, setNotes] = useState([]);\n  const [playheadTime, setPlayheadTime] = useState(0);\n  useEffect(() => {\n    player.setup();\n    setPlayer(player);\n\n    if (!interval) {\n      setInterval(() => {\n        setPlayheadTime(Tone.context.currentTime * DURATION_FACTOR);\n      }, 10);\n    }\n  }, []);\n  useEffect(() => {\n    if (play) {\n      (async () => {\n        setNotes(await player.notesFromMidiFile('ABeautifulFriendship.mid'));\n        await player.playMidiFile('ABeautifulFriendship.mid');\n      })();\n\n      setPlay(false);\n    }\n  }, [play]);\n  const MAX_MIDI = 91;\n  const NOTE_HEIGHT = 20;\n  const DURATION_FACTOR = 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"30%\",\n          textTransform: \"uppercase\"\n        },\n        children: \"2.5K only music generation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), notes.map((note, i) => {\n      // const noteDescription = `${note.name} note: ${note.midi} dur:${note.duration} time:${note.time}`\n      const noteDescription = `${note.name}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          left: note.time * DURATION_FACTOR - playheadTime,\n          top: MAX_MIDI * NOTE_HEIGHT - note.midi * NOTE_HEIGHT,\n          width: note.duration * DURATION_FACTOR,\n          height: NOTE_HEIGHT,\n          backgroundColor: 'tomato'\n        },\n        children: noteDescription\n      }, `${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4KnhUEkxzUy5VWZsx7tDXP4YHE8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/thebe/Desktop/music-generator-app/src/App.js"],"names":["useEffect","useState","Player","Tone","interval","App","play","setPlay","player","setPlayer","notes","setNotes","playheadTime","setPlayheadTime","setup","setInterval","context","currentTime","DURATION_FACTOR","notesFromMidiFile","playMidiFile","MAX_MIDI","NOTE_HEIGHT","width","textTransform","map","note","i","noteDescription","name","position","left","time","top","midi","duration","height","backgroundColor"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AAEA,IAAIC,QAAJ;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,IAAIC,MAAJ,EAAD,CAApC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,CAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,MAAM,CAACM,KAAP;AACAL,IAAAA,SAAS,CAACD,MAAD,CAAT;;AAEA,QAAI,CAACJ,QAAL,EAAe;AACbW,MAAAA,WAAW,CAAC,MAAM;AAChBF,QAAAA,eAAe,CAACV,IAAI,CAACa,OAAL,CAAaC,WAAb,GAA2BC,eAA5B,CAAf;AACD,OAFU,EAER,EAFQ,CAAX;AAGD;AACF,GATQ,EASN,EATM,CAAT;AAWAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,IAAJ,EAAU;AAER,OAAC,YAAY;AACXK,QAAAA,QAAQ,CAAC,MAAMH,MAAM,CAACW,iBAAP,CAAyB,0BAAzB,CAAP,CAAR;AACA,cAAMX,MAAM,CAACY,YAAP,CAAoB,0BAApB,CAAN;AACD,OAHD;;AAKAb,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,GAVQ,EAUN,CAACD,IAAD,CAVM,CAAT;AAYA,QAAMe,QAAQ,GAAG,EAAjB;AACA,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMJ,eAAe,GAAG,GAAxB;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACI;AAAK,QAAA,KAAK,EAAE;AAACK,UAAAA,KAAK,EAAC,KAAP;AAAaC,UAAAA,aAAa,EAAC;AAA3B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADF,EAOGd,KAAK,CAACe,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAa;AACtB;AACA,YAAMC,eAAe,GAAI,GAAEF,IAAI,CAACG,IAAK,EAArC;AACA,0BAAO;AAEL,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,UAAZ;AAAwBC,UAAAA,IAAI,EAAEL,IAAI,CAACM,IAAL,GAAYd,eAAZ,GAA8BN,YAA5D;AAA0EqB,UAAAA,GAAG,EAAEZ,QAAQ,GAAGC,WAAX,GAAyBI,IAAI,CAACQ,IAAL,GAAYZ,WAApH;AAAiIC,UAAAA,KAAK,EAAEG,IAAI,CAACS,QAAL,GAAgBjB,eAAxJ;AAAyKkB,UAAAA,MAAM,EAAEd,WAAjL;AAA8Le,UAAAA,eAAe,EAAE;AAA/M,SAFF;AAAA,kBAGLT;AAHK,SACC,GAAED,CAAE,EADL;AAAA;AAAA;AAAA;AAAA,cAAP;AAID,KAPA,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAtDQtB,G;;KAAAA,G;AAwDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react'\nimport Player from './Player';\nimport * as Tone from 'tone'\n\nlet interval;\nfunction App() {\n  const [play, setPlay] = useState(false)\n  const [player, setPlayer] = useState(new Player());\n  const [notes, setNotes] = useState([]);\n  const [playheadTime, setPlayheadTime] = useState(0);\n\n  useEffect(() => {\n    player.setup();\n    setPlayer(player);\n    \n    if (!interval) {\n      setInterval(() => {\n        setPlayheadTime(Tone.context.currentTime * DURATION_FACTOR)\n      }, 10);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (play) {\n\n      (async () => {\n        setNotes(await player.notesFromMidiFile('ABeautifulFriendship.mid'));\n        await player.playMidiFile('ABeautifulFriendship.mid');\n      })()\n\n      setPlay(false);\n    }\n  }, [play])\n\n  const MAX_MIDI = 91\n  const NOTE_HEIGHT = 20\n  const DURATION_FACTOR = 100\n\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n          <div style={{width:\"30%\",textTransform:\"uppercase\"}}>2.5K only music generation</div>\n      </div>\n      {/* <button onClick={() => setPlay(true)}>begin</button>    */}\n\n      {/* <div style={{height: '100%', width: 4, position: 'absolute', left: playheadTime, top: 0, backgroundColor: 'black', transition: '0.2s', zIndex: 999}}/> */}\n      {notes.map((note, i) => {\n        // const noteDescription = `${note.name} note: ${note.midi} dur:${note.duration} time:${note.time}`\n        const noteDescription = `${note.name}`\n        return <div\n          key={`${i}`}\n          style={{ position: 'absolute', left: note.time * DURATION_FACTOR - playheadTime, top: MAX_MIDI * NOTE_HEIGHT - note.midi * NOTE_HEIGHT, width: note.duration * DURATION_FACTOR, height: NOTE_HEIGHT, backgroundColor: 'tomato' }}\n        >{noteDescription}</div>\n      }\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}