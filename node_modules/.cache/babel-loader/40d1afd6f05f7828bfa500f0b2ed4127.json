{"ast":null,"code":"import _classCallCheck from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nexport var createMediaStreamAudioSourceNodeConstructor = function createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(MediaStreamAudioSourceNode, _audioNodeConstructor);\n\n    var _super = _createSuper(MediaStreamAudioSourceNode);\n\n    function MediaStreamAudioSourceNode(context, options) {\n      var _this;\n\n      _classCallCheck(this, MediaStreamAudioSourceNode);\n\n      var nativeContext = getNativeContext(context);\n      var nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options); // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        throw new TypeError();\n      }\n\n      _this = _super.call(this, context, true, nativeMediaStreamAudioSourceNode, null);\n      _this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n      return _this;\n    }\n\n    _createClass(MediaStreamAudioSourceNode, [{\n      key: \"mediaStream\",\n      get: function get() {\n        return this._nativeMediaStreamAudioSourceNode.mediaStream;\n      }\n    }]);\n\n    return MediaStreamAudioSourceNode;\n  }(audioNodeConstructor);\n};","map":{"version":3,"sources":["../../../src/factories/media-stream-audio-source-node-constructor.ts"],"names":[],"mappings":";;;;AAGA,OAAO,IAAM,2CAA2C,GAAkD,SAA7F,2CAA6F,CACtG,oBADsG,EAEtG,sCAFsG,EAGtG,gBAHsG,EAItG,2BAJsG,EAKtG;AACA;AAAA;;AAAA;;AAII,wCAAY,OAAZ,EAAwB,OAAxB,EAA+D;AAAA;;AAAA;;AAC3D,UAAM,aAAa,GAAG,gBAAgB,CAAC,OAAD,CAAtC;AACA,UAAM,gCAAgC,GAAG,sCAAsC,CAAC,aAAD,EAAgB,OAAhB,CAA/E,CAF2D,CAI3D;;AACA,UAAI,2BAA2B,CAAC,aAAD,CAA/B,EAAgD;AAC5C,cAAM,IAAI,SAAJ,EAAN;AACH;;AAED,gCAAM,OAAN,EAAe,IAAf,EAAqB,gCAArB,EAA8E,IAA9E;AAEA,YAAK,iCAAL,GAAyC,gCAAzC;AAX2D;AAY9D;;AAhBL;AAAA;AAAA,0BAkBmB;AACX,eAAO,KAAK,iCAAL,CAAuC,WAA9C;AACH;AApBL;;AAAA;AAAA,IAAgG,oBAAhG;AAsBH,CA5BM","sourceRoot":"","sourcesContent":["export const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            super(context, true, nativeMediaStreamAudioSourceNode, null);\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n        get mediaStream() {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-source-node-constructor.js.map"]},"metadata":{},"sourceType":"module"}