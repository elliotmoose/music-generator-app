{"ast":null,"code":"var Shader = require('./Shader');\n/**\n * @class\n * @memberof PIXI\n * @extends PIXI.Shader\n * @param shaderManager {ShaderManager} The webgl shader manager this shader works for.\n */\n\n\nfunction ComplexPrimitiveShader(shaderManager) {\n  Shader.call(this, shaderManager, // vertex shader\n  ['attribute vec2 aVertexPosition;', 'uniform mat3 translationMatrix;', 'uniform mat3 projectionMatrix;', 'uniform vec3 tint;', 'uniform float alpha;', 'uniform vec3 color;', 'varying vec4 vColor;', 'void main(void){', '   gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);', '   vColor = vec4(color * alpha * tint, alpha);', //\" * vec4(tint * alpha, alpha);',\n  '}'].join('\\n'), // fragment shader\n  ['precision mediump float;', 'varying vec4 vColor;', 'void main(void){', '   gl_FragColor = vColor;', '}'].join('\\n'), // custom uniforms\n  {\n    tint: {\n      type: '3f',\n      value: [0, 0, 0]\n    },\n    alpha: {\n      type: '1f',\n      value: 0\n    },\n    color: {\n      type: '3f',\n      value: [0, 0, 0]\n    },\n    translationMatrix: {\n      type: 'mat3',\n      value: new Float32Array(9)\n    },\n    projectionMatrix: {\n      type: 'mat3',\n      value: new Float32Array(9)\n    }\n  }, // attributes\n  {\n    aVertexPosition: 0\n  });\n}\n\nComplexPrimitiveShader.prototype = Object.create(Shader.prototype);\nComplexPrimitiveShader.prototype.constructor = ComplexPrimitiveShader;\nmodule.exports = ComplexPrimitiveShader;","map":{"version":3,"sources":["/Users/thebe/Desktop/music-generator-app/node_modules/pixi.js/src/core/renderers/webgl/shaders/ComplexPrimitiveShader.js"],"names":["Shader","require","ComplexPrimitiveShader","shaderManager","call","join","tint","type","value","alpha","color","translationMatrix","Float32Array","projectionMatrix","aVertexPosition","prototype","Object","create","constructor","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,sBAAT,CAAgCC,aAAhC,EACA;AACIH,EAAAA,MAAM,CAACI,IAAP,CAAY,IAAZ,EACID,aADJ,EAEI;AACA,GACI,iCADJ,EAGI,iCAHJ,EAII,gCAJJ,EAMI,oBANJ,EAOI,sBAPJ,EAQI,qBARJ,EAUI,sBAVJ,EAYI,kBAZJ,EAaI,0GAbJ,EAcI,gDAdJ,EAcqD;AACjD,KAfJ,EAgBEE,IAhBF,CAgBO,IAhBP,CAHJ,EAoBI;AACA,GACI,0BADJ,EAGI,sBAHJ,EAKI,kBALJ,EAMI,2BANJ,EAOI,GAPJ,EAQEA,IARF,CAQO,IARP,CArBJ,EA8BI;AACA;AACIC,IAAAA,IAAI,EAAI;AAAEC,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAArB,KADZ;AAEIC,IAAAA,KAAK,EAAG;AAAEF,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAFZ;AAGIE,IAAAA,KAAK,EAAG;AAAEH,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,KAAK,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL;AAArB,KAHZ;AAIIG,IAAAA,iBAAiB,EAAE;AAAEJ,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,KAAK,EAAE,IAAII,YAAJ,CAAiB,CAAjB;AAAvB,KAJvB;AAKIC,IAAAA,gBAAgB,EAAE;AAAEN,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,KAAK,EAAE,IAAII,YAAJ,CAAiB,CAAjB;AAAvB;AALtB,GA/BJ,EAsCI;AACA;AACIE,IAAAA,eAAe,EAAC;AADpB,GAvCJ;AA2CH;;AAEDZ,sBAAsB,CAACa,SAAvB,GAAmCC,MAAM,CAACC,MAAP,CAAcjB,MAAM,CAACe,SAArB,CAAnC;AACAb,sBAAsB,CAACa,SAAvB,CAAiCG,WAAjC,GAA+ChB,sBAA/C;AACAiB,MAAM,CAACC,OAAP,GAAiBlB,sBAAjB","sourcesContent":["var Shader = require('./Shader');\n\n/**\n * @class\n * @memberof PIXI\n * @extends PIXI.Shader\n * @param shaderManager {ShaderManager} The webgl shader manager this shader works for.\n */\nfunction ComplexPrimitiveShader(shaderManager)\n{\n    Shader.call(this,\n        shaderManager,\n        // vertex shader\n        [\n            'attribute vec2 aVertexPosition;',\n\n            'uniform mat3 translationMatrix;',\n            'uniform mat3 projectionMatrix;',\n\n            'uniform vec3 tint;',\n            'uniform float alpha;',\n            'uniform vec3 color;',\n\n            'varying vec4 vColor;',\n\n            'void main(void){',\n            '   gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);',\n            '   vColor = vec4(color * alpha * tint, alpha);',//\" * vec4(tint * alpha, alpha);',\n            '}'\n        ].join('\\n'),\n        // fragment shader\n        [\n            'precision mediump float;',\n\n            'varying vec4 vColor;',\n\n            'void main(void){',\n            '   gl_FragColor = vColor;',\n            '}'\n        ].join('\\n'),\n        // custom uniforms\n        {\n            tint:   { type: '3f', value: [0, 0, 0] },\n            alpha:  { type: '1f', value: 0 },\n            color:  { type: '3f', value: [0,0,0] },\n            translationMatrix: { type: 'mat3', value: new Float32Array(9) },\n            projectionMatrix: { type: 'mat3', value: new Float32Array(9) }\n        },\n        // attributes\n        {\n            aVertexPosition:0\n        }\n    );\n}\n\nComplexPrimitiveShader.prototype = Object.create(Shader.prototype);\nComplexPrimitiveShader.prototype.constructor = ComplexPrimitiveShader;\nmodule.exports = ComplexPrimitiveShader;\n"]},"metadata":{},"sourceType":"script"}