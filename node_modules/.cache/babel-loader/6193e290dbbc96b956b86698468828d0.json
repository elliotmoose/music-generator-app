{"ast":null,"code":"import _classCallCheck from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Split splits an incoming signal into the number of given channels.\n *\n * @example\n * const split = new Tone.Split();\n * // stereoSignal.connect(split);\n * @category Component\n */\n\nexport var Split = /*#__PURE__*/function (_ToneAudioNode) {\n  _inherits(Split, _ToneAudioNode);\n\n  var _super = _createSuper(Split);\n\n  function Split() {\n    var _this;\n\n    _classCallCheck(this, Split);\n\n    _this = _super.call(this, optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"]));\n    _this.name = \"Split\";\n    var options = optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"]);\n    _this._splitter = _this.input = _this.output = _this.context.createChannelSplitter(options.channels);\n    _this._internalChannels = [_this._splitter];\n    return _this;\n  }\n\n  _createClass(Split, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(Split.prototype), \"dispose\", this).call(this);\n\n      this._splitter.disconnect();\n\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(ToneAudioNode.getDefaults(), {\n        channels: 2\n      });\n    }\n  }]);\n\n  return Split;\n}(ToneAudioNode);","map":{"version":3,"sources":["../../../../Tone/component/channel/Split.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,aAAT,QAAoD,kCAApD;AACA,SAAS,oBAAT,QAAqC,0BAArC;AAMA;;;;;;;AAOG;;AACH,WAAa,KAAb;AAAA;;AAAA;;AAgBC,mBAAA;AAAA;;AAAA;;AACC,8BAAM,oBAAoB,CAAC,KAAK,CAAC,WAAN,EAAD,EAAsB,SAAtB,EAAiC,CAAC,UAAD,CAAjC,CAA1B;AAhBQ,UAAA,IAAA,GAAe,OAAf;AAiBR,QAAM,OAAO,GAAG,oBAAoB,CAAC,KAAK,CAAC,WAAN,EAAD,EAAsB,SAAtB,EAAiC,CAAC,UAAD,CAAjC,CAApC;AAEA,UAAK,SAAL,GAAiB,MAAK,KAAL,GAAa,MAAK,MAAL,GAAc,MAAK,OAAL,CAAa,qBAAb,CAAmC,OAAO,CAAC,QAA3C,CAA5C;AACA,UAAK,iBAAL,GAAyB,CAAC,MAAK,SAAN,CAAzB;AALD;AAMC;;AAtBF;AAAA;AAAA,8BA8BQ;AACN;;AACA,WAAK,SAAL,CAAe,UAAf;;AACA,aAAO,IAAP;AACA;AAlCF;AAAA;AAAA,kCAwBmB;AACjB,aAAO,MAAM,CAAC,MAAP,CAAc,aAAa,CAAC,WAAd,EAAd,EAA2C;AACjD,QAAA,QAAQ,EAAE;AADuC,OAA3C,CAAP;AAGA;AA5BF;;AAAA;AAAA,EAA2B,aAA3B","sourceRoot":"","sourcesContent":["import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Split splits an incoming signal into the number of given channels.\n *\n * @example\n * const split = new Tone.Split();\n * // stereoSignal.connect(split);\n * @category Component\n */\nexport class Split extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"]));\n        this.name = \"Split\";\n        const options = optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"]);\n        this._splitter = this.input = this.output = this.context.createChannelSplitter(options.channels);\n        this._internalChannels = [this._splitter];\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            channels: 2,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._splitter.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=Split.js.map"]},"metadata":{},"sourceType":"module"}