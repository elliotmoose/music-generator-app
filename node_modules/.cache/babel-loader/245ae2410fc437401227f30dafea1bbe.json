{"ast":null,"code":"var core = require('../../core'); // @see https://github.com/substack/brfs/issues/25\n\n\nvar fs = require('fs');\n/**\n * This filter applies a pixelate effect making display objects appear 'blocky'.\n *\n * @class\n * @extends PIXI.AbstractFilter\n * @memberof PIXI.filters\n */\n\n\nfunction PixelateFilter() {\n  core.AbstractFilter.call(this, // vertex shader\n  null, // fragment shader\n  fs.readFileSync(__dirname + '/pixelate.frag', 'utf8'), // custom uniforms\n  {\n    dimensions: {\n      type: '4fv',\n      value: new Float32Array([0, 0, 0, 0])\n    },\n    pixelSize: {\n      type: 'v2',\n      value: {\n        x: 10,\n        y: 10\n      }\n    }\n  });\n}\n\nPixelateFilter.prototype = Object.create(core.AbstractFilter.prototype);\nPixelateFilter.prototype.constructor = PixelateFilter;\nmodule.exports = PixelateFilter;\nObject.defineProperties(PixelateFilter.prototype, {\n  /**\n   * This a point that describes the size of the blocks.\n   * x is the width of the block and y is the height.\n   *\n   * @member {Point}\n   * @memberof PixelateFilter#\n   */\n  size: {\n    get: function () {\n      return this.uniforms.pixelSize.value;\n    },\n    set: function (value) {\n      this.uniforms.pixelSize.value = value;\n    }\n  }\n});","map":{"version":3,"sources":["/Users/thebe/Desktop/music-generator-app/node_modules/pixi.js/src/filters/pixelate/PixelateFilter.js"],"names":["core","require","fs","PixelateFilter","AbstractFilter","call","readFileSync","__dirname","dimensions","type","value","Float32Array","pixelSize","x","y","prototype","Object","create","constructor","module","exports","defineProperties","size","get","uniforms","set"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,YAAD,CAAlB,C,CACA;;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,cAAT,GACA;AACIH,EAAAA,IAAI,CAACI,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,EACI;AACA,MAFJ,EAGI;AACAH,EAAAA,EAAE,CAACI,YAAH,CAAgBC,SAAS,GAAG,gBAA5B,EAA8C,MAA9C,CAJJ,EAKI;AACA;AACIC,IAAAA,UAAU,EAAE;AAAEC,MAAAA,IAAI,EAAE,KAAR;AAAgBC,MAAAA,KAAK,EAAE,IAAIC,YAAJ,CAAiB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAjB;AAAvB,KADhB;AAEIC,IAAAA,SAAS,EAAG;AAAEH,MAAAA,IAAI,EAAE,IAAR;AAAgBC,MAAAA,KAAK,EAAE;AAAEG,QAAAA,CAAC,EAAE,EAAL;AAASC,QAAAA,CAAC,EAAE;AAAZ;AAAvB;AAFhB,GANJ;AAWH;;AAEDX,cAAc,CAACY,SAAf,GAA2BC,MAAM,CAACC,MAAP,CAAcjB,IAAI,CAACI,cAAL,CAAoBW,SAAlC,CAA3B;AACAZ,cAAc,CAACY,SAAf,CAAyBG,WAAzB,GAAuCf,cAAvC;AACAgB,MAAM,CAACC,OAAP,GAAiBjB,cAAjB;AAEAa,MAAM,CAACK,gBAAP,CAAwBlB,cAAc,CAACY,SAAvC,EAAkD;AAC9C;AACJ;AACA;AACA;AACA;AACA;AACA;AACIO,EAAAA,IAAI,EAAE;AACFC,IAAAA,GAAG,EAAE,YACL;AACI,aAAO,KAAKC,QAAL,CAAcZ,SAAd,CAAwBF,KAA/B;AACH,KAJC;AAKFe,IAAAA,GAAG,EAAE,UAAUf,KAAV,EACL;AACI,WAAKc,QAAL,CAAcZ,SAAd,CAAwBF,KAAxB,GAAgCA,KAAhC;AACH;AARC;AARwC,CAAlD","sourcesContent":["var core = require('../../core');\n// @see https://github.com/substack/brfs/issues/25\nvar fs = require('fs');\n\n/**\n * This filter applies a pixelate effect making display objects appear 'blocky'.\n *\n * @class\n * @extends PIXI.AbstractFilter\n * @memberof PIXI.filters\n */\nfunction PixelateFilter()\n{\n    core.AbstractFilter.call(this,\n        // vertex shader\n        null,\n        // fragment shader\n        fs.readFileSync(__dirname + '/pixelate.frag', 'utf8'),\n        // custom uniforms\n        {\n            dimensions: { type: '4fv',  value: new Float32Array([0, 0, 0, 0]) },\n            pixelSize:  { type: 'v2',   value: { x: 10, y: 10 } }\n        }\n    );\n}\n\nPixelateFilter.prototype = Object.create(core.AbstractFilter.prototype);\nPixelateFilter.prototype.constructor = PixelateFilter;\nmodule.exports = PixelateFilter;\n\nObject.defineProperties(PixelateFilter.prototype, {\n    /**\n     * This a point that describes the size of the blocks.\n     * x is the width of the block and y is the height.\n     *\n     * @member {Point}\n     * @memberof PixelateFilter#\n     */\n    size: {\n        get: function ()\n        {\n            return this.uniforms.pixelSize.value;\n        },\n        set: function (value)\n        {\n            this.uniforms.pixelSize.value = value;\n        }\n    }\n});\n"]},"metadata":{},"sourceType":"script"}