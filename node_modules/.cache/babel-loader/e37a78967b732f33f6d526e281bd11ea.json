{"ast":null,"code":"import _objectSpread from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar DEFAULT_OPTIONS = {\n  channelCount: 1,\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers',\n  numberOfInputs: 6\n};\nexport var createChannelMergerNodeConstructor = function createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(ChannelMergerNode, _audioNodeConstructor);\n\n    var _super = _createSuper(ChannelMergerNode);\n\n    function ChannelMergerNode(context, options) {\n      _classCallCheck(this, ChannelMergerNode);\n\n      var nativeContext = getNativeContext(context);\n\n      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n\n      var nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n      var channelMergerNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null;\n      return _super.call(this, context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n    }\n\n    return ChannelMergerNode;\n  }(audioNodeConstructor);\n};","map":{"version":3,"sources":["../../../src/factories/channel-merger-node-constructor.ts"],"names":[],"mappings":";;;;AAGA,IAAM,eAAe,GAAG;AACpB,EAAA,YAAY,EAAE,CADM;AAEpB,EAAA,gBAAgB,EAAE,UAFE;AAGpB,EAAA,qBAAqB,EAAE,UAHH;AAIpB,EAAA,cAAc,EAAE;AAJI,CAAxB;AAOA,OAAO,IAAM,kCAAkC,GAAyC,SAA3E,kCAA2E,CACpF,oBADoF,EAEpF,+BAFoF,EAGpF,6BAHoF,EAIpF,gBAJoF,EAKpF,2BALoF,EAMpF;AACA;AAAA;;AAAA;;AACI,+BAAY,OAAZ,EAAwB,OAAxB,EAAgE;AAAA;;AAC5D,UAAM,aAAa,GAAG,gBAAgB,CAAC,OAAD,CAAtC;;AACA,UAAM,aAAa,mCAAQ,eAAR,GAA4B,OAA5B,CAAnB;;AACA,UAAM,uBAAuB,GAAG,6BAA6B,CAAC,aAAD,EAAgB,aAAhB,CAA7D;AACA,UAAM,yBAAyB,GAC1B,2BAA2B,CAAC,aAAD,CAA3B,GAA6C,+BAA+B,EAA5E,GAAiF,IADtF;AAJ4D,+BAQtD,OARsD,EAQ7C,KAR6C,EAQtC,uBARsC,EAQb,yBARa;AAS/D;;AAVL;AAAA,IAA2D,oBAA3D;AAYH,CAnBM","sourceRoot":"","sourcesContent":["const DEFAULT_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 6\n};\nexport const createChannelMergerNodeConstructor = (audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class ChannelMergerNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n            const channelMergerNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null));\n            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=channel-merger-node-constructor.js.map"]},"metadata":{},"sourceType":"module"}