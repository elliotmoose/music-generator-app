{"ast":null,"code":"var core = require('../../core'); // @see https://github.com/substack/brfs/issues/25\n\n\nvar fs = require('fs');\n/**\n * This greyscales the palette of your Display Objects.\n *\n * @class\n * @extends PIXI.AbstractFilter\n * @memberof PIXI.filters\n */\n\n\nfunction GrayFilter() {\n  core.AbstractFilter.call(this, // vertex shader\n  null, // fragment shader\n  fs.readFileSync(__dirname + '/gray.frag', 'utf8'), // set the uniforms\n  {\n    gray: {\n      type: '1f',\n      value: 1\n    }\n  });\n}\n\nGrayFilter.prototype = Object.create(core.AbstractFilter.prototype);\nGrayFilter.prototype.constructor = GrayFilter;\nmodule.exports = GrayFilter;\nObject.defineProperties(GrayFilter.prototype, {\n  /**\n   * The strength of the gray. 1 will make the object black and white, 0 will make the object its normal color.\n   *\n   * @member {number}\n   * @memberof GrayFilter#\n   */\n  gray: {\n    get: function () {\n      return this.uniforms.gray.value;\n    },\n    set: function (value) {\n      this.uniforms.gray.value = value;\n    }\n  }\n});","map":{"version":3,"sources":["/Users/thebe/Desktop/music-generator-app/node_modules/pixi.js/src/filters/gray/GrayFilter.js"],"names":["core","require","fs","GrayFilter","AbstractFilter","call","readFileSync","__dirname","gray","type","value","prototype","Object","create","constructor","module","exports","defineProperties","get","uniforms","set"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,YAAD,CAAlB,C,CACA;;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,UAAT,GACA;AACIH,EAAAA,IAAI,CAACI,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,EACI;AACA,MAFJ,EAGI;AACAH,EAAAA,EAAE,CAACI,YAAH,CAAgBC,SAAS,GAAG,YAA5B,EAA0C,MAA1C,CAJJ,EAKI;AACA;AACIC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,KAAK,EAAE;AAArB;AADV,GANJ;AAUH;;AAEDP,UAAU,CAACQ,SAAX,GAAuBC,MAAM,CAACC,MAAP,CAAcb,IAAI,CAACI,cAAL,CAAoBO,SAAlC,CAAvB;AACAR,UAAU,CAACQ,SAAX,CAAqBG,WAArB,GAAmCX,UAAnC;AACAY,MAAM,CAACC,OAAP,GAAiBb,UAAjB;AAEAS,MAAM,CAACK,gBAAP,CAAwBd,UAAU,CAACQ,SAAnC,EAA8C;AAC1C;AACJ;AACA;AACA;AACA;AACA;AACIH,EAAAA,IAAI,EAAE;AACFU,IAAAA,GAAG,EAAE,YACL;AACI,aAAO,KAAKC,QAAL,CAAcX,IAAd,CAAmBE,KAA1B;AACH,KAJC;AAKFU,IAAAA,GAAG,EAAE,UAAUV,KAAV,EACL;AACI,WAAKS,QAAL,CAAcX,IAAd,CAAmBE,KAAnB,GAA2BA,KAA3B;AACH;AARC;AAPoC,CAA9C","sourcesContent":["var core = require('../../core');\n// @see https://github.com/substack/brfs/issues/25\nvar fs = require('fs');\n\n/**\n * This greyscales the palette of your Display Objects.\n *\n * @class\n * @extends PIXI.AbstractFilter\n * @memberof PIXI.filters\n */\nfunction GrayFilter()\n{\n    core.AbstractFilter.call(this,\n        // vertex shader\n        null,\n        // fragment shader\n        fs.readFileSync(__dirname + '/gray.frag', 'utf8'),\n        // set the uniforms\n        {\n            gray: { type: '1f', value: 1 }\n        }\n    );\n}\n\nGrayFilter.prototype = Object.create(core.AbstractFilter.prototype);\nGrayFilter.prototype.constructor = GrayFilter;\nmodule.exports = GrayFilter;\n\nObject.defineProperties(GrayFilter.prototype, {\n    /**\n     * The strength of the gray. 1 will make the object black and white, 0 will make the object its normal color.\n     *\n     * @member {number}\n     * @memberof GrayFilter#\n     */\n    gray: {\n        get: function ()\n        {\n            return this.uniforms.gray.value;\n        },\n        set: function (value)\n        {\n            this.uniforms.gray.value = value;\n        }\n    }\n});\n"]},"metadata":{},"sourceType":"script"}