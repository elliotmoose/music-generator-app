{"ast":null,"code":"import _classCallCheck from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * GainToAudio converts an input in NormalRange [0,1] to AudioRange [-1,1].\n * See [[AudioToGain]].\n * @category Signal\n */\n\nexport var GainToAudio = /*#__PURE__*/function (_SignalOperator) {\n  _inherits(GainToAudio, _SignalOperator);\n\n  var _super = _createSuper(GainToAudio);\n\n  function GainToAudio() {\n    var _this;\n\n    _classCallCheck(this, GainToAudio);\n\n    _this = _super.apply(this, arguments);\n    _this.name = \"GainToAudio\";\n    /**\n     * The node which converts the audio ranges\n     */\n\n    _this._norm = new WaveShaper({\n      context: _this.context,\n      mapping: function mapping(x) {\n        return Math.abs(x) * 2 - 1;\n      }\n    });\n    /**\n     * The NormalRange input [0, 1]\n     */\n\n    _this.input = _this._norm;\n    /**\n     * The AudioRange output [-1, 1]\n     */\n\n    _this.output = _this._norm;\n    return _this;\n  }\n  /**\n   * clean up\n   */\n\n\n  _createClass(GainToAudio, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(GainToAudio.prototype), \"dispose\", this).call(this);\n\n      this._norm.dispose();\n\n      return this;\n    }\n  }]);\n\n  return GainToAudio;\n}(SignalOperator);","map":{"version":3,"sources":["../../../Tone/signal/GainToAudio.ts"],"names":[],"mappings":";;;;;;AACA,SAAS,cAAT,QAA+B,kBAA/B;AACA,SAAS,UAAT,QAA2B,cAA3B;AAEA;;;;AAIG;;AACH,WAAa,WAAb;AAAA;;AAAA;;AAAA,yBAAA;AAAA;;AAAA;;;AAEU,UAAA,IAAA,GAAe,aAAf;AAET;;AAEG;;AACK,UAAA,KAAA,GAAQ,IAAI,UAAJ,CAAe;AAC9B,MAAA,OAAO,EAAE,MAAK,OADgB;AAE9B,MAAA,OAAO,EAAE,iBAAA,CAAC;AAAA,eAAI,IAAI,CAAC,GAAL,CAAS,CAAT,IAAc,CAAd,GAAkB,CAAtB;AAAA;AAFoB,KAAf,CAAR;AAKR;;AAEG;;AACH,UAAA,KAAA,GAAQ,MAAK,KAAb;AAEA;;AAEG;;AACH,UAAA,MAAA,GAAS,MAAK,KAAd;AApBD;AA8BC;AARA;;AAEG;;;AAxBJ;AAAA;AAAA,8BAyBQ;AACN;;AACA,WAAK,KAAL,CAAW,OAAX;;AACA,aAAO,IAAP;AACA;AA7BF;;AAAA;AAAA,EAAiC,cAAjC","sourceRoot":"","sourcesContent":["import { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * GainToAudio converts an input in NormalRange [0,1] to AudioRange [-1,1].\n * See [[AudioToGain]].\n * @category Signal\n */\nexport class GainToAudio extends SignalOperator {\n    constructor() {\n        super(...arguments);\n        this.name = \"GainToAudio\";\n        /**\n         * The node which converts the audio ranges\n         */\n        this._norm = new WaveShaper({\n            context: this.context,\n            mapping: x => Math.abs(x) * 2 - 1,\n        });\n        /**\n         * The NormalRange input [0, 1]\n         */\n        this.input = this._norm;\n        /**\n         * The AudioRange output [-1, 1]\n         */\n        this.output = this._norm;\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this._norm.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=GainToAudio.js.map"]},"metadata":{},"sourceType":"module"}