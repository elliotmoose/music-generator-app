{"ast":null,"code":"import _objectSpread from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'explicit',\n  channelInterpretation: 'speakers'\n};\nexport var createMediaStreamAudioDestinationNodeConstructor = function createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(MediaStreamAudioDestinationNode, _audioNodeConstructor);\n\n    var _super = _createSuper(MediaStreamAudioDestinationNode);\n\n    function MediaStreamAudioDestinationNode(context, options) {\n      var _this;\n\n      _classCallCheck(this, MediaStreamAudioDestinationNode);\n\n      var nativeContext = getNativeContext(context); // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        throw new TypeError();\n      }\n\n      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n\n      var nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n      _this = _super.call(this, context, false, nativeMediaStreamAudioDestinationNode, null);\n      _this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n      return _this;\n    }\n\n    _createClass(MediaStreamAudioDestinationNode, [{\n      key: \"stream\",\n      get: function get() {\n        return this._nativeMediaStreamAudioDestinationNode.stream;\n      }\n    }]);\n\n    return MediaStreamAudioDestinationNode;\n  }(audioNodeConstructor);\n};","map":{"version":3,"sources":["../../../src/factories/media-stream-audio-destination-node-constructor.ts"],"names":[],"mappings":";;;;;AAGA,IAAM,eAAe,GAAG;AACpB,EAAA,YAAY,EAAE,CADM;AAEpB,EAAA,gBAAgB,EAAE,UAFE;AAGpB,EAAA,qBAAqB,EAAE;AAHH,CAAxB;AAMA,OAAO,IAAM,gDAAgD,GAAuD,SAAvG,gDAAuG,CAChH,oBADgH,EAEhH,2CAFgH,EAGhH,gBAHgH,EAIhH,2BAJgH,EAKhH;AACA;AAAA;;AAAA;;AAII,6CAAY,OAAZ,EAAwB,OAAxB,EAA4D;AAAA;;AAAA;;AACxD,UAAM,aAAa,GAAG,gBAAgB,CAAC,OAAD,CAAtC,CADwD,CAGxD;;AACA,UAAI,2BAA2B,CAAC,aAAD,CAA/B,EAAgD;AAC5C,cAAM,IAAI,SAAJ,EAAN;AACH;;AAED,UAAM,aAAa,mCAAQ,eAAR,GAA4B,OAA5B,CAAnB;;AACA,UAAM,qCAAqC,GAAG,2CAA2C,CAAC,aAAD,EAAgB,aAAhB,CAAzF;AAEA,gCAAM,OAAN,EAAe,KAAf,EAAsB,qCAAtB,EAAoF,IAApF;AAEA,YAAK,sCAAL,GAA8C,qCAA9C;AAbwD;AAc3D;;AAlBL;AAAA;AAAA,0BAoBc;AACN,eAAO,KAAK,sCAAL,CAA4C,MAAnD;AACH;AAtBL;;AAAA;AAAA,IAAqG,oBAArG;AAwBH,CA9BM","sourceRoot":"","sourcesContent":["const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers'\n};\nexport const createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioDestinationNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n            super(context, false, nativeMediaStreamAudioDestinationNode, null);\n            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n        }\n        get stream() {\n            return this._nativeMediaStreamAudioDestinationNode.stream;\n        }\n    };\n};\n//# sourceMappingURL=media-stream-audio-destination-node-constructor.js.map"]},"metadata":{},"sourceType":"module"}