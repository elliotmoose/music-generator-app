{"ast":null,"code":"var core = require('../../core');\n/**\n * @class\n * @extends PIXI.Shader\n * @memberof PIXI.mesh\n * @param shaderManager {ShaderManager} The WebGL shader manager this shader works for.\n */\n\n\nfunction StripShader(shaderManager) {\n  core.Shader.call(this, shaderManager, // vertex shader\n  ['precision lowp float;', 'attribute vec2 aVertexPosition;', 'attribute vec2 aTextureCoord;', 'uniform mat3 translationMatrix;', 'uniform mat3 projectionMatrix;', 'varying vec2 vTextureCoord;', 'void main(void){', '   gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);', '   vTextureCoord = aTextureCoord;', '}'].join('\\n'), ['precision lowp float;', 'varying vec2 vTextureCoord;', 'uniform float alpha;', 'uniform sampler2D uSampler;', 'void main(void){', '   gl_FragColor = texture2D(uSampler, vTextureCoord) * alpha ;', '}'].join('\\n'), // custom uniforms\n  {\n    alpha: {\n      type: '1f',\n      value: 0\n    },\n    translationMatrix: {\n      type: 'mat3',\n      value: new Float32Array(9)\n    },\n    projectionMatrix: {\n      type: 'mat3',\n      value: new Float32Array(9)\n    }\n  }, // custom attributes\n  {\n    aVertexPosition: 0,\n    aTextureCoord: 0\n  });\n}\n\nStripShader.prototype = Object.create(core.Shader.prototype);\nStripShader.prototype.constructor = StripShader;\nmodule.exports = StripShader;\ncore.ShaderManager.registerPlugin('meshShader', StripShader);","map":{"version":3,"sources":["/Users/thebe/Desktop/music-generator-app/node_modules/pixi.js/src/mesh/webgl/MeshShader.js"],"names":["core","require","StripShader","shaderManager","Shader","call","join","alpha","type","value","translationMatrix","Float32Array","projectionMatrix","aVertexPosition","aTextureCoord","prototype","Object","create","constructor","module","exports","ShaderManager","registerPlugin"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,YAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,WAAT,CAAqBC,aAArB,EACA;AACIH,EAAAA,IAAI,CAACI,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,EACIF,aADJ,EAEI;AACA,GACI,uBADJ,EAEI,iCAFJ,EAGI,+BAHJ,EAKI,iCALJ,EAMI,gCANJ,EAQI,6BARJ,EAUI,kBAVJ,EAWI,0GAXJ,EAYI,mCAZJ,EAaI,GAbJ,EAcEG,IAdF,CAcO,IAdP,CAHJ,EAkBI,CACI,uBADJ,EAGI,6BAHJ,EAII,sBAJJ,EAMI,6BANJ,EAQI,kBARJ,EASI,gEATJ,EAUI,GAVJ,EAWEA,IAXF,CAWO,IAXP,CAlBJ,EA8BI;AACA;AACIC,IAAAA,KAAK,EAAG;AAAEC,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,KAAK,EAAE;AAArB,KADZ;AAEIC,IAAAA,iBAAiB,EAAE;AAAEF,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,KAAK,EAAE,IAAIE,YAAJ,CAAiB,CAAjB;AAAvB,KAFvB;AAGIC,IAAAA,gBAAgB,EAAE;AAAEJ,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,KAAK,EAAE,IAAIE,YAAJ,CAAiB,CAAjB;AAAvB;AAHtB,GA/BJ,EAoCI;AACA;AACIE,IAAAA,eAAe,EAAC,CADpB;AAEIC,IAAAA,aAAa,EAAC;AAFlB,GArCJ;AA0CH;;AAEDZ,WAAW,CAACa,SAAZ,GAAwBC,MAAM,CAACC,MAAP,CAAcjB,IAAI,CAACI,MAAL,CAAYW,SAA1B,CAAxB;AACAb,WAAW,CAACa,SAAZ,CAAsBG,WAAtB,GAAoChB,WAApC;AACAiB,MAAM,CAACC,OAAP,GAAiBlB,WAAjB;AAEAF,IAAI,CAACqB,aAAL,CAAmBC,cAAnB,CAAkC,YAAlC,EAAgDpB,WAAhD","sourcesContent":["var core = require('../../core');\n\n/**\n * @class\n * @extends PIXI.Shader\n * @memberof PIXI.mesh\n * @param shaderManager {ShaderManager} The WebGL shader manager this shader works for.\n */\nfunction StripShader(shaderManager)\n{\n    core.Shader.call(this,\n        shaderManager,\n        // vertex shader\n        [\n            'precision lowp float;',\n            'attribute vec2 aVertexPosition;',\n            'attribute vec2 aTextureCoord;',\n\n            'uniform mat3 translationMatrix;',\n            'uniform mat3 projectionMatrix;',\n\n            'varying vec2 vTextureCoord;',\n\n            'void main(void){',\n            '   gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);',\n            '   vTextureCoord = aTextureCoord;',\n            '}'\n        ].join('\\n'),\n        [\n            'precision lowp float;',\n\n            'varying vec2 vTextureCoord;',\n            'uniform float alpha;',\n\n            'uniform sampler2D uSampler;',\n\n            'void main(void){',\n            '   gl_FragColor = texture2D(uSampler, vTextureCoord) * alpha ;',\n            '}'\n        ].join('\\n'),\n        // custom uniforms\n        {\n            alpha:  { type: '1f', value: 0 },\n            translationMatrix: { type: 'mat3', value: new Float32Array(9) },\n            projectionMatrix: { type: 'mat3', value: new Float32Array(9) }\n        },\n        // custom attributes\n        {\n            aVertexPosition:0,\n            aTextureCoord:0\n        }\n    );\n}\n\nStripShader.prototype = Object.create(core.Shader.prototype);\nStripShader.prototype.constructor = StripShader;\nmodule.exports = StripShader;\n\ncore.ShaderManager.registerPlugin('meshShader', StripShader);\n"]},"metadata":{},"sourceType":"script"}