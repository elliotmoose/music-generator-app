{"ast":null,"code":"/**\n * @file        Main export of the PIXI extras library\n * @author      Mat Groves <mat@goodboydigital.com>\n * @copyright   2013-2015 GoodBoyDigital\n * @license     {@link https://github.com/GoodBoyDigital/pixi.js/blob/master/LICENSE|MIT License}\n */\nvar Ticker = require('./Ticker');\n/**\n * The shared ticker instance used by {@link PIXI.extras.MovieClip}.\n * and by {@link PIXI.interaction.InteractionManager}.\n * The property {@link PIXI.ticker.Ticker#autoStart} is set to `true`\n * for this instance. Please follow the examples for usage, including\n * how to opt-out of auto-starting the shared ticker.\n *\n * @example\n *     var ticker = PIXI.ticker.shared;\n *     // Set this to prevent starting this ticker when listeners are added.\n *     // By default this is true only for the PIXI.ticker.shared instance.\n *     ticker.autoStart = false;\n *     // FYI, call this to ensure the ticker is stopped. It should be stopped\n *     // if you have not attempted to render anything yet.\n *     ticker.stop();\n *     // Call this when you are ready for a running shared ticker.\n *     ticker.start();\n *\n * @example\n *     // You may use the shared ticker to render...\n *     var renderer = PIXI.autoDetectRenderer(800, 600);\n *     var stage = new PIXI.Container();\n *     var interactionManager = PIXI.interaction.InteractionManager(renderer);\n *     document.body.appendChild(renderer.view);\n *     ticker.add(function (time) {\n *         renderer.render(stage);\n *     });\n *\n * @example\n *     // Or you can just update it manually.\n *     ticker.autoStart = false;\n *     ticker.stop();\n *     function animate(time) {\n *         ticker.update(time);\n *         renderer.render(stage);\n *         requestAnimationFrame(animate);\n *     }\n *     animate(performance.now());\n *\n * @type {PIXI.ticker.Ticker}\n * @memberof PIXI.ticker\n */\n\n\nvar shared = new Ticker();\nshared.autoStart = true;\n/**\n * @namespace PIXI.ticker\n */\n\nmodule.exports = {\n  shared: shared,\n  Ticker: Ticker\n};","map":{"version":3,"sources":["/Users/thebe/Desktop/music-generator-app/node_modules/pixi.js/src/core/ticker/index.js"],"names":["Ticker","require","shared","autoStart","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,MAAM,GAAG,IAAIF,MAAJ,EAAb;AACAE,MAAM,CAACC,SAAP,GAAmB,IAAnB;AAEA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB;AACbH,EAAAA,MAAM,EAAEA,MADK;AAEbF,EAAAA,MAAM,EAAEA;AAFK,CAAjB","sourcesContent":["/**\n * @file        Main export of the PIXI extras library\n * @author      Mat Groves <mat@goodboydigital.com>\n * @copyright   2013-2015 GoodBoyDigital\n * @license     {@link https://github.com/GoodBoyDigital/pixi.js/blob/master/LICENSE|MIT License}\n */\nvar Ticker = require('./Ticker');\n\n/**\n * The shared ticker instance used by {@link PIXI.extras.MovieClip}.\n * and by {@link PIXI.interaction.InteractionManager}.\n * The property {@link PIXI.ticker.Ticker#autoStart} is set to `true`\n * for this instance. Please follow the examples for usage, including\n * how to opt-out of auto-starting the shared ticker.\n *\n * @example\n *     var ticker = PIXI.ticker.shared;\n *     // Set this to prevent starting this ticker when listeners are added.\n *     // By default this is true only for the PIXI.ticker.shared instance.\n *     ticker.autoStart = false;\n *     // FYI, call this to ensure the ticker is stopped. It should be stopped\n *     // if you have not attempted to render anything yet.\n *     ticker.stop();\n *     // Call this when you are ready for a running shared ticker.\n *     ticker.start();\n *\n * @example\n *     // You may use the shared ticker to render...\n *     var renderer = PIXI.autoDetectRenderer(800, 600);\n *     var stage = new PIXI.Container();\n *     var interactionManager = PIXI.interaction.InteractionManager(renderer);\n *     document.body.appendChild(renderer.view);\n *     ticker.add(function (time) {\n *         renderer.render(stage);\n *     });\n *\n * @example\n *     // Or you can just update it manually.\n *     ticker.autoStart = false;\n *     ticker.stop();\n *     function animate(time) {\n *         ticker.update(time);\n *         renderer.render(stage);\n *         requestAnimationFrame(animate);\n *     }\n *     animate(performance.now());\n *\n * @type {PIXI.ticker.Ticker}\n * @memberof PIXI.ticker\n */\nvar shared = new Ticker();\nshared.autoStart = true;\n\n/**\n * @namespace PIXI.ticker\n */\nmodule.exports = {\n    shared: shared,\n    Ticker: Ticker\n};\n"]},"metadata":{},"sourceType":"script"}