{"ast":null,"code":"import _classCallCheck from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { ToneAudioNode } from \"../context/ToneAudioNode\";\nimport { noOp } from \"../util/Interface\";\nimport { getWorkletGlobalScope } from \"./WorkletGlobalScope\";\nexport var ToneAudioWorklet = /*#__PURE__*/function (_ToneAudioNode) {\n  _inherits(ToneAudioWorklet, _ToneAudioNode);\n\n  var _super = _createSuper(ToneAudioWorklet);\n\n  function ToneAudioWorklet(options) {\n    var _this;\n\n    _classCallCheck(this, ToneAudioWorklet);\n\n    _this = _super.call(this, options);\n    _this.name = \"ToneAudioWorklet\";\n    /**\n     * The constructor options for the node\n     */\n\n    _this.workletOptions = {};\n    /**\n     * Callback which is invoked when there is an error in the processing\n     */\n\n    _this.onprocessorerror = noOp;\n    var blobUrl = URL.createObjectURL(new Blob([getWorkletGlobalScope()], {\n      type: \"text/javascript\"\n    }));\n\n    var name = _this._audioWorkletName();\n\n    _this._dummyGain = _this.context.createGain();\n    _this._dummyParam = _this._dummyGain.gain; // Register the processor\n\n    _this.context.addAudioWorkletModule(blobUrl, name).then(function () {\n      // create the worklet when it's read\n      if (!_this.disposed) {\n        _this._worklet = _this.context.createAudioWorkletNode(name, _this.workletOptions);\n        _this._worklet.onprocessorerror = _this.onprocessorerror.bind(_assertThisInitialized(_this));\n\n        _this.onReady(_this._worklet);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(ToneAudioWorklet, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(ToneAudioWorklet.prototype), \"dispose\", this).call(this);\n\n      this._dummyGain.disconnect();\n\n      if (this._worklet) {\n        this._worklet.port.postMessage(\"dispose\");\n\n        this._worklet.disconnect();\n      }\n\n      return this;\n    }\n  }]);\n\n  return ToneAudioWorklet;\n}(ToneAudioNode);","map":{"version":3,"sources":["../../../../Tone/core/worklet/ToneAudioWorklet.ts"],"names":[],"mappings":";;;;;;;AAAA,SAAS,aAAT,QAAoD,0BAApD;AACA,SAAS,IAAT,QAAqB,mBAArB;AACA,SAAS,qBAAT,QAAsC,sBAAtC;AAIA,WAAsB,gBAAtB;AAAA;;AAAA;;AAuCC,4BAAY,OAAZ,EAA4B;AAAA;;AAAA;;AAC3B,8BAAM,OAAN;AAtCQ,UAAA,IAAA,GAAe,kBAAf;AAiBT;;AAEG;;AACO,UAAA,cAAA,GAAmD,EAAnD;AAYV;;AAEG;;AACH,UAAA,gBAAA,GAAwC,IAAxC;AAKC,QAAM,OAAO,GAAG,GAAG,CAAC,eAAJ,CAAoB,IAAI,IAAJ,CAAS,CAAC,qBAAqB,EAAtB,CAAT,EAAoC;AAAE,MAAA,IAAI,EAAE;AAAR,KAApC,CAApB,CAAhB;;AACA,QAAM,IAAI,GAAG,MAAK,iBAAL,EAAb;;AAEA,UAAK,UAAL,GAAkB,MAAK,OAAL,CAAa,UAAb,EAAlB;AACA,UAAK,WAAL,GAAmB,MAAK,UAAL,CAAgB,IAAnC,CAP2B,CAS3B;;AACA,UAAK,OAAL,CAAa,qBAAb,CAAmC,OAAnC,EAA4C,IAA5C,EAAkD,IAAlD,CAAuD,YAAK;AAC3D;AACA,UAAI,CAAC,MAAK,QAAV,EAAoB;AACnB,cAAK,QAAL,GAAgB,MAAK,OAAL,CAAa,sBAAb,CAAoC,IAApC,EAA0C,MAAK,cAA/C,CAAhB;AACA,cAAK,QAAL,CAAc,gBAAd,GAAiC,MAAK,gBAAL,CAAsB,IAAtB,+BAAjC;;AACA,cAAK,OAAL,CAAa,MAAK,QAAlB;AACA;AACD,KAPD;;AAV2B;AAkB3B;;AAzDF;AAAA;AAAA,8BA2DQ;AACN;;AACA,WAAK,UAAL,CAAgB,UAAhB;;AACA,UAAI,KAAK,QAAT,EAAmB;AAClB,aAAK,QAAL,CAAc,IAAd,CAAmB,WAAnB,CAA+B,SAA/B;;AACA,aAAK,QAAL,CAAc,UAAd;AACA;;AACD,aAAO,IAAP;AACA;AAnEF;;AAAA;AAAA,EAAwF,aAAxF","sourceRoot":"","sourcesContent":["import { ToneAudioNode } from \"../context/ToneAudioNode\";\nimport { noOp } from \"../util/Interface\";\nimport { getWorkletGlobalScope } from \"./WorkletGlobalScope\";\nexport class ToneAudioWorklet extends ToneAudioNode {\n    constructor(options) {\n        super(options);\n        this.name = \"ToneAudioWorklet\";\n        /**\n         * The constructor options for the node\n         */\n        this.workletOptions = {};\n        /**\n         * Callback which is invoked when there is an error in the processing\n         */\n        this.onprocessorerror = noOp;\n        const blobUrl = URL.createObjectURL(new Blob([getWorkletGlobalScope()], { type: \"text/javascript\" }));\n        const name = this._audioWorkletName();\n        this._dummyGain = this.context.createGain();\n        this._dummyParam = this._dummyGain.gain;\n        // Register the processor\n        this.context.addAudioWorkletModule(blobUrl, name).then(() => {\n            // create the worklet when it's read\n            if (!this.disposed) {\n                this._worklet = this.context.createAudioWorkletNode(name, this.workletOptions);\n                this._worklet.onprocessorerror = this.onprocessorerror.bind(this);\n                this.onReady(this._worklet);\n            }\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._dummyGain.disconnect();\n        if (this._worklet) {\n            this._worklet.port.postMessage(\"dispose\");\n            this._worklet.disconnect();\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=ToneAudioWorklet.js.map"]},"metadata":{},"sourceType":"module"}