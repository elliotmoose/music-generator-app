{"ast":null,"code":"import _classCallCheck from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { ToneWithContext } from \"../context/ToneWithContext\";\nimport { Timeline } from \"./Timeline\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\n/**\n * Draw is useful for synchronizing visuals and audio events.\n * Callbacks from Tone.Transport or any of the Tone.Event classes\n * always happen _before_ the scheduled time and are not synchronized\n * to the animation frame so they are not good for triggering tightly\n * synchronized visuals and sound. Draw makes it easy to schedule\n * callbacks using the AudioContext time and uses requestAnimationFrame.\n * @example\n * Tone.Transport.schedule((time) => {\n * \t// use the time argument to schedule a callback with Draw\n * \tTone.Draw.schedule(() => {\n * \t\t// do drawing or DOM manipulation here\n * \t\tconsole.log(time);\n * \t}, time);\n * }, \"+0.5\");\n * Tone.Transport.start();\n * @category Core\n */\n\nexport var Draw = /*#__PURE__*/function (_ToneWithContext) {\n  _inherits(Draw, _ToneWithContext);\n\n  var _super = _createSuper(Draw);\n\n  function Draw() {\n    var _this;\n\n    _classCallCheck(this, Draw);\n\n    _this = _super.apply(this, arguments);\n    _this.name = \"Draw\";\n    /**\n     * The duration after which events are not invoked.\n     */\n\n    _this.expiration = 0.25;\n    /**\n     * The amount of time before the scheduled time\n     * that the callback can be invoked. Default is\n     * half the time of an animation frame (0.008 seconds).\n     */\n\n    _this.anticipation = 0.008;\n    /**\n     * All of the events.\n     */\n\n    _this._events = new Timeline();\n    /**\n     * The draw loop\n     */\n\n    _this._boundDrawLoop = _this._drawLoop.bind(_assertThisInitialized(_this));\n    /**\n     * The animation frame id\n     */\n\n    _this._animationFrame = -1;\n    return _this;\n  }\n  /**\n   * Schedule a function at the given time to be invoked\n   * on the nearest animation frame.\n   * @param  callback  Callback is invoked at the given time.\n   * @param  time      The time relative to the AudioContext time to invoke the callback.\n   * @example\n   * Tone.Transport.scheduleRepeat(time => {\n   * \tTone.Draw.schedule(() => console.log(time), time);\n   * }, 1);\n   * Tone.Transport.start();\n   */\n\n\n  _createClass(Draw, [{\n    key: \"schedule\",\n    value: function schedule(callback, time) {\n      this._events.add({\n        callback: callback,\n        time: this.toSeconds(time)\n      }); // start the draw loop on the first event\n\n\n      if (this._events.length === 1) {\n        this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n      }\n\n      return this;\n    }\n    /**\n     * Cancel events scheduled after the given time\n     * @param  after  Time after which scheduled events will be removed from the scheduling timeline.\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function cancel(after) {\n      this._events.cancel(this.toSeconds(after));\n\n      return this;\n    }\n    /**\n     * The draw loop\n     */\n\n  }, {\n    key: \"_drawLoop\",\n    value: function _drawLoop() {\n      var now = this.context.currentTime;\n\n      while (this._events.length && this._events.peek().time - this.anticipation <= now) {\n        var event = this._events.shift();\n\n        if (event && now - event.time <= this.expiration) {\n          event.callback();\n        }\n      }\n\n      if (this._events.length > 0) {\n        this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(Draw.prototype), \"dispose\", this).call(this);\n\n      this._events.dispose();\n\n      cancelAnimationFrame(this._animationFrame);\n      return this;\n    }\n  }]);\n\n  return Draw;\n}(ToneWithContext); //-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(function (context) {\n  context.draw = new Draw({\n    context: context\n  });\n});\nonContextClose(function (context) {\n  context.draw.dispose();\n});","map":{"version":3,"sources":["../../../../Tone/core/util/Draw.ts"],"names":[],"mappings":";;;;;;;AAAA,SAAS,eAAT,QAAwD,4BAAxD;AAEA,SAAS,QAAT,QAAwC,YAAxC;AACA,SAAS,cAAT,EAAyB,aAAzB,QAA8C,kCAA9C;AAMA;;;;;;;;;;;;;;;;;AAiBG;;AACH,WAAa,IAAb;AAAA;;AAAA;;AAAA,kBAAA;AAAA;;AAAA;;;AAEU,UAAA,IAAA,GAAe,MAAf;AAET;;AAEG;;AACH,UAAA,UAAA,GAAsB,IAAtB;AAEA;;;;AAIG;;AACH,UAAA,YAAA,GAAwB,KAAxB;AAEA;;AAEG;;AACK,UAAA,OAAA,GAA+B,IAAI,QAAJ,EAA/B;AAER;;AAEG;;AACK,UAAA,cAAA,GAAiB,MAAK,SAAL,CAAe,IAAf,+BAAjB;AAER;;AAEG;;AACK,UAAA,eAAA,GAAkB,CAAC,CAAnB;AA7BT;AAqFC;AAtDA;;;;;;;;;;AAUG;;;AAzCJ;AAAA;AAAA,6BA0CU,QA1CV,EA0CgC,IA1ChC,EA0C0C;AACxC,WAAK,OAAL,CAAa,GAAb,CAAiB;AAChB,QAAA,QAAQ,EAAR,QADgB;AAEhB,QAAA,IAAI,EAAE,KAAK,SAAL,CAAe,IAAf;AAFU,OAAjB,EADwC,CAKxC;;;AACA,UAAI,KAAK,OAAL,CAAa,MAAb,KAAwB,CAA5B,EAA+B;AAC9B,aAAK,eAAL,GAAuB,qBAAqB,CAAC,KAAK,cAAN,CAA5C;AACA;;AACD,aAAO,IAAP;AACA;AAED;;;AAGG;;AAzDJ;AAAA;AAAA,2BA0DQ,KA1DR,EA0DoB;AAClB,WAAK,OAAL,CAAa,MAAb,CAAoB,KAAK,SAAL,CAAe,KAAf,CAApB;;AACA,aAAO,IAAP;AACA;AAED;;AAEG;;AAjEJ;AAAA;AAAA,gCAkEkB;AAChB,UAAM,GAAG,GAAG,KAAK,OAAL,CAAa,WAAzB;;AACA,aAAO,KAAK,OAAL,CAAa,MAAb,IAAwB,KAAK,OAAL,CAAa,IAAb,GAAkC,IAAlC,GAAyC,KAAK,YAA9C,IAA8D,GAA7F,EAAkG;AACjG,YAAM,KAAK,GAAG,KAAK,OAAL,CAAa,KAAb,EAAd;;AACA,YAAI,KAAK,IAAI,GAAG,GAAG,KAAK,CAAC,IAAZ,IAAoB,KAAK,UAAtC,EAAkD;AACjD,UAAA,KAAK,CAAC,QAAN;AACA;AACD;;AACD,UAAI,KAAK,OAAL,CAAa,MAAb,GAAsB,CAA1B,EAA6B;AAC5B,aAAK,eAAL,GAAuB,qBAAqB,CAAC,KAAK,cAAN,CAA5C;AACA;AACD;AA7EF;AAAA;AAAA,8BA+EQ;AACN;;AACA,WAAK,OAAL,CAAa,OAAb;;AACA,MAAA,oBAAoB,CAAC,KAAK,eAAN,CAApB;AACA,aAAO,IAAP;AACA;AApFF;;AAAA;AAAA,EAA0B,eAA1B,E,CAuFA;AACA;AACA;;AAEA,aAAa,CAAC,UAAA,OAAO,EAAG;AACvB,EAAA,OAAO,CAAC,IAAR,GAAe,IAAI,IAAJ,CAAS;AAAE,IAAA,OAAO,EAAP;AAAF,GAAT,CAAf;AACA,CAFY,CAAb;AAIA,cAAc,CAAC,UAAA,OAAO,EAAG;AACxB,EAAA,OAAO,CAAC,IAAR,CAAa,OAAb;AACA,CAFa,CAAd","sourceRoot":"","sourcesContent":["import { ToneWithContext } from \"../context/ToneWithContext\";\nimport { Timeline } from \"./Timeline\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\n/**\n * Draw is useful for synchronizing visuals and audio events.\n * Callbacks from Tone.Transport or any of the Tone.Event classes\n * always happen _before_ the scheduled time and are not synchronized\n * to the animation frame so they are not good for triggering tightly\n * synchronized visuals and sound. Draw makes it easy to schedule\n * callbacks using the AudioContext time and uses requestAnimationFrame.\n * @example\n * Tone.Transport.schedule((time) => {\n * \t// use the time argument to schedule a callback with Draw\n * \tTone.Draw.schedule(() => {\n * \t\t// do drawing or DOM manipulation here\n * \t\tconsole.log(time);\n * \t}, time);\n * }, \"+0.5\");\n * Tone.Transport.start();\n * @category Core\n */\nexport class Draw extends ToneWithContext {\n    constructor() {\n        super(...arguments);\n        this.name = \"Draw\";\n        /**\n         * The duration after which events are not invoked.\n         */\n        this.expiration = 0.25;\n        /**\n         * The amount of time before the scheduled time\n         * that the callback can be invoked. Default is\n         * half the time of an animation frame (0.008 seconds).\n         */\n        this.anticipation = 0.008;\n        /**\n         * All of the events.\n         */\n        this._events = new Timeline();\n        /**\n         * The draw loop\n         */\n        this._boundDrawLoop = this._drawLoop.bind(this);\n        /**\n         * The animation frame id\n         */\n        this._animationFrame = -1;\n    }\n    /**\n     * Schedule a function at the given time to be invoked\n     * on the nearest animation frame.\n     * @param  callback  Callback is invoked at the given time.\n     * @param  time      The time relative to the AudioContext time to invoke the callback.\n     * @example\n     * Tone.Transport.scheduleRepeat(time => {\n     * \tTone.Draw.schedule(() => console.log(time), time);\n     * }, 1);\n     * Tone.Transport.start();\n     */\n    schedule(callback, time) {\n        this._events.add({\n            callback,\n            time: this.toSeconds(time),\n        });\n        // start the draw loop on the first event\n        if (this._events.length === 1) {\n            this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n        }\n        return this;\n    }\n    /**\n     * Cancel events scheduled after the given time\n     * @param  after  Time after which scheduled events will be removed from the scheduling timeline.\n     */\n    cancel(after) {\n        this._events.cancel(this.toSeconds(after));\n        return this;\n    }\n    /**\n     * The draw loop\n     */\n    _drawLoop() {\n        const now = this.context.currentTime;\n        while (this._events.length && this._events.peek().time - this.anticipation <= now) {\n            const event = this._events.shift();\n            if (event && now - event.time <= this.expiration) {\n                event.callback();\n            }\n        }\n        if (this._events.length > 0) {\n            this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n        }\n    }\n    dispose() {\n        super.dispose();\n        this._events.dispose();\n        cancelAnimationFrame(this._animationFrame);\n        return this;\n    }\n}\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(context => {\n    context.draw = new Draw({ context });\n});\nonContextClose(context => {\n    context.draw.dispose();\n});\n//# sourceMappingURL=Draw.js.map"]},"metadata":{},"sourceType":"module"}