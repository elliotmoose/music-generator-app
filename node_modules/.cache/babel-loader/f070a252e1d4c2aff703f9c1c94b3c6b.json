{"ast":null,"code":"import _classCallCheck from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Gain } from \"../core/context/Gain\";\nimport { connect, disconnect } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Tone.Zero outputs 0's at audio-rate. The reason this has to be\n * it's own class is that many browsers optimize out Tone.Signal\n * with a value of 0 and will not process nodes further down the graph.\n * @category Signal\n */\n\nexport var Zero = /*#__PURE__*/function (_SignalOperator) {\n  _inherits(Zero, _SignalOperator);\n\n  var _super = _createSuper(Zero);\n\n  function Zero() {\n    var _this;\n\n    _classCallCheck(this, Zero);\n\n    _this = _super.call(this, Object.assign(optionsFromArguments(Zero.getDefaults(), arguments)));\n    _this.name = \"Zero\";\n    /**\n     * The gain node which connects the constant source to the output\n     */\n\n    _this._gain = new Gain({\n      context: _this.context\n    });\n    /**\n     * Only outputs 0\n     */\n\n    _this.output = _this._gain;\n    /**\n     * no input node\n     */\n\n    _this.input = undefined;\n    connect(_this.context.getConstant(0), _this._gain);\n    return _this;\n  }\n  /**\n   * clean up\n   */\n\n\n  _createClass(Zero, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(Zero.prototype), \"dispose\", this).call(this);\n\n      disconnect(this.context.getConstant(0), this._gain);\n      return this;\n    }\n  }]);\n\n  return Zero;\n}(SignalOperator);","map":{"version":3,"sources":["../../../Tone/signal/Zero.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,IAAT,QAAqB,sBAArB;AACA,SAAS,OAAT,EAAkB,UAAlB,QAA0D,+BAA1D;AACA,SAAS,oBAAT,QAAqC,uBAArC;AACA,SAAS,cAAT,QAA+B,kBAA/B;AAEA;;;;;AAKG;;AACH,WAAa,IAAb;AAAA;;AAAA;;AAoBC,kBAAA;AAAA;;AAAA;;AACC,8BAAM,MAAM,CAAC,MAAP,CAAc,oBAAoB,CAAC,IAAI,CAAC,WAAL,EAAD,EAAqB,SAArB,CAAlC,CAAN;AAnBQ,UAAA,IAAA,GAAe,MAAf;AAET;;AAEG;;AACK,UAAA,KAAA,GAAQ,IAAI,IAAJ,CAAS;AAAE,MAAA,OAAO,EAAE,MAAK;AAAhB,KAAT,CAAR;AAER;;AAEG;;AACH,UAAA,MAAA,GAAS,MAAK,KAAd;AAEA;;AAEG;;AACH,UAAA,KAAA,GAAQ,SAAR;AAKC,IAAA,OAAO,CAAC,MAAK,OAAL,CAAa,WAAb,CAAyB,CAAzB,CAAD,EAA8B,MAAK,KAAnC,CAAP;AAFD;AAGC;AAED;;AAEG;;;AA3BJ;AAAA;AAAA,8BA4BQ;AACN;;AACA,MAAA,UAAU,CAAC,KAAK,OAAL,CAAa,WAAb,CAAyB,CAAzB,CAAD,EAA8B,KAAK,KAAnC,CAAV;AACA,aAAO,IAAP;AACA;AAhCF;;AAAA;AAAA,EAA0B,cAA1B","sourceRoot":"","sourcesContent":["import { Gain } from \"../core/context/Gain\";\nimport { connect, disconnect } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Tone.Zero outputs 0's at audio-rate. The reason this has to be\n * it's own class is that many browsers optimize out Tone.Signal\n * with a value of 0 and will not process nodes further down the graph.\n * @category Signal\n */\nexport class Zero extends SignalOperator {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Zero.getDefaults(), arguments)));\n        this.name = \"Zero\";\n        /**\n         * The gain node which connects the constant source to the output\n         */\n        this._gain = new Gain({ context: this.context });\n        /**\n         * Only outputs 0\n         */\n        this.output = this._gain;\n        /**\n         * no input node\n         */\n        this.input = undefined;\n        connect(this.context.getConstant(0), this._gain);\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        disconnect(this.context.getConstant(0), this._gain);\n        return this;\n    }\n}\n//# sourceMappingURL=Zero.js.map"]},"metadata":{},"sourceType":"module"}