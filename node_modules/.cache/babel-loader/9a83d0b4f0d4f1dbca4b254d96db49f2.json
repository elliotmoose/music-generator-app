{"ast":null,"code":"import _classCallCheck from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Add } from \"./Add\";\nimport { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Performs a linear scaling on an input signal.\n * Scales a NormalRange input to between\n * outputMin and outputMax.\n *\n * @example\n * const scale = new Tone.Scale(50, 100);\n * const signal = new Tone.Signal(0.5).connect(scale);\n * // the output of scale equals 75\n * @category Signal\n */\n\nexport var Scale = /*#__PURE__*/function (_SignalOperator) {\n  _inherits(Scale, _SignalOperator);\n\n  var _super = _createSuper(Scale);\n\n  function Scale() {\n    var _this;\n\n    _classCallCheck(this, Scale);\n\n    _this = _super.call(this, Object.assign(optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"])));\n    _this.name = \"Scale\";\n    var options = optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"]);\n    _this._mult = _this.input = new Multiply({\n      context: _this.context,\n      value: options.max - options.min\n    });\n    _this._add = _this.output = new Add({\n      context: _this.context,\n      value: options.min\n    });\n    _this._min = options.min;\n    _this._max = options.max;\n\n    _this.input.connect(_this.output);\n\n    return _this;\n  }\n\n  _createClass(Scale, [{\n    key: \"_setRange\",\n\n    /**\n     * set the values\n     */\n    value: function _setRange() {\n      this._add.value = this._min;\n      this._mult.value = this._max - this._min;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(Scale.prototype), \"dispose\", this).call(this);\n\n      this._add.dispose();\n\n      this._mult.dispose();\n\n      return this;\n    }\n  }, {\n    key: \"min\",\n\n    /**\n     * The minimum output value. This number is output when the value input value is 0.\n     */\n    get: function get() {\n      return this._min;\n    },\n    set: function set(min) {\n      this._min = min;\n\n      this._setRange();\n    }\n    /**\n     * The maximum output value. This number is output when the value input value is 1.\n     */\n\n  }, {\n    key: \"max\",\n    get: function get() {\n      return this._max;\n    },\n    set: function set(max) {\n      this._max = max;\n\n      this._setRange();\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(SignalOperator.getDefaults(), {\n        max: 1,\n        min: 0\n      });\n    }\n  }]);\n\n  return Scale;\n}(SignalOperator);","map":{"version":3,"sources":["../../../Tone/signal/Scale.ts"],"names":[],"mappings":";;;;;;AACA,SAAS,oBAAT,QAAqC,uBAArC;AACA,SAAS,GAAT,QAAoB,OAApB;AACA,SAAS,QAAT,QAAyB,YAAzB;AACA,SAAS,cAAT,QAA+B,kBAA/B;AAOA;;;;;;;;;;AAUG;;AACH,WAAa,KAAb;AAAA;;AAAA;;AAiCC,mBAAA;AAAA;;AAAA;;AACC,8BAAM,MAAM,CAAC,MAAP,CAAc,oBAAoB,CAAC,KAAK,CAAC,WAAN,EAAD,EAAsB,SAAtB,EAAiC,CAAC,KAAD,EAAQ,KAAR,CAAjC,CAAlC,CAAN;AAhCQ,UAAA,IAAA,GAAe,OAAf;AAiCR,QAAM,OAAO,GAAG,oBAAoB,CAAC,KAAK,CAAC,WAAN,EAAD,EAAsB,SAAtB,EAAiC,CAAC,KAAD,EAAQ,KAAR,CAAjC,CAApC;AAEA,UAAK,KAAL,GAAa,MAAK,KAAL,GAAa,IAAI,QAAJ,CAAa;AACtC,MAAA,OAAO,EAAE,MAAK,OADwB;AAEtC,MAAA,KAAK,EAAE,OAAO,CAAC,GAAR,GAAc,OAAO,CAAC;AAFS,KAAb,CAA1B;AAKA,UAAK,IAAL,GAAY,MAAK,MAAL,GAAc,IAAI,GAAJ,CAAQ;AACjC,MAAA,OAAO,EAAE,MAAK,OADmB;AAEjC,MAAA,KAAK,EAAE,OAAO,CAAC;AAFkB,KAAR,CAA1B;AAKA,UAAK,IAAL,GAAY,OAAO,CAAC,GAApB;AACA,UAAK,IAAL,GAAY,OAAO,CAAC,GAApB;;AAEA,UAAK,KAAL,CAAW,OAAX,CAAmB,MAAK,MAAxB;;AAjBD;AAkBC;;AAnDF;AAAA;;AAkFC;;AAEG;AApFJ,gCAqFkB;AAChB,WAAK,IAAL,CAAU,KAAV,GAAkB,KAAK,IAAvB;AACA,WAAK,KAAL,CAAW,KAAX,GAAmB,KAAK,IAAL,GAAY,KAAK,IAApC;AACA;AAxFF;AAAA;AAAA,8BA0FQ;AACN;;AACA,WAAK,IAAL,CAAU,OAAV;;AACA,WAAK,KAAL,CAAW,OAAX;;AACA,aAAO,IAAP;AACA;AA/FF;AAAA;;AA4DC;;AAEG;AA9DJ,wBA+DQ;AACN,aAAO,KAAK,IAAZ;AACA,KAjEF;AAAA,sBAkES,GAlET,EAkEY;AACV,WAAK,IAAL,GAAY,GAAZ;;AACA,WAAK,SAAL;AACA;AAED;;AAEG;;AAzEJ;AAAA;AAAA,wBA0EQ;AACN,aAAO,KAAK,IAAZ;AACA,KA5EF;AAAA,sBA6ES,GA7ET,EA6EY;AACV,WAAK,IAAL,GAAY,GAAZ;;AACA,WAAK,SAAL;AACA;AAhFF;AAAA;AAAA,kCAqDmB;AACjB,aAAO,MAAM,CAAC,MAAP,CAAc,cAAc,CAAC,WAAf,EAAd,EAA4C;AAClD,QAAA,GAAG,EAAE,CAD6C;AAElD,QAAA,GAAG,EAAE;AAF6C,OAA5C,CAAP;AAIA;AA1DF;;AAAA;AAAA,EAAwE,cAAxE","sourceRoot":"","sourcesContent":["import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Add } from \"./Add\";\nimport { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Performs a linear scaling on an input signal.\n * Scales a NormalRange input to between\n * outputMin and outputMax.\n *\n * @example\n * const scale = new Tone.Scale(50, 100);\n * const signal = new Tone.Signal(0.5).connect(scale);\n * // the output of scale equals 75\n * @category Signal\n */\nexport class Scale extends SignalOperator {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"])));\n        this.name = \"Scale\";\n        const options = optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"]);\n        this._mult = this.input = new Multiply({\n            context: this.context,\n            value: options.max - options.min,\n        });\n        this._add = this.output = new Add({\n            context: this.context,\n            value: options.min,\n        });\n        this._min = options.min;\n        this._max = options.max;\n        this.input.connect(this.output);\n    }\n    static getDefaults() {\n        return Object.assign(SignalOperator.getDefaults(), {\n            max: 1,\n            min: 0,\n        });\n    }\n    /**\n     * The minimum output value. This number is output when the value input value is 0.\n     */\n    get min() {\n        return this._min;\n    }\n    set min(min) {\n        this._min = min;\n        this._setRange();\n    }\n    /**\n     * The maximum output value. This number is output when the value input value is 1.\n     */\n    get max() {\n        return this._max;\n    }\n    set max(max) {\n        this._max = max;\n        this._setRange();\n    }\n    /**\n     * set the values\n     */\n    _setRange() {\n        this._add.value = this._min;\n        this._mult.value = this._max - this._min;\n    }\n    dispose() {\n        super.dispose();\n        this._add.dispose();\n        this._mult.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Scale.js.map"]},"metadata":{},"sourceType":"module"}