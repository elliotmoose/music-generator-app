{"ast":null,"code":"import _classCallCheck from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { TransportEvent } from \"./TransportEvent\";\n/**\n * TransportRepeatEvent is an internal class used by Tone.Transport\n * to schedule repeat events. This class should not be instantiated directly.\n */\n\nexport var TransportRepeatEvent = /*#__PURE__*/function (_TransportEvent) {\n  _inherits(TransportRepeatEvent, _TransportEvent);\n\n  var _super = _createSuper(TransportRepeatEvent);\n\n  /**\n   * @param transport The transport object which the event belongs to\n   */\n  function TransportRepeatEvent(transport, opts) {\n    var _this;\n\n    _classCallCheck(this, TransportRepeatEvent);\n\n    _this = _super.call(this, transport, opts);\n    /**\n     * The ID of the current timeline event\n     */\n\n    _this._currentId = -1;\n    /**\n     * The ID of the next timeline event\n     */\n\n    _this._nextId = -1;\n    /**\n     * The time of the next event\n     */\n\n    _this._nextTick = _this.time;\n    /**\n     * a reference to the bound start method\n     */\n\n    _this._boundRestart = _this._restart.bind(_assertThisInitialized(_this));\n    var options = Object.assign(TransportRepeatEvent.getDefaults(), opts);\n    _this.duration = new TicksClass(transport.context, options.duration).valueOf();\n    _this._interval = new TicksClass(transport.context, options.interval).valueOf();\n    _this._nextTick = options.time;\n\n    _this.transport.on(\"start\", _this._boundRestart);\n\n    _this.transport.on(\"loopStart\", _this._boundRestart);\n\n    _this.context = _this.transport.context;\n\n    _this._restart();\n\n    return _this;\n  }\n\n  _createClass(TransportRepeatEvent, [{\n    key: \"invoke\",\n\n    /**\n     * Invoke the callback. Returns the tick time which\n     * the next event should be scheduled at.\n     * @param  time  The AudioContext time in seconds of the event\n     */\n    value: function invoke(time) {\n      // create more events if necessary\n      this._createEvents(time); // call the super class\n\n\n      _get(_getPrototypeOf(TransportRepeatEvent.prototype), \"invoke\", this).call(this, time);\n    }\n    /**\n     * Push more events onto the timeline to keep up with the position of the timeline\n     */\n\n  }, {\n    key: \"_createEvents\",\n    value: function _createEvents(time) {\n      // schedule the next event\n      var ticks = this.transport.getTicksAtTime(time);\n\n      if (ticks >= this.time && ticks >= this._nextTick && this._nextTick + this._interval < this.time + this.duration) {\n        this._nextTick += this._interval;\n        this._currentId = this._nextId;\n        this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n      }\n    }\n    /**\n     * Push more events onto the timeline to keep up with the position of the timeline\n     */\n\n  }, {\n    key: \"_restart\",\n    value: function _restart(time) {\n      this.transport.clear(this._currentId);\n      this.transport.clear(this._nextId);\n      this._nextTick = this.time;\n      var ticks = this.transport.getTicksAtTime(time);\n\n      if (ticks > this.time) {\n        this._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n      }\n\n      this._currentId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n      this._nextTick += this._interval;\n      this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n    }\n    /**\n     * Clean up\n     */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(TransportRepeatEvent.prototype), \"dispose\", this).call(this);\n\n      this.transport.clear(this._currentId);\n      this.transport.clear(this._nextId);\n      this.transport.off(\"start\", this._boundRestart);\n      this.transport.off(\"loopStart\", this._boundRestart);\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign({}, TransportEvent.getDefaults(), {\n        duration: Infinity,\n        interval: 1,\n        once: false\n      });\n    }\n  }]);\n\n  return TransportRepeatEvent;\n}(TransportEvent);","map":{"version":3,"sources":["../../../../Tone/core/clock/TransportRepeatEvent.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { TicksClass } from \"../type/Ticks\";\nimport { TransportEvent } from \"./TransportEvent\";\n/**\n * TransportRepeatEvent is an internal class used by Tone.Transport\n * to schedule repeat events. This class should not be instantiated directly.\n */\nexport class TransportRepeatEvent extends TransportEvent {\n    /**\n     * @param transport The transport object which the event belongs to\n     */\n    constructor(transport, opts) {\n        super(transport, opts);\n        /**\n         * The ID of the current timeline event\n         */\n        this._currentId = -1;\n        /**\n         * The ID of the next timeline event\n         */\n        this._nextId = -1;\n        /**\n         * The time of the next event\n         */\n        this._nextTick = this.time;\n        /**\n         * a reference to the bound start method\n         */\n        this._boundRestart = this._restart.bind(this);\n        const options = Object.assign(TransportRepeatEvent.getDefaults(), opts);\n        this.duration = new TicksClass(transport.context, options.duration).valueOf();\n        this._interval = new TicksClass(transport.context, options.interval).valueOf();\n        this._nextTick = options.time;\n        this.transport.on(\"start\", this._boundRestart);\n        this.transport.on(\"loopStart\", this._boundRestart);\n        this.context = this.transport.context;\n        this._restart();\n    }\n    static getDefaults() {\n        return Object.assign({}, TransportEvent.getDefaults(), {\n            duration: Infinity,\n            interval: 1,\n            once: false,\n        });\n    }\n    /**\n     * Invoke the callback. Returns the tick time which\n     * the next event should be scheduled at.\n     * @param  time  The AudioContext time in seconds of the event\n     */\n    invoke(time) {\n        // create more events if necessary\n        this._createEvents(time);\n        // call the super class\n        super.invoke(time);\n    }\n    /**\n     * Push more events onto the timeline to keep up with the position of the timeline\n     */\n    _createEvents(time) {\n        // schedule the next event\n        const ticks = this.transport.getTicksAtTime(time);\n        if (ticks >= this.time && ticks >= this._nextTick && this._nextTick + this._interval < this.time + this.duration) {\n            this._nextTick += this._interval;\n            this._currentId = this._nextId;\n            this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n        }\n    }\n    /**\n     * Push more events onto the timeline to keep up with the position of the timeline\n     */\n    _restart(time) {\n        this.transport.clear(this._currentId);\n        this.transport.clear(this._nextId);\n        this._nextTick = this.time;\n        const ticks = this.transport.getTicksAtTime(time);\n        if (ticks > this.time) {\n            this._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n        }\n        this._currentId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n        this._nextTick += this._interval;\n        this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this.transport.clear(this._currentId);\n        this.transport.clear(this._nextId);\n        this.transport.off(\"start\", this._boundRestart);\n        this.transport.off(\"loopStart\", this._boundRestart);\n        return this;\n    }\n}\n//# sourceMappingURL=TransportRepeatEvent.js.map"]},"metadata":{},"sourceType":"module"}