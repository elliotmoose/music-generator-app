{"ast":null,"code":"var core = require('../../core'),\n    BlurXFilter = require('../blur/BlurXFilter'),\n    BlurYFilter = require('../blur/BlurYFilter');\n/**\n * The BloomFilter applies a Gaussian blur to an object.\n * The strength of the blur can be set for x- and y-axis separately.\n *\n * @class\n * @extends PIXI.AbstractFilter\n * @memberof PIXI.filters\n */\n\n\nfunction BloomFilter() {\n  core.AbstractFilter.call(this);\n  this.blurXFilter = new BlurXFilter();\n  this.blurYFilter = new BlurYFilter();\n  this.defaultFilter = new core.AbstractFilter();\n}\n\nBloomFilter.prototype = Object.create(core.AbstractFilter.prototype);\nBloomFilter.prototype.constructor = BloomFilter;\nmodule.exports = BloomFilter;\n\nBloomFilter.prototype.applyFilter = function (renderer, input, output) {\n  var renderTarget = renderer.filterManager.getRenderTarget(true); //TODO - copyTexSubImage2D could be used here?\n\n  this.defaultFilter.applyFilter(renderer, input, output);\n  this.blurXFilter.applyFilter(renderer, input, renderTarget);\n  renderer.blendModeManager.setBlendMode(core.BLEND_MODES.SCREEN);\n  this.blurYFilter.applyFilter(renderer, renderTarget, output);\n  renderer.blendModeManager.setBlendMode(core.BLEND_MODES.NORMAL);\n  renderer.filterManager.returnRenderTarget(renderTarget);\n};\n\nObject.defineProperties(BloomFilter.prototype, {\n  /**\n   * Sets the strength of both the blurX and blurY properties simultaneously\n   *\n   * @member {number}\n   * @memberOf BloomFilter#\n   * @default 2\n   */\n  blur: {\n    get: function () {\n      return this.blurXFilter.blur;\n    },\n    set: function (value) {\n      this.blurXFilter.blur = this.blurYFilter.blur = value;\n    }\n  },\n\n  /**\n   * Sets the strength of the blurX property\n   *\n   * @member {number}\n   * @memberOf BloomFilter#\n   * @default 2\n   */\n  blurX: {\n    get: function () {\n      return this.blurXFilter.blur;\n    },\n    set: function (value) {\n      this.blurXFilter.blur = value;\n    }\n  },\n\n  /**\n   * Sets the strength of the blurY property\n   *\n   * @member {number}\n   * @memberOf BloomFilter#\n   * @default 2\n   */\n  blurY: {\n    get: function () {\n      return this.blurYFilter.blur;\n    },\n    set: function (value) {\n      this.blurYFilter.blur = value;\n    }\n  }\n});","map":{"version":3,"sources":["/Users/thebe/Desktop/music-generator-app/node_modules/pixi.js/src/filters/bloom/BloomFilter.js"],"names":["core","require","BlurXFilter","BlurYFilter","BloomFilter","AbstractFilter","call","blurXFilter","blurYFilter","defaultFilter","prototype","Object","create","constructor","module","exports","applyFilter","renderer","input","output","renderTarget","filterManager","getRenderTarget","blendModeManager","setBlendMode","BLEND_MODES","SCREEN","NORMAL","returnRenderTarget","defineProperties","blur","get","set","value","blurX","blurY"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,YAAD,CAAlB;AAAA,IACIC,WAAW,GAAGD,OAAO,CAAC,qBAAD,CADzB;AAAA,IAEIE,WAAW,GAAGF,OAAO,CAAC,qBAAD,CAFzB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,WAAT,GACA;AACIJ,EAAAA,IAAI,CAACK,cAAL,CAAoBC,IAApB,CAAyB,IAAzB;AAEA,OAAKC,WAAL,GAAmB,IAAIL,WAAJ,EAAnB;AACA,OAAKM,WAAL,GAAmB,IAAIL,WAAJ,EAAnB;AAEA,OAAKM,aAAL,GAAqB,IAAIT,IAAI,CAACK,cAAT,EAArB;AACH;;AAEDD,WAAW,CAACM,SAAZ,GAAwBC,MAAM,CAACC,MAAP,CAAcZ,IAAI,CAACK,cAAL,CAAoBK,SAAlC,CAAxB;AACAN,WAAW,CAACM,SAAZ,CAAsBG,WAAtB,GAAoCT,WAApC;AACAU,MAAM,CAACC,OAAP,GAAiBX,WAAjB;;AAEAA,WAAW,CAACM,SAAZ,CAAsBM,WAAtB,GAAoC,UAAUC,QAAV,EAAoBC,KAApB,EAA2BC,MAA3B,EACpC;AACI,MAAIC,YAAY,GAAGH,QAAQ,CAACI,aAAT,CAAuBC,eAAvB,CAAuC,IAAvC,CAAnB,CADJ,CAGI;;AACA,OAAKb,aAAL,CAAmBO,WAAnB,CAA+BC,QAA/B,EAAyCC,KAAzC,EAAgDC,MAAhD;AAEA,OAAKZ,WAAL,CAAiBS,WAAjB,CAA6BC,QAA7B,EAAuCC,KAAvC,EAA8CE,YAA9C;AAEAH,EAAAA,QAAQ,CAACM,gBAAT,CAA0BC,YAA1B,CAAuCxB,IAAI,CAACyB,WAAL,CAAiBC,MAAxD;AAEA,OAAKlB,WAAL,CAAiBQ,WAAjB,CAA6BC,QAA7B,EAAuCG,YAAvC,EAAqDD,MAArD;AAEAF,EAAAA,QAAQ,CAACM,gBAAT,CAA0BC,YAA1B,CAAuCxB,IAAI,CAACyB,WAAL,CAAiBE,MAAxD;AAEAV,EAAAA,QAAQ,CAACI,aAAT,CAAuBO,kBAAvB,CAA0CR,YAA1C;AACH,CAhBD;;AAkBAT,MAAM,CAACkB,gBAAP,CAAwBzB,WAAW,CAACM,SAApC,EAA+C;AAC3C;AACJ;AACA;AACA;AACA;AACA;AACA;AACIoB,EAAAA,IAAI,EAAE;AACFC,IAAAA,GAAG,EAAE,YACL;AACI,aAAO,KAAKxB,WAAL,CAAiBuB,IAAxB;AACH,KAJC;AAKFE,IAAAA,GAAG,EAAE,UAAUC,KAAV,EACL;AACI,WAAK1B,WAAL,CAAiBuB,IAAjB,GAAwB,KAAKtB,WAAL,CAAiBsB,IAAjB,GAAwBG,KAAhD;AACH;AARC,GARqC;;AAmB3C;AACJ;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,KAAK,EAAE;AACHH,IAAAA,GAAG,EAAE,YACL;AACI,aAAO,KAAKxB,WAAL,CAAiBuB,IAAxB;AACH,KAJE;AAKHE,IAAAA,GAAG,EAAE,UAAUC,KAAV,EACL;AACI,WAAK1B,WAAL,CAAiBuB,IAAjB,GAAwBG,KAAxB;AACH;AARE,GA1BoC;;AAqC3C;AACJ;AACA;AACA;AACA;AACA;AACA;AACIE,EAAAA,KAAK,EAAE;AACHJ,IAAAA,GAAG,EAAE,YACL;AACI,aAAO,KAAKvB,WAAL,CAAiBsB,IAAxB;AACH,KAJE;AAKHE,IAAAA,GAAG,EAAE,UAAUC,KAAV,EACL;AACI,WAAKzB,WAAL,CAAiBsB,IAAjB,GAAwBG,KAAxB;AACH;AARE;AA5CoC,CAA/C","sourcesContent":["var core = require('../../core'),\n    BlurXFilter = require('../blur/BlurXFilter'),\n    BlurYFilter = require('../blur/BlurYFilter');\n\n/**\n * The BloomFilter applies a Gaussian blur to an object.\n * The strength of the blur can be set for x- and y-axis separately.\n *\n * @class\n * @extends PIXI.AbstractFilter\n * @memberof PIXI.filters\n */\nfunction BloomFilter()\n{\n    core.AbstractFilter.call(this);\n\n    this.blurXFilter = new BlurXFilter();\n    this.blurYFilter = new BlurYFilter();\n\n    this.defaultFilter = new core.AbstractFilter();\n}\n\nBloomFilter.prototype = Object.create(core.AbstractFilter.prototype);\nBloomFilter.prototype.constructor = BloomFilter;\nmodule.exports = BloomFilter;\n\nBloomFilter.prototype.applyFilter = function (renderer, input, output)\n{\n    var renderTarget = renderer.filterManager.getRenderTarget(true);\n\n    //TODO - copyTexSubImage2D could be used here?\n    this.defaultFilter.applyFilter(renderer, input, output);\n\n    this.blurXFilter.applyFilter(renderer, input, renderTarget);\n\n    renderer.blendModeManager.setBlendMode(core.BLEND_MODES.SCREEN);\n\n    this.blurYFilter.applyFilter(renderer, renderTarget, output);\n\n    renderer.blendModeManager.setBlendMode(core.BLEND_MODES.NORMAL);\n\n    renderer.filterManager.returnRenderTarget(renderTarget);\n};\n\nObject.defineProperties(BloomFilter.prototype, {\n    /**\n     * Sets the strength of both the blurX and blurY properties simultaneously\n     *\n     * @member {number}\n     * @memberOf BloomFilter#\n     * @default 2\n     */\n    blur: {\n        get: function ()\n        {\n            return this.blurXFilter.blur;\n        },\n        set: function (value)\n        {\n            this.blurXFilter.blur = this.blurYFilter.blur = value;\n        }\n    },\n\n    /**\n     * Sets the strength of the blurX property\n     *\n     * @member {number}\n     * @memberOf BloomFilter#\n     * @default 2\n     */\n    blurX: {\n        get: function ()\n        {\n            return this.blurXFilter.blur;\n        },\n        set: function (value)\n        {\n            this.blurXFilter.blur = value;\n        }\n    },\n\n    /**\n     * Sets the strength of the blurY property\n     *\n     * @member {number}\n     * @memberOf BloomFilter#\n     * @default 2\n     */\n    blurY: {\n        get: function ()\n        {\n            return this.blurYFilter.blur;\n        },\n        set: function (value)\n        {\n            this.blurYFilter.blur = value;\n        }\n    }\n});\n"]},"metadata":{},"sourceType":"script"}