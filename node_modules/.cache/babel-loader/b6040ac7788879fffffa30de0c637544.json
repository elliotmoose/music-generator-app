{"ast":null,"code":"import _regeneratorRuntime from\"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _createForOfIteratorHelper from\"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _asyncToGenerator from\"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import*as Tone from'tone';import{Midi}from'@tonejs/midi';var i=0;var Player=/*#__PURE__*/function(){function Player(){_classCallCheck(this,Player);}_createClass(Player,[{key:\"setup\",value:function setup(){Tone.start();this.sampler=new Tone.Sampler({urls:{\"C1\":\"C1.mp3\",\"C2\":\"C2.mp3\",\"C3\":\"C3.mp3\",\"C4\":\"C4.mp3\",\"D#4\":\"Ds4.mp3\",\"F#4\":\"Fs4.mp3\",\"A4\":\"A4.mp3\",\"C5\":\"C5.mp3\",\"C6\":\"C6.mp3\"},baseUrl:\"https://tonejs.github.io/audio/salamander/\"}).toDestination();}},{key:\"notesFromMidiFile\",value:function(){var _notesFromMidiFile=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(fileName){var midi,notes,objTime,_iterator,_step,track,_iterator2,_step2,note;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Midi.fromUrl(\"/\"+fileName);case 2:midi=_context.sent;console.log(midi);notes=[];objTime=0;_iterator=_createForOfIteratorHelper(midi.tracks);try{for(_iterator.s();!(_step=_iterator.n()).done;){track=_step.value;_iterator2=_createForOfIteratorHelper(track.notes);try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){note=_step2.value;console.log('add note: '+note.name);objTime+=note.time;note.objTime=objTime;notes.push(note);}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return _context.abrupt(\"return\",notes);case 9:case\"end\":return _context.stop();}}},_callee);}));function notesFromMidiFile(_x){return _notesFromMidiFile.apply(this,arguments);}return notesFromMidiFile;}()},{key:\"playMidiFile\",value:function(){var _playMidiFile=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(fileName){var notes,_iterator3,_step3,note;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return this.notesFromMidiFile(fileName);case 2:notes=_context2.sent;_iterator3=_createForOfIteratorHelper(notes);try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){note=_step3.value;this.sampler.triggerAttackRelease([note.name],note.duration,note.time,note.velocity);console.log('play note: '+note.name);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}case 5:case\"end\":return _context2.stop();}}},_callee2,this);}));function playMidiFile(_x2){return _playMidiFile.apply(this,arguments);}return playMidiFile;}()}]);return Player;}();export{Player as default};","map":{"version":3,"sources":["/Users/thebe/Desktop/music-generator-app/src/Player.js"],"names":["Tone","Midi","i","Player","start","sampler","Sampler","urls","baseUrl","toDestination","fileName","fromUrl","midi","console","log","notes","objTime","tracks","track","note","name","time","push","notesFromMidiFile","triggerAttackRelease","duration","velocity"],"mappings":"8yBAAA,MAAO,GAAKA,CAAAA,IAAZ,KAAsB,MAAtB,CACA,OAASC,IAAT,KAAqB,cAArB,CAEA,GAAIC,CAAAA,CAAC,CAAG,CAAR,C,GACqBC,CAAAA,M,iIACT,CACJH,IAAI,CAACI,KAAL,GACA,KAAKC,OAAL,CAAe,GAAIL,CAAAA,IAAI,CAACM,OAAT,CAAiB,CAC5BC,IAAI,CAAE,CACF,KAAM,QADJ,CAEF,KAAM,QAFJ,CAGF,KAAM,QAHJ,CAIF,KAAM,QAJJ,CAKF,MAAO,SALL,CAMF,MAAO,SANL,CAOF,KAAM,QAPJ,CAQF,KAAM,QARJ,CASF,KAAM,QATJ,CADsB,CAY5BC,OAAO,CAAE,4CAZmB,CAAjB,EAaZC,aAbY,EAAf,CAcH,C,4IAEuBC,Q,4MACDT,CAAAA,IAAI,CAACU,OAAL,CAAa,IAAMD,QAAnB,C,QAAbE,I,eACNC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACIG,K,CAAQ,E,CACRC,O,CAAU,C,sCACIJ,IAAI,CAACK,M,MAAvB,+CAA+B,CAAtBC,KAAsB,mDACVA,KAAK,CAACH,KADI,MAC3B,kDAA8B,CAArBI,IAAqB,cAC1BN,OAAO,CAACC,GAAR,CAAY,aAAeK,IAAI,CAACC,IAAhC,EACAJ,OAAO,EAAIG,IAAI,CAACE,IAAhB,CACAF,IAAI,CAACH,OAAL,CAAeA,OAAf,CACAD,KAAK,CAACO,IAAN,CAAWH,IAAX,EACH,CAN0B,uDAO9B,C,qFAGMJ,K,0SAEQL,Q,8KACG,MAAKa,iBAAL,CAAuBb,QAAvB,C,QAAdK,K,sDACaA,K,MAAjB,kDAAwB,CAAfI,IAAe,cACpB,KAAKd,OAAL,CAAamB,oBAAb,CAAkC,CAACL,IAAI,CAACC,IAAN,CAAlC,CAA+CD,IAAI,CAACM,QAApD,CAA8DN,IAAI,CAACE,IAAnE,CAAyEF,IAAI,CAACO,QAA9E,EACAb,OAAO,CAACC,GAAR,CAAY,cAAgBK,IAAI,CAACC,IAAjC,EACH,C,kPAzCYjB,M","sourcesContent":["import * as Tone from 'tone'\nimport { Midi } from '@tonejs/midi'\n\nlet i = 0\nexport default class Player {\n    setup() {\n        Tone.start()\n        this.sampler = new Tone.Sampler({\n            urls: {\n                \"C1\": \"C1.mp3\",\n                \"C2\": \"C2.mp3\",\n                \"C3\": \"C3.mp3\",\n                \"C4\": \"C4.mp3\",\n                \"D#4\": \"Ds4.mp3\",\n                \"F#4\": \"Fs4.mp3\",\n                \"A4\": \"A4.mp3\",\n                \"C5\": \"C5.mp3\",\n                \"C6\": \"C6.mp3\",\n            },\n            baseUrl: \"https://tonejs.github.io/audio/salamander/\",\n        }).toDestination()\n    }\n\n    async notesFromMidiFile(fileName) {\n        const midi = await Midi.fromUrl(\"/\" + fileName);\n        console.log(midi)\n        let notes = []\n        let objTime = 0\n        for (let track of midi.tracks) {\n            for (let note of track.notes) {\n                console.log('add note: ' + note.name)\n                objTime += note.time;\n                note.objTime = objTime;\n                notes.push(note);\n            }\n        }\n\n        \n        return notes\n    }\n    async playMidiFile(fileName) {\n        let notes = await this.notesFromMidiFile(fileName)\n        for (let note of notes) {\n            this.sampler.triggerAttackRelease([note.name], note.duration, note.time, note.velocity);\n            console.log('play note: ' + note.name)\n        }\n\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}