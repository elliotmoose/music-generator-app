{"ast":null,"code":"import _toConsumableArray from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nexport var createDetectCycles = function createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) {\n  return function detectCycles(chain, nextLink) {\n    var audioNode = isAudioNode(nextLink) ? nextLink : getValueForKey(audioParamAudioNodeStore, nextLink);\n\n    if (isDelayNode(audioNode)) {\n      return [];\n    }\n\n    if (chain[0] === audioNode) {\n      return [chain];\n    }\n\n    if (chain.includes(audioNode)) {\n      return [];\n    }\n\n    var _getAudioNodeConnecti = getAudioNodeConnections(audioNode),\n        outputs = _getAudioNodeConnecti.outputs;\n\n    return Array.from(outputs).map(function (outputConnection) {\n      return detectCycles([].concat(_toConsumableArray(chain), [audioNode]), outputConnection[0]);\n    }).reduce(function (mergedCycles, nestedCycles) {\n      return mergedCycles.concat(nestedCycles);\n    }, []);\n  };\n};","map":{"version":3,"sources":["../../../src/factories/detect-cycles.ts"],"names":[],"mappings":";AAAA,SAAS,WAAT,QAA4B,sBAA5B;AACA,SAAS,WAAT,QAA4B,sBAA5B;AAIA,OAAO,IAAM,kBAAkB,GAAyB,SAA3C,kBAA2C,CAAC,wBAAD,EAA2B,uBAA3B,EAAoD,cAApD,EAAsE;AAC1H,SAAO,SAAS,YAAT,CAA0C,KAA1C,EAAkE,QAAlE,EAAuG;AAC1G,QAAM,SAAS,GAAG,WAAW,CAAC,QAAD,CAAX,GAAwB,QAAxB,GAAkD,cAAc,CAAC,wBAAD,EAA2B,QAA3B,CAAlF;;AAEA,QAAI,WAAW,CAAC,SAAD,CAAf,EAA4B;AACxB,aAAO,EAAP;AACH;;AAED,QAAI,KAAK,CAAC,CAAD,CAAL,KAAa,SAAjB,EAA4B;AACxB,aAAO,CAAC,KAAD,CAAP;AACH;;AAED,QAAI,KAAK,CAAC,QAAN,CAAe,SAAf,CAAJ,EAA+B;AAC3B,aAAO,EAAP;AACH;;AAbyG,gCAetF,uBAAuB,CAAC,SAAD,CAf+D;AAAA,QAelG,OAfkG,yBAelG,OAfkG;;AAiB1G,WAAO,KAAK,CAAC,IAAN,CAAW,OAAX,EACF,GADE,CACE,UAAC,gBAAD;AAAA,aAAsB,YAAY,8BAAK,KAAL,IAAY,SAAZ,IAAwB,gBAAgB,CAAC,CAAD,CAAxC,CAAlC;AAAA,KADF,EAEF,MAFE,CAEK,UAAC,YAAD,EAAe,YAAf;AAAA,aAAgC,YAAY,CAAC,MAAb,CAAoB,YAApB,CAAhC;AAAA,KAFL,EAEwE,EAFxE,CAAP;AAGH,GApBD;AAqBH,CAtBM","sourceRoot":"","sourcesContent":["import { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nexport const createDetectCycles = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {\n    return function detectCycles(chain, nextLink) {\n        const audioNode = isAudioNode(nextLink) ? nextLink : getValueForKey(audioParamAudioNodeStore, nextLink);\n        if (isDelayNode(audioNode)) {\n            return [];\n        }\n        if (chain[0] === audioNode) {\n            return [chain];\n        }\n        if (chain.includes(audioNode)) {\n            return [];\n        }\n        const { outputs } = getAudioNodeConnections(audioNode);\n        return Array.from(outputs)\n            .map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0]))\n            .reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n    };\n};\n//# sourceMappingURL=detect-cycles.js.map"]},"metadata":{},"sourceType":"module"}