{"ast":null,"code":"export var testClonabilityOfAudioWorkletNodeOptions = function testClonabilityOfAudioWorkletNodeOptions(audioWorkletNodeOptions) {\n  var _MessageChannel = new MessageChannel(),\n      port1 = _MessageChannel.port1;\n\n  try {\n    // This will throw an error if the audioWorkletNodeOptions are not clonable.\n    port1.postMessage(audioWorkletNodeOptions);\n  } finally {\n    port1.close();\n  }\n};","map":{"version":3,"sources":["../../../src/helpers/test-clonability-of-audio-worklet-node-options.ts"],"names":[],"mappings":"AAEA,OAAO,IAAM,wCAAwC,GAAG,SAA3C,wCAA2C,CAAC,uBAAD,EAA4D;AAAA,wBAC9F,IAAI,cAAJ,EAD8F;AAAA,MACxG,KADwG,mBACxG,KADwG;;AAGhH,MAAI;AACA;AACA,IAAA,KAAK,CAAC,WAAN,CAAkB,uBAAlB;AACH,GAHD,SAGU;AACN,IAAA,KAAK,CAAC,KAAN;AACH;AACJ,CATM","sourceRoot":"","sourcesContent":["export const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    const { port1 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n    }\n};\n//# sourceMappingURL=test-clonability-of-audio-worklet-node-options.js.map"]},"metadata":{},"sourceType":"module"}