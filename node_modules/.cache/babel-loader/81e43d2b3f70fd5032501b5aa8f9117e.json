{"ast":null,"code":"var core = require('../../core'),\n    TiltShiftXFilter = require('./TiltShiftXFilter'),\n    TiltShiftYFilter = require('./TiltShiftYFilter');\n/**\n * @author Vico @vicocotea\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * A TiltShift Filter. Manages the pass of both a TiltShiftXFilter and TiltShiftYFilter.\n *\n * @class\n * @extends PIXI.AbstractFilter\n * @memberof PIXI.filters\n */\n\n\nfunction TiltShiftFilter() {\n  core.AbstractFilter.call(this);\n  this.tiltShiftXFilter = new TiltShiftXFilter();\n  this.tiltShiftYFilter = new TiltShiftYFilter();\n}\n\nTiltShiftFilter.prototype = Object.create(core.AbstractFilter.prototype);\nTiltShiftFilter.prototype.constructor = TiltShiftFilter;\nmodule.exports = TiltShiftFilter;\n\nTiltShiftFilter.prototype.applyFilter = function (renderer, input, output) {\n  var renderTarget = renderer.filterManager.getRenderTarget(true);\n  this.tiltShiftXFilter.applyFilter(renderer, input, renderTarget);\n  this.tiltShiftYFilter.applyFilter(renderer, renderTarget, output);\n  renderer.filterManager.returnRenderTarget(renderTarget);\n};\n\nObject.defineProperties(TiltShiftFilter.prototype, {\n  /**\n   * The strength of the blur.\n   *\n   * @member {number}\n   * @memberof TiltShiftFilter#\n   */\n  blur: {\n    get: function () {\n      return this.tiltShiftXFilter.blur;\n    },\n    set: function (value) {\n      this.tiltShiftXFilter.blur = this.tiltShiftYFilter.blur = value;\n    }\n  },\n\n  /**\n   * The strength of the gradient blur.\n   *\n   * @member {number}\n   * @memberof TiltShiftFilter#\n   */\n  gradientBlur: {\n    get: function () {\n      return this.tiltShiftXFilter.gradientBlur;\n    },\n    set: function (value) {\n      this.tiltShiftXFilter.gradientBlur = this.tiltShiftYFilter.gradientBlur = value;\n    }\n  },\n\n  /**\n   * The Y value to start the effect at.\n   *\n   * @member {number}\n   * @memberof TiltShiftFilter#\n   */\n  start: {\n    get: function () {\n      return this.tiltShiftXFilter.start;\n    },\n    set: function (value) {\n      this.tiltShiftXFilter.start = this.tiltShiftYFilter.start = value;\n    }\n  },\n\n  /**\n   * The Y value to end the effect at.\n   *\n   * @member {number}\n   * @memberof TiltShiftFilter#\n   */\n  end: {\n    get: function () {\n      return this.tiltShiftXFilter.end;\n    },\n    set: function (value) {\n      this.tiltShiftXFilter.end = this.tiltShiftYFilter.end = value;\n    }\n  }\n});","map":{"version":3,"sources":["/Users/thebe/Desktop/music-generator-app/node_modules/pixi.js/src/filters/tiltshift/TiltShiftFilter.js"],"names":["core","require","TiltShiftXFilter","TiltShiftYFilter","TiltShiftFilter","AbstractFilter","call","tiltShiftXFilter","tiltShiftYFilter","prototype","Object","create","constructor","module","exports","applyFilter","renderer","input","output","renderTarget","filterManager","getRenderTarget","returnRenderTarget","defineProperties","blur","get","set","value","gradientBlur","start","end"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,YAAD,CAAlB;AAAA,IACIC,gBAAgB,GAAGD,OAAO,CAAC,oBAAD,CAD9B;AAAA,IAEIE,gBAAgB,GAAGF,OAAO,CAAC,oBAAD,CAF9B;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASG,eAAT,GACA;AACIJ,EAAAA,IAAI,CAACK,cAAL,CAAoBC,IAApB,CAAyB,IAAzB;AAEA,OAAKC,gBAAL,GAAwB,IAAIL,gBAAJ,EAAxB;AACA,OAAKM,gBAAL,GAAwB,IAAIL,gBAAJ,EAAxB;AACH;;AAEDC,eAAe,CAACK,SAAhB,GAA4BC,MAAM,CAACC,MAAP,CAAcX,IAAI,CAACK,cAAL,CAAoBI,SAAlC,CAA5B;AACAL,eAAe,CAACK,SAAhB,CAA0BG,WAA1B,GAAwCR,eAAxC;AACAS,MAAM,CAACC,OAAP,GAAiBV,eAAjB;;AAEAA,eAAe,CAACK,SAAhB,CAA0BM,WAA1B,GAAwC,UAAUC,QAAV,EAAoBC,KAApB,EAA2BC,MAA3B,EACxC;AACI,MAAIC,YAAY,GAAGH,QAAQ,CAACI,aAAT,CAAuBC,eAAvB,CAAuC,IAAvC,CAAnB;AAEA,OAAKd,gBAAL,CAAsBQ,WAAtB,CAAkCC,QAAlC,EAA4CC,KAA5C,EAAmDE,YAAnD;AAEA,OAAKX,gBAAL,CAAsBO,WAAtB,CAAkCC,QAAlC,EAA4CG,YAA5C,EAA0DD,MAA1D;AAEAF,EAAAA,QAAQ,CAACI,aAAT,CAAuBE,kBAAvB,CAA0CH,YAA1C;AACH,CATD;;AAWAT,MAAM,CAACa,gBAAP,CAAwBnB,eAAe,CAACK,SAAxC,EAAmD;AAC/C;AACJ;AACA;AACA;AACA;AACA;AACIe,EAAAA,IAAI,EAAE;AACFC,IAAAA,GAAG,EAAE,YACL;AACI,aAAO,KAAKlB,gBAAL,CAAsBiB,IAA7B;AACH,KAJC;AAKFE,IAAAA,GAAG,EAAE,UAAUC,KAAV,EACL;AACI,WAAKpB,gBAAL,CAAsBiB,IAAtB,GAA6B,KAAKhB,gBAAL,CAAsBgB,IAAtB,GAA6BG,KAA1D;AACH;AARC,GAPyC;;AAkB/C;AACJ;AACA;AACA;AACA;AACA;AACIC,EAAAA,YAAY,EAAE;AACVH,IAAAA,GAAG,EAAE,YACL;AACI,aAAO,KAAKlB,gBAAL,CAAsBqB,YAA7B;AACH,KAJS;AAKVF,IAAAA,GAAG,EAAE,UAAUC,KAAV,EACL;AACI,WAAKpB,gBAAL,CAAsBqB,YAAtB,GAAqC,KAAKpB,gBAAL,CAAsBoB,YAAtB,GAAqCD,KAA1E;AACH;AARS,GAxBiC;;AAmC/C;AACJ;AACA;AACA;AACA;AACA;AACIE,EAAAA,KAAK,EAAE;AACHJ,IAAAA,GAAG,EAAE,YACL;AACI,aAAO,KAAKlB,gBAAL,CAAsBsB,KAA7B;AACH,KAJE;AAKHH,IAAAA,GAAG,EAAE,UAAUC,KAAV,EACL;AACI,WAAKpB,gBAAL,CAAsBsB,KAAtB,GAA8B,KAAKrB,gBAAL,CAAsBqB,KAAtB,GAA8BF,KAA5D;AACH;AARE,GAzCwC;;AAoD/C;AACJ;AACA;AACA;AACA;AACA;AACIG,EAAAA,GAAG,EAAE;AACDL,IAAAA,GAAG,EAAE,YACL;AACI,aAAO,KAAKlB,gBAAL,CAAsBuB,GAA7B;AACH,KAJA;AAKDJ,IAAAA,GAAG,EAAE,UAAUC,KAAV,EACL;AACI,WAAKpB,gBAAL,CAAsBuB,GAAtB,GAA4B,KAAKtB,gBAAL,CAAsBsB,GAAtB,GAA4BH,KAAxD;AACH;AARA;AA1D0C,CAAnD","sourcesContent":["var core = require('../../core'),\n    TiltShiftXFilter = require('./TiltShiftXFilter'),\n    TiltShiftYFilter = require('./TiltShiftYFilter');\n\n/**\n * @author Vico @vicocotea\n * original filter https://github.com/evanw/glfx.js/blob/master/src/filters/blur/tiltshift.js by Evan Wallace : http://madebyevan.com/\n */\n\n/**\n * A TiltShift Filter. Manages the pass of both a TiltShiftXFilter and TiltShiftYFilter.\n *\n * @class\n * @extends PIXI.AbstractFilter\n * @memberof PIXI.filters\n */\nfunction TiltShiftFilter()\n{\n    core.AbstractFilter.call(this);\n\n    this.tiltShiftXFilter = new TiltShiftXFilter();\n    this.tiltShiftYFilter = new TiltShiftYFilter();\n}\n\nTiltShiftFilter.prototype = Object.create(core.AbstractFilter.prototype);\nTiltShiftFilter.prototype.constructor = TiltShiftFilter;\nmodule.exports = TiltShiftFilter;\n\nTiltShiftFilter.prototype.applyFilter = function (renderer, input, output)\n{\n    var renderTarget = renderer.filterManager.getRenderTarget(true);\n\n    this.tiltShiftXFilter.applyFilter(renderer, input, renderTarget);\n\n    this.tiltShiftYFilter.applyFilter(renderer, renderTarget, output);\n\n    renderer.filterManager.returnRenderTarget(renderTarget);\n};\n\nObject.defineProperties(TiltShiftFilter.prototype, {\n    /**\n     * The strength of the blur.\n     *\n     * @member {number}\n     * @memberof TiltShiftFilter#\n     */\n    blur: {\n        get: function ()\n        {\n            return this.tiltShiftXFilter.blur;\n        },\n        set: function (value)\n        {\n            this.tiltShiftXFilter.blur = this.tiltShiftYFilter.blur = value;\n        }\n    },\n\n    /**\n     * The strength of the gradient blur.\n     *\n     * @member {number}\n     * @memberof TiltShiftFilter#\n     */\n    gradientBlur: {\n        get: function ()\n        {\n            return this.tiltShiftXFilter.gradientBlur;\n        },\n        set: function (value)\n        {\n            this.tiltShiftXFilter.gradientBlur = this.tiltShiftYFilter.gradientBlur = value;\n        }\n    },\n\n    /**\n     * The Y value to start the effect at.\n     *\n     * @member {number}\n     * @memberof TiltShiftFilter#\n     */\n    start: {\n        get: function ()\n        {\n            return this.tiltShiftXFilter.start;\n        },\n        set: function (value)\n        {\n            this.tiltShiftXFilter.start = this.tiltShiftYFilter.start = value;\n        }\n    },\n\n    /**\n     * The Y value to end the effect at.\n     *\n     * @member {number}\n     * @memberof TiltShiftFilter#\n     */\n    end: {\n        get: function ()\n        {\n            return this.tiltShiftXFilter.end;\n        },\n        set: function (value)\n        {\n            this.tiltShiftXFilter.end = this.tiltShiftYFilter.end = value;\n        }\n    }\n});\n"]},"metadata":{},"sourceType":"script"}