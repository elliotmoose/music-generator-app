{"ast":null,"code":"import _classCallCheck from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\nimport { Param } from \"./Param\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\n/**\n * Tone.Listener is a thin wrapper around the AudioListener. Listener combined\n * with [[Panner3D]] makes up the Web Audio API's 3D panning system. Panner3D allows you\n * to place sounds in 3D and Listener allows you to navigate the 3D sound environment from\n * a first-person perspective. There is only one listener per audio context.\n */\n\nexport var Listener = /*#__PURE__*/function (_ToneAudioNode) {\n  _inherits(Listener, _ToneAudioNode);\n\n  var _super = _createSuper(Listener);\n\n  function Listener() {\n    var _this;\n\n    _classCallCheck(this, Listener);\n\n    _this = _super.apply(this, arguments);\n    _this.name = \"Listener\";\n    _this.positionX = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.positionX\n    });\n    _this.positionY = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.positionY\n    });\n    _this.positionZ = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.positionZ\n    });\n    _this.forwardX = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.forwardX\n    });\n    _this.forwardY = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.forwardY\n    });\n    _this.forwardZ = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.forwardZ\n    });\n    _this.upX = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.upX\n    });\n    _this.upY = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.upY\n    });\n    _this.upZ = new Param({\n      context: _this.context,\n      param: _this.context.rawContext.listener.upZ\n    });\n    return _this;\n  }\n\n  _createClass(Listener, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(Listener.prototype), \"dispose\", this).call(this);\n\n      this.positionX.dispose();\n      this.positionY.dispose();\n      this.positionZ.dispose();\n      this.forwardX.dispose();\n      this.forwardY.dispose();\n      this.forwardZ.dispose();\n      this.upX.dispose();\n      this.upY.dispose();\n      this.upZ.dispose();\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(ToneAudioNode.getDefaults(), {\n        positionX: 0,\n        positionY: 0,\n        positionZ: 0,\n        forwardX: 0,\n        forwardY: 0,\n        forwardZ: -1,\n        upX: 0,\n        upY: 1,\n        upZ: 0\n      });\n    }\n  }]);\n\n  return Listener;\n}(ToneAudioNode); //-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\n\nonContextInit(function (context) {\n  context.listener = new Listener({\n    context: context\n  });\n});\nonContextClose(function (context) {\n  context.listener.dispose();\n});","map":{"version":3,"sources":["../../../../Tone/core/context/Listener.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { ToneAudioNode } from \"./ToneAudioNode\";\nimport { Param } from \"./Param\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\n/**\n * Tone.Listener is a thin wrapper around the AudioListener. Listener combined\n * with [[Panner3D]] makes up the Web Audio API's 3D panning system. Panner3D allows you\n * to place sounds in 3D and Listener allows you to navigate the 3D sound environment from\n * a first-person perspective. There is only one listener per audio context.\n */\nexport class Listener extends ToneAudioNode {\n    constructor() {\n        super(...arguments);\n        this.name = \"Listener\";\n        this.positionX = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.positionX,\n        });\n        this.positionY = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.positionY,\n        });\n        this.positionZ = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.positionZ,\n        });\n        this.forwardX = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.forwardX,\n        });\n        this.forwardY = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.forwardY,\n        });\n        this.forwardZ = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.forwardZ,\n        });\n        this.upX = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.upX,\n        });\n        this.upY = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.upY,\n        });\n        this.upZ = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.upZ,\n        });\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            positionX: 0,\n            positionY: 0,\n            positionZ: 0,\n            forwardX: 0,\n            forwardY: 0,\n            forwardZ: -1,\n            upX: 0,\n            upY: 1,\n            upZ: 0,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.positionX.dispose();\n        this.positionY.dispose();\n        this.positionZ.dispose();\n        this.forwardX.dispose();\n        this.forwardY.dispose();\n        this.forwardZ.dispose();\n        this.upX.dispose();\n        this.upY.dispose();\n        this.upZ.dispose();\n        return this;\n    }\n}\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(context => {\n    context.listener = new Listener({ context });\n});\nonContextClose(context => {\n    context.listener.dispose();\n});\n//# sourceMappingURL=Listener.js.map"]},"metadata":{},"sourceType":"module"}