{"ast":null,"code":"import _classCallCheck from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nexport var createMediaElementAudioSourceNodeConstructor = function createMediaElementAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(MediaElementAudioSourceNode, _audioNodeConstructor);\n\n    var _super = _createSuper(MediaElementAudioSourceNode);\n\n    function MediaElementAudioSourceNode(context, options) {\n      var _this;\n\n      _classCallCheck(this, MediaElementAudioSourceNode);\n\n      var nativeContext = getNativeContext(context);\n      var nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options); // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n\n      if (isNativeOfflineAudioContext(nativeContext)) {\n        throw TypeError();\n      }\n\n      _this = _super.call(this, context, true, nativeMediaElementAudioSourceNode, null);\n      _this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n      return _this;\n    }\n\n    _createClass(MediaElementAudioSourceNode, [{\n      key: \"mediaElement\",\n      get: function get() {\n        return this._nativeMediaElementAudioSourceNode.mediaElement;\n      }\n    }]);\n\n    return MediaElementAudioSourceNode;\n  }(audioNodeConstructor);\n};","map":{"version":3,"sources":["../../../src/factories/media-element-audio-source-node-constructor.ts"],"names":[],"mappings":";;;;AAGA,OAAO,IAAM,4CAA4C,GAAmD,SAA/F,4CAA+F,CACxG,oBADwG,EAExG,uCAFwG,EAGxG,gBAHwG,EAIxG,2BAJwG,EAKxG;AACA;AAAA;;AAAA;;AAII,yCAAY,OAAZ,EAAwB,OAAxB,EAAgE;AAAA;;AAAA;;AAC5D,UAAM,aAAa,GAAG,gBAAgB,CAAC,OAAD,CAAtC;AACA,UAAM,iCAAiC,GAAG,uCAAuC,CAAC,aAAD,EAAgB,OAAhB,CAAjF,CAF4D,CAI5D;;AACA,UAAI,2BAA2B,CAAC,aAAD,CAA/B,EAAgD;AAC5C,cAAM,SAAS,EAAf;AACH;;AAED,gCAAM,OAAN,EAAe,IAAf,EAAqB,iCAArB,EAA+E,IAA/E;AAEA,YAAK,kCAAL,GAA0C,iCAA1C;AAX4D;AAY/D;;AAhBL;AAAA;AAAA,0BAkBoB;AACZ,eAAO,KAAK,kCAAL,CAAwC,YAA/C;AACH;AApBL;;AAAA;AAAA,IAAiG,oBAAjG;AAsBH,CA5BM","sourceRoot":"","sourcesContent":["export const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaElementAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw TypeError();\n            }\n            super(context, true, nativeMediaElementAudioSourceNode, null);\n            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n        }\n        get mediaElement() {\n            return this._nativeMediaElementAudioSourceNode.mediaElement;\n        }\n    };\n};\n//# sourceMappingURL=media-element-audio-source-node-constructor.js.map"]},"metadata":{},"sourceType":"module"}