{"ast":null,"code":"import _objectSpread from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { wrapIIRFilterNodeGetFrequencyResponseMethod } from '../helpers/wrap-iir-filter-node-get-frequency-response-method';\nvar DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers'\n};\nexport var createIIRFilterNodeConstructor = function createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) {\n  return /*#__PURE__*/function (_audioNodeConstructor) {\n    _inherits(IIRFilterNode, _audioNodeConstructor);\n\n    var _super = _createSuper(IIRFilterNode);\n\n    function IIRFilterNode(context, options) {\n      var _this;\n\n      _classCallCheck(this, IIRFilterNode);\n\n      var nativeContext = getNativeContext(context);\n      var isOffline = isNativeOfflineAudioContext(nativeContext);\n\n      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n\n      var nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);\n      var iirFilterNodeRenderer = isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null;\n      _this = _super.call(this, context, false, nativeIIRFilterNode, iirFilterNodeRenderer); // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.\n      // @todo Write a test which allows other browsers to remain unpatched.\n\n      wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);\n      _this._nativeIIRFilterNode = nativeIIRFilterNode; // @todo Determine a meaningful tail-time instead of just using one second.\n\n      setAudioNodeTailTime(_assertThisInitialized(_this), 1);\n      return _this;\n    }\n\n    _createClass(IIRFilterNode, [{\n      key: \"getFrequencyResponse\",\n      value: function getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n        return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n      }\n    }]);\n\n    return IIRFilterNode;\n  }(audioNodeConstructor);\n};","map":{"version":3,"sources":["../../../src/factories/iir-filter-node-constructor.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,2CAAT,QAA4D,+DAA5D;AAIA,IAAM,eAAe,GAAG;AACpB,EAAA,YAAY,EAAE,CADM;AAEpB,EAAA,gBAAgB,EAAE,KAFE;AAGpB,EAAA,qBAAqB,EAAE;AAHH,CAAxB;AAMA,OAAO,IAAM,8BAA8B,GAAqC,SAAnE,8BAAmE,CAC5E,oBAD4E,EAE5E,yBAF4E,EAG5E,2BAH4E,EAI5E,gBAJ4E,EAK5E,2BAL4E,EAM5E,oBAN4E,EAO5E;AACA;AAAA;;AAAA;;AAGI,2BACI,OADJ,EAEI,OAFJ,EAEoI;AAAA;;AAAA;;AAEhI,UAAM,aAAa,GAAG,gBAAgB,CAAC,OAAD,CAAtC;AACA,UAAM,SAAS,GAAG,2BAA2B,CAAC,aAAD,CAA7C;;AACA,UAAM,aAAa,mCAAQ,eAAR,GAA4B,OAA5B,CAAnB;;AACA,UAAM,mBAAmB,GAAG,yBAAyB,CACjD,aADiD,EAEjD,SAAS,GAAG,IAAH,GAAuC,OAAS,CAAC,WAFT,EAGjD,aAHiD,CAArD;AAKA,UAAM,qBAAqB,GACtB,SAAS,GAAG,2BAA2B,CAAC,aAAa,CAAC,QAAf,EAAyB,aAAa,CAAC,WAAvC,CAA9B,GAAoF,IADlG;AAIA,gCAAM,OAAN,EAAe,KAAf,EAAsB,mBAAtB,EAA2C,qBAA3C,EAdgI,CAgBhI;AACA;;AACA,MAAA,2CAA2C,CAAC,mBAAD,CAA3C;AAEA,YAAK,oBAAL,GAA4B,mBAA5B,CApBgI,CAsBhI;;AACA,MAAA,oBAAoB,gCAAO,CAAP,CAApB;AAvBgI;AAwBnI;;AA7BL;AAAA;AAAA,2CA+BgC,WA/BhC,EA+B2D,WA/B3D,EA+BsF,aA/BtF,EA+BiH;AACzG,eAAO,KAAK,oBAAL,CAA0B,oBAA1B,CAA+C,WAA/C,EAA4D,WAA5D,EAAyE,aAAzE,CAAP;AACH;AAjCL;;AAAA;AAAA,IAAuD,oBAAvD;AAmCH,CA3CM","sourceRoot":"","sourcesContent":["import { wrapIIRFilterNodeGetFrequencyResponseMethod } from '../helpers/wrap-iir-filter-node-get-frequency-response-method';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers'\n};\nexport const createIIRFilterNodeConstructor = (audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext, setAudioNodeTailTime) => {\n    return class IIRFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);\n            const iirFilterNodeRenderer = ((isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null));\n            super(context, false, nativeIIRFilterNode, iirFilterNodeRenderer);\n            // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.\n            // @todo Write a test which allows other browsers to remain unpatched.\n            wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);\n            this._nativeIIRFilterNode = nativeIIRFilterNode;\n            // @todo Determine a meaningful tail-time instead of just using one second.\n            setAudioNodeTailTime(this, 1);\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n        }\n    };\n};\n//# sourceMappingURL=iir-filter-node-constructor.js.map"]},"metadata":{},"sourceType":"module"}