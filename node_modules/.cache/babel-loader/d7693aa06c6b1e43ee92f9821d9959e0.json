{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/thebe/Desktop/music-generator-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport Player from './Player';\nimport * as Tone from 'tone';\nimport PlayBar from './components/Playbar';\nimport PianoRoll from \"react-piano-roll\";\nlet interval;\n\nfunction App() {\n  _s();\n\n  const [play, setPlay] = useState(false);\n  const [player, setPlayer] = useState(new Player());\n  const [playerTwo, setPlayerTwo] = useState(new Player());\n  const [notes, setNotes] = useState([]);\n  const [playheadTime, setPlayheadTime] = useState(0);\n  const [presetNotes, setPresetNotes] = useState({\n    \"Cmaj7\": \"a\",\n    \"Dm\": \"s\",\n    \"C\": \"d\",\n    \"Em\": \"f\",\n    \"A\": \"g\",\n    \"Asus7\": \"h\",\n    \"G\": \"j\",\n    \"B\": \"k\"\n  });\n  useEffect(() => {\n    player.setup();\n    setPlayer(player); // console.log(\"set up\")\n\n    if (!interval) {\n      setInterval(() => {\n        setPlayheadTime(Tone.context.currentTime * DURATION_FACTOR);\n      }, 10);\n    }\n  }, []);\n  useEffect(() => {\n    if (play) {\n      player.setup();\n      setPlayer(player);\n      console.log(\"set up\");\n      console.log(\"prepping notes\");\n\n      (async () => {\n        setNotes(await player.notesFromMidiFile('ABeautifulFriendship.mid'));\n        await player.playMidiFile('ABeautifulFriendship.mid');\n      })();\n\n      setPlay(false);\n    }\n  }, [play, player]);\n  const MAX_MIDI = 88;\n  const NOTE_HEIGHT = 8;\n  const DURATION_FACTOR = 100;\n\n  function handleEvent(e) {\n    // console.log(key);\n    console.log(e.target.value);\n    console.log(e.target.id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"20%\",\n          textTransform: \"uppercase\"\n        },\n        children: [\"2.5K only\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 73\n        }, this), \" music generation \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 100\n        }, this), \" project\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PlayBar, {\n        onClickPlay: () => setPlay(true),\n        onClickPause: () => {\n          setPlay(false);\n        },\n        onClickStop: async () => {\n          await player.stopMidiFile();\n          setNotes([]);\n          setPlay(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"20%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-piano\",\n      children: notes.map((note, i) => {\n        // const noteDescription = `${note.name} note: ${note.midi} dur:${note.duration} time:${note.time}`\n        const noteDescription = `${note.name}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\",\n            left: note.time * DURATION_FACTOR - playheadTime,\n            top: MAX_MIDI * NOTE_HEIGHT - note.midi * NOTE_HEIGHT,\n            width: note.duration * DURATION_FACTOR,\n            height: NOTE_HEIGHT,\n            backgroundColor: '#7Ec291'\n          }\n        }, `${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-preset-container\",\n      children: Object.entries(presetNotes).map(([key, value]) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"App-preset\",\n          onClick: handleEvent,\n          value: `${key}`,\n          id: `${value}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingTop: \"2.5vw\",\n              fontSize: \"1.25vw\"\n            },\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingTop: \"1.25vw\",\n              fontSize: \"1vw\",\n              color: \"#E37B7B\"\n            },\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0gqJjpmMLFeBUwZIy2uR8v1krUQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/thebe/Desktop/music-generator-app/src/App.js"],"names":["useEffect","useState","Player","Tone","PlayBar","PianoRoll","interval","App","play","setPlay","player","setPlayer","playerTwo","setPlayerTwo","notes","setNotes","playheadTime","setPlayheadTime","presetNotes","setPresetNotes","setup","setInterval","context","currentTime","DURATION_FACTOR","console","log","notesFromMidiFile","playMidiFile","MAX_MIDI","NOTE_HEIGHT","handleEvent","e","target","value","id","width","textTransform","stopMidiFile","map","note","i","noteDescription","name","position","left","time","top","midi","duration","height","backgroundColor","Object","entries","key","paddingTop","fontSize","color"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react'\nimport Player from './Player';\nimport * as Tone from 'tone'\nimport PlayBar from './components/Playbar'\nimport PianoRoll from \"react-piano-roll\";\n\n\nlet interval;\nfunction App() {\n  const [play, setPlay] = useState(false)\n  const [player, setPlayer] = useState(new Player());\n  const [playerTwo, setPlayerTwo] = useState(new Player());\n  const [notes, setNotes] = useState([]);\n  const [playheadTime, setPlayheadTime] = useState(0);\n  const [presetNotes, setPresetNotes] = useState({\n    \"Cmaj7\":\"a\",\n    \"Dm\":\"s\",\n    \"C\":\"d\",\n    \"Em\":\"f\",\n    \"A\":\"g\",\n    \"Asus7\":\"h\",\n    \"G\":\"j\",\n    \"B\":\"k\"\n  })\n\n\n  useEffect(() => {\n    player.setup();\n    setPlayer(player);\n    // console.log(\"set up\")\n    if (!interval) {\n      setInterval(() => {\n        setPlayheadTime(Tone.context.currentTime * DURATION_FACTOR)\n      }, 10);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (play) {\n      player.setup();\n      setPlayer(player);\n      console.log(\"set up\")\n      console.log(\"prepping notes\");\n      (async () => {\n        setNotes(await player.notesFromMidiFile('ABeautifulFriendship.mid'));\n        await player.playMidiFile('ABeautifulFriendship.mid');\n      })()\n\n      setPlay(false);\n    }\n  }, [play,player])\n\n  const MAX_MIDI = 88\n  const NOTE_HEIGHT = 8\n  const DURATION_FACTOR = 100\n\n  function handleEvent(e){\n    // console.log(key);\n    console.log(e.target.value);\n    console.log(e.target.id);\n\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n          <div style={{width:\"20%\",textTransform:\"uppercase\"}}>2.5K only<br></br> music generation <br></br> project</div>\n          <PlayBar onClickPlay={() => setPlay(true)} onClickPause={() => {setPlay(false)}} onClickStop={async ()=>{await player.stopMidiFile();setNotes([]);setPlay(false);}}></PlayBar>\n          <div style={{width:\"20%\"}}></div>\n\n      </div>\n      {/* <button onClick={() => setPlay(true)}>begin</button>    */}\n\n      {/* <div style={{height: '100%', width: 4, position: 'absolute', left: playheadTime, top: 0, backgroundColor: 'black', transition: '0.2s', zIndex: 999}}/> */}\n      {/* {notes.map((note, i) => {\n        // const noteDescription = `${note.name} note: ${note.midi} dur:${note.duration} time:${note.time}`\n        const noteDescription = `${note.name}`\n        return <div\n          key={`${i}`}\n          style={{ position: 'absolute', left: note.time * DURATION_FACTOR - playheadTime, top: MAX_MIDI * NOTE_HEIGHT - note.midi * NOTE_HEIGHT, width: note.duration * DURATION_FACTOR, height: NOTE_HEIGHT, backgroundColor: 'tomato' }}\n        >{noteDescription}</div>\n      }\n      )} */}\n      <div className=\"App-piano\">\n        {notes.map((note, i) => {\n          // const noteDescription = `${note.name} note: ${note.midi} dur:${note.duration} time:${note.time}`\n          const noteDescription = `${note.name}`\n          return <div\n            key={`${i}`}\n            style={{position:\"absolute\",left: note.time * DURATION_FACTOR - playheadTime, top: MAX_MIDI * NOTE_HEIGHT - note.midi * NOTE_HEIGHT, width: note.duration * DURATION_FACTOR, height: NOTE_HEIGHT, backgroundColor: '#7Ec291' }}\n          ></div>\n        }\n        )}\n      </div>\n      {/* <div style={{backgroundColor:\"yellow\",position:\"relative\"}}> HELLO</div> */}\n      <div className=\"App-preset-container\">\n        {Object.entries(presetNotes).map(([key, value])=> {\n          return <button className=\"App-preset\" onClick={handleEvent} value={`${key}`} id={`${value}`}>\n            <div style={{paddingTop:\"2.5vw\",fontSize:\"1.25vw\"}}>{key}</div>\n            <div style={{paddingTop:\"1.25vw\",fontSize:\"1vw\",color:\"#E37B7B\"}}>{value}</div>\n          </button>\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}