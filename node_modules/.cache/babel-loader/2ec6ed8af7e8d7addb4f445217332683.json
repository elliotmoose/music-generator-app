{"ast":null,"code":"// References:\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// https://gist.github.com/1579671\n// http://updates.html5rocks.com/2012/05/requestAnimationFrame-API-now-with-sub-millisecond-precision\n// https://gist.github.com/timhall/4078614\n// https://github.com/Financial-Times/polyfill-service/tree/master/polyfills/requestAnimationFrame\n// Expected to be used with Browserfiy\n// Browserify automatically detects the use of `global` and passes the\n// correct reference of `global`, `self`, and finally `window`\n// Date.now\nif (!(Date.now && Date.prototype.getTime)) {\n  Date.now = function now() {\n    return new Date().getTime();\n  };\n} // performance.now\n\n\nif (!(global.performance && global.performance.now)) {\n  var startTime = Date.now();\n\n  if (!global.performance) {\n    global.performance = {};\n  }\n\n  global.performance.now = function () {\n    return Date.now() - startTime;\n  };\n} // requestAnimationFrame\n\n\nvar lastTime = Date.now();\nvar vendors = ['ms', 'moz', 'webkit', 'o'];\n\nfor (var x = 0; x < vendors.length && !global.requestAnimationFrame; ++x) {\n  global.requestAnimationFrame = global[vendors[x] + 'RequestAnimationFrame'];\n  global.cancelAnimationFrame = global[vendors[x] + 'CancelAnimationFrame'] || global[vendors[x] + 'CancelRequestAnimationFrame'];\n}\n\nif (!global.requestAnimationFrame) {\n  global.requestAnimationFrame = function (callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError(callback + 'is not a function');\n    }\n\n    var currentTime = Date.now(),\n        delay = 16 + lastTime - currentTime;\n\n    if (delay < 0) {\n      delay = 0;\n    }\n\n    lastTime = currentTime;\n    return setTimeout(function () {\n      lastTime = Date.now();\n      callback(performance.now());\n    }, delay);\n  };\n}\n\nif (!global.cancelAnimationFrame) {\n  global.cancelAnimationFrame = function (id) {\n    clearTimeout(id);\n  };\n}","map":{"version":3,"sources":["/Users/thebe/Desktop/music-generator-app/node_modules/pixi.js/src/polyfill/requestAnimationFrame.js"],"names":["Date","now","prototype","getTime","global","performance","startTime","lastTime","vendors","x","length","requestAnimationFrame","cancelAnimationFrame","callback","TypeError","currentTime","delay","setTimeout","id","clearTimeout"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA,IAAI,EAAEA,IAAI,CAACC,GAAL,IAAYD,IAAI,CAACE,SAAL,CAAeC,OAA7B,CAAJ,EAA2C;AACvCH,EAAAA,IAAI,CAACC,GAAL,GAAW,SAASA,GAAT,GAAe;AACtB,WAAO,IAAID,IAAJ,GAAWG,OAAX,EAAP;AACH,GAFD;AAGH,C,CAED;;;AACA,IAAI,EAAEC,MAAM,CAACC,WAAP,IAAsBD,MAAM,CAACC,WAAP,CAAmBJ,GAA3C,CAAJ,EAAqD;AACjD,MAAIK,SAAS,GAAGN,IAAI,CAACC,GAAL,EAAhB;;AACA,MAAI,CAACG,MAAM,CAACC,WAAZ,EAAyB;AACrBD,IAAAA,MAAM,CAACC,WAAP,GAAqB,EAArB;AACH;;AACDD,EAAAA,MAAM,CAACC,WAAP,CAAmBJ,GAAnB,GAAyB,YAAY;AACjC,WAAOD,IAAI,CAACC,GAAL,KAAaK,SAApB;AACH,GAFD;AAGH,C,CAED;;;AACA,IAAIC,QAAQ,GAAGP,IAAI,CAACC,GAAL,EAAf;AACA,IAAIO,OAAO,GAAG,CAAC,IAAD,EAAO,KAAP,EAAc,QAAd,EAAwB,GAAxB,CAAd;;AAEA,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,OAAO,CAACE,MAAZ,IAAsB,CAACN,MAAM,CAACO,qBAA7C,EAAoE,EAAEF,CAAtE,EAAyE;AACrEL,EAAAA,MAAM,CAACO,qBAAP,GAA+BP,MAAM,CAACI,OAAO,CAACC,CAAD,CAAP,GAAa,uBAAd,CAArC;AACAL,EAAAA,MAAM,CAACQ,oBAAP,GAA8BR,MAAM,CAACI,OAAO,CAACC,CAAD,CAAP,GAAa,sBAAd,CAAN,IAC1BL,MAAM,CAACI,OAAO,CAACC,CAAD,CAAP,GAAa,6BAAd,CADV;AAEH;;AAED,IAAI,CAACL,MAAM,CAACO,qBAAZ,EAAmC;AAC/BP,EAAAA,MAAM,CAACO,qBAAP,GAA+B,UAAUE,QAAV,EAAoB;AAC/C,QAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAChC,YAAM,IAAIC,SAAJ,CAAcD,QAAQ,GAAG,mBAAzB,CAAN;AACH;;AAED,QAAIE,WAAW,GAAGf,IAAI,CAACC,GAAL,EAAlB;AAAA,QACIe,KAAK,GAAG,KAAKT,QAAL,GAAgBQ,WAD5B;;AAGA,QAAIC,KAAK,GAAG,CAAZ,EAAe;AACXA,MAAAA,KAAK,GAAG,CAAR;AACH;;AAEDT,IAAAA,QAAQ,GAAGQ,WAAX;AAEA,WAAOE,UAAU,CAAC,YAAY;AAC1BV,MAAAA,QAAQ,GAAGP,IAAI,CAACC,GAAL,EAAX;AACAY,MAAAA,QAAQ,CAACR,WAAW,CAACJ,GAAZ,EAAD,CAAR;AACH,KAHgB,EAGde,KAHc,CAAjB;AAIH,GAlBD;AAmBH;;AAED,IAAI,CAACZ,MAAM,CAACQ,oBAAZ,EAAkC;AAC9BR,EAAAA,MAAM,CAACQ,oBAAP,GAA8B,UAASM,EAAT,EAAa;AACvCC,IAAAA,YAAY,CAACD,EAAD,CAAZ;AACH,GAFD;AAGH","sourcesContent":["// References:\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// https://gist.github.com/1579671\n// http://updates.html5rocks.com/2012/05/requestAnimationFrame-API-now-with-sub-millisecond-precision\n// https://gist.github.com/timhall/4078614\n// https://github.com/Financial-Times/polyfill-service/tree/master/polyfills/requestAnimationFrame\n\n// Expected to be used with Browserfiy\n// Browserify automatically detects the use of `global` and passes the\n// correct reference of `global`, `self`, and finally `window`\n\n// Date.now\nif (!(Date.now && Date.prototype.getTime)) {\n    Date.now = function now() {\n        return new Date().getTime();\n    };\n}\n\n// performance.now\nif (!(global.performance && global.performance.now)) {\n    var startTime = Date.now();\n    if (!global.performance) {\n        global.performance = {};\n    }\n    global.performance.now = function () {\n        return Date.now() - startTime;\n    };\n}\n\n// requestAnimationFrame\nvar lastTime = Date.now();\nvar vendors = ['ms', 'moz', 'webkit', 'o'];\n\nfor(var x = 0; x < vendors.length && !global.requestAnimationFrame; ++x) {\n    global.requestAnimationFrame = global[vendors[x] + 'RequestAnimationFrame'];\n    global.cancelAnimationFrame = global[vendors[x] + 'CancelAnimationFrame'] ||\n        global[vendors[x] + 'CancelRequestAnimationFrame'];\n}\n\nif (!global.requestAnimationFrame) {\n    global.requestAnimationFrame = function (callback) {\n        if (typeof callback !== 'function') {\n            throw new TypeError(callback + 'is not a function');\n        }\n\n        var currentTime = Date.now(),\n            delay = 16 + lastTime - currentTime;\n\n        if (delay < 0) {\n            delay = 0;\n        }\n\n        lastTime = currentTime;\n\n        return setTimeout(function () {\n            lastTime = Date.now();\n            callback(performance.now());\n        }, delay);\n    };\n}\n\nif (!global.cancelAnimationFrame) {\n    global.cancelAnimationFrame = function(id) {\n        clearTimeout(id);\n    };\n}\n"]},"metadata":{},"sourceType":"script"}