{"ast":null,"code":"import _classCallCheck from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Split } from \"./Split\";\nimport { Add } from \"../../signal/Add\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Subtract } from \"../../signal/Subtract\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Mid/Side processing separates the the 'mid' signal (which comes out of both the left and the right channel)\n * and the 'side' (which only comes out of the the side channels).\n * ```\n * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right\n * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right\n * ```\n * @category Component\n */\n\nexport var MidSideSplit = /*#__PURE__*/function (_ToneAudioNode) {\n  _inherits(MidSideSplit, _ToneAudioNode);\n\n  var _super = _createSuper(MidSideSplit);\n\n  function MidSideSplit() {\n    var _this;\n\n    _classCallCheck(this, MidSideSplit);\n\n    _this = _super.call(this, optionsFromArguments(MidSideSplit.getDefaults(), arguments));\n    _this.name = \"MidSideSplit\";\n    _this._split = _this.input = new Split({\n      channels: 2,\n      context: _this.context\n    });\n    _this._midAdd = new Add({\n      context: _this.context\n    });\n    _this.mid = new Multiply({\n      context: _this.context,\n      value: Math.SQRT1_2\n    });\n    _this._sideSubtract = new Subtract({\n      context: _this.context\n    });\n    _this.side = new Multiply({\n      context: _this.context,\n      value: Math.SQRT1_2\n    });\n\n    _this._split.connect(_this._midAdd, 0);\n\n    _this._split.connect(_this._midAdd.addend, 1);\n\n    _this._split.connect(_this._sideSubtract, 0);\n\n    _this._split.connect(_this._sideSubtract.subtrahend, 1);\n\n    _this._midAdd.connect(_this.mid);\n\n    _this._sideSubtract.connect(_this.side);\n\n    return _this;\n  }\n\n  _createClass(MidSideSplit, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(MidSideSplit.prototype), \"dispose\", this).call(this);\n\n      this.mid.dispose();\n      this.side.dispose();\n\n      this._midAdd.dispose();\n\n      this._sideSubtract.dispose();\n\n      this._split.dispose();\n\n      return this;\n    }\n  }]);\n\n  return MidSideSplit;\n}(ToneAudioNode);","map":{"version":3,"sources":["../../../../Tone/component/channel/MidSideSplit.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,aAAT,QAAoD,kCAApD;AACA,SAAS,KAAT,QAAsB,SAAtB;AACA,SAAS,GAAT,QAAoB,kBAApB;AACA,SAAS,QAAT,QAAyB,uBAAzB;AACA,SAAS,QAAT,QAAyB,uBAAzB;AACA,SAAS,oBAAT,QAAqC,0BAArC;AAIA;;;;;;;;AAQG;;AACH,WAAa,YAAb;AAAA;;AAAA;;AAoCC,0BAAA;AAAA;;AAAA;;AACC,8BAAM,oBAAoB,CAAC,YAAY,CAAC,WAAb,EAAD,EAA6B,SAA7B,CAA1B;AAnCQ,UAAA,IAAA,GAAe,cAAf;AAqCR,UAAK,MAAL,GAAc,MAAK,KAAL,GAAa,IAAI,KAAJ,CAAU;AACpC,MAAA,QAAQ,EAAE,CAD0B;AAEpC,MAAA,OAAO,EAAE,MAAK;AAFsB,KAAV,CAA3B;AAIA,UAAK,OAAL,GAAe,IAAI,GAAJ,CAAQ;AAAE,MAAA,OAAO,EAAE,MAAK;AAAhB,KAAR,CAAf;AACA,UAAK,GAAL,GAAW,IAAI,QAAJ,CAAa;AACvB,MAAA,OAAO,EAAE,MAAK,OADS;AAEvB,MAAA,KAAK,EAAE,IAAI,CAAC;AAFW,KAAb,CAAX;AAIA,UAAK,aAAL,GAAqB,IAAI,QAAJ,CAAa;AAAE,MAAA,OAAO,EAAE,MAAK;AAAhB,KAAb,CAArB;AACA,UAAK,IAAL,GAAY,IAAI,QAAJ,CAAa;AACxB,MAAA,OAAO,EAAE,MAAK,OADU;AAExB,MAAA,KAAK,EAAE,IAAI,CAAC;AAFY,KAAb,CAAZ;;AAKA,UAAK,MAAL,CAAY,OAAZ,CAAoB,MAAK,OAAzB,EAAkC,CAAlC;;AACA,UAAK,MAAL,CAAY,OAAZ,CAAoB,MAAK,OAAL,CAAa,MAAjC,EAAyC,CAAzC;;AACA,UAAK,MAAL,CAAY,OAAZ,CAAoB,MAAK,aAAzB,EAAwC,CAAxC;;AACA,UAAK,MAAL,CAAY,OAAZ,CAAoB,MAAK,aAAL,CAAmB,UAAvC,EAAmD,CAAnD;;AACA,UAAK,OAAL,CAAa,OAAb,CAAqB,MAAK,GAA1B;;AACA,UAAK,aAAL,CAAmB,OAAnB,CAA2B,MAAK,IAAhC;;AAvBD;AAwBC;;AA5DF;AAAA;AAAA,8BA8DQ;AACN;;AACA,WAAK,GAAL,CAAS,OAAT;AACA,WAAK,IAAL,CAAU,OAAV;;AACA,WAAK,OAAL,CAAa,OAAb;;AACA,WAAK,aAAL,CAAmB,OAAnB;;AACA,WAAK,MAAL,CAAY,OAAZ;;AACA,aAAO,IAAP;AACA;AAtEF;;AAAA;AAAA,EAAkC,aAAlC","sourceRoot":"","sourcesContent":["import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Split } from \"./Split\";\nimport { Add } from \"../../signal/Add\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Subtract } from \"../../signal/Subtract\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Mid/Side processing separates the the 'mid' signal (which comes out of both the left and the right channel)\n * and the 'side' (which only comes out of the the side channels).\n * ```\n * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right\n * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right\n * ```\n * @category Component\n */\nexport class MidSideSplit extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(MidSideSplit.getDefaults(), arguments));\n        this.name = \"MidSideSplit\";\n        this._split = this.input = new Split({\n            channels: 2,\n            context: this.context\n        });\n        this._midAdd = new Add({ context: this.context });\n        this.mid = new Multiply({\n            context: this.context,\n            value: Math.SQRT1_2,\n        });\n        this._sideSubtract = new Subtract({ context: this.context });\n        this.side = new Multiply({\n            context: this.context,\n            value: Math.SQRT1_2,\n        });\n        this._split.connect(this._midAdd, 0);\n        this._split.connect(this._midAdd.addend, 1);\n        this._split.connect(this._sideSubtract, 0);\n        this._split.connect(this._sideSubtract.subtrahend, 1);\n        this._midAdd.connect(this.mid);\n        this._sideSubtract.connect(this.side);\n    }\n    dispose() {\n        super.dispose();\n        this.mid.dispose();\n        this.side.dispose();\n        this._midAdd.dispose();\n        this._sideSubtract.dispose();\n        this._split.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=MidSideSplit.js.map"]},"metadata":{},"sourceType":"module"}