{"ast":null,"code":"import _classCallCheck from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Effect } from \"./Effect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n * modulates the delayTime of the delay, causing the pitch to rise and fall.\n * @category Effect\n */\n\nexport var Vibrato = /*#__PURE__*/function (_Effect) {\n  _inherits(Vibrato, _Effect);\n\n  var _super = _createSuper(Vibrato);\n\n  function Vibrato() {\n    var _this;\n\n    _classCallCheck(this, Vibrato);\n\n    _this = _super.call(this, optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]));\n    _this.name = \"Vibrato\";\n    var options = optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]);\n    _this._delayNode = new Delay({\n      context: _this.context,\n      delayTime: 0,\n      maxDelay: options.maxDelay\n    });\n    _this._lfo = new LFO({\n      context: _this.context,\n      type: options.type,\n      min: 0,\n      max: options.maxDelay,\n      frequency: options.frequency,\n      phase: -90 // offse the phase so the resting position is in the center\n\n    }).start().connect(_this._delayNode.delayTime);\n    _this.frequency = _this._lfo.frequency;\n    _this.depth = _this._lfo.amplitude;\n    _this.depth.value = options.depth;\n    readOnly(_assertThisInitialized(_this), [\"frequency\", \"depth\"]);\n\n    _this.effectSend.chain(_this._delayNode, _this.effectReturn);\n\n    return _this;\n  }\n\n  _createClass(Vibrato, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(Vibrato.prototype), \"dispose\", this).call(this);\n\n      this._delayNode.dispose();\n\n      this._lfo.dispose();\n\n      this.frequency.dispose();\n      this.depth.dispose();\n      return this;\n    }\n  }, {\n    key: \"type\",\n\n    /**\n     * Type of oscillator attached to the Vibrato.\n     */\n    get: function get() {\n      return this._lfo.type;\n    },\n    set: function set(type) {\n      this._lfo.type = type;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(Effect.getDefaults(), {\n        maxDelay: 0.005,\n        frequency: 5,\n        depth: 0.1,\n        type: \"sine\"\n      });\n    }\n  }]);\n\n  return Vibrato;\n}(Effect);","map":{"version":3,"sources":["../../../Tone/effect/Vibrato.ts"],"names":[],"mappings":";;;;;;;AAAA,SAAS,MAAT,QAAsC,UAAtC;AAGA,SAAS,oBAAT,QAAqC,uBAArC;AACA,SAAS,GAAT,QAAoB,0BAApB;AACA,SAAS,KAAT,QAAsB,uBAAtB;AAGA,SAAS,QAAT,QAAyB,wBAAzB;AAQA;;;;AAIG;;AACH,WAAa,OAAb;AAAA;;AAAA;;AA6BC,qBAAA;AAAA;;AAAA;;AAEC,8BAAM,oBAAoB,CAAC,OAAO,CAAC,WAAR,EAAD,EAAwB,SAAxB,EAAmC,CAAC,WAAD,EAAc,OAAd,CAAnC,CAA1B;AA7BQ,UAAA,IAAA,GAAe,SAAf;AA8BR,QAAM,OAAO,GAAG,oBAAoB,CAAC,OAAO,CAAC,WAAR,EAAD,EAAwB,SAAxB,EAAmC,CAAC,WAAD,EAAc,OAAd,CAAnC,CAApC;AAEA,UAAK,UAAL,GAAkB,IAAI,KAAJ,CAAU;AAC3B,MAAA,OAAO,EAAE,MAAK,OADa;AAE3B,MAAA,SAAS,EAAE,CAFgB;AAG3B,MAAA,QAAQ,EAAE,OAAO,CAAC;AAHS,KAAV,CAAlB;AAKA,UAAK,IAAL,GAAY,IAAI,GAAJ,CAAQ;AACnB,MAAA,OAAO,EAAE,MAAK,OADK;AAEnB,MAAA,IAAI,EAAE,OAAO,CAAC,IAFK;AAGnB,MAAA,GAAG,EAAE,CAHc;AAInB,MAAA,GAAG,EAAE,OAAO,CAAC,QAJM;AAKnB,MAAA,SAAS,EAAE,OAAO,CAAC,SALA;AAMnB,MAAA,KAAK,EAAE,CAAC,EANW,CAMR;;AANQ,KAAR,EAOT,KAPS,GAOD,OAPC,CAOO,MAAK,UAAL,CAAgB,SAPvB,CAAZ;AAQA,UAAK,SAAL,GAAiB,MAAK,IAAL,CAAU,SAA3B;AACA,UAAK,KAAL,GAAa,MAAK,IAAL,CAAU,SAAvB;AAEA,UAAK,KAAL,CAAW,KAAX,GAAmB,OAAO,CAAC,KAA3B;AACA,IAAA,QAAQ,gCAAO,CAAC,WAAD,EAAc,OAAd,CAAP,CAAR;;AACA,UAAK,UAAL,CAAgB,KAAhB,CAAsB,MAAK,UAA3B,EAAuC,MAAK,YAA5C;;AAvBD;AAwBC;;AArDF;AAAA;AAAA,8BA0EQ;AACN;;AACA,WAAK,UAAL,CAAgB,OAAhB;;AACA,WAAK,IAAL,CAAU,OAAV;;AACA,WAAK,SAAL,CAAe,OAAf;AACA,WAAK,KAAL,CAAW,OAAX;AACA,aAAO,IAAP;AACA;AAjFF;AAAA;;AAgEC;;AAEG;AAlEJ,wBAmES;AACP,aAAO,KAAK,IAAL,CAAU,IAAjB;AACA,KArEF;AAAA,sBAsEU,IAtEV,EAsEc;AACZ,WAAK,IAAL,CAAU,IAAV,GAAiB,IAAjB;AACA;AAxEF;AAAA;AAAA,kCAuDmB;AACjB,aAAO,MAAM,CAAC,MAAP,CAAc,MAAM,CAAC,WAAP,EAAd,EAAoC;AAC1C,QAAA,QAAQ,EAAE,KADgC;AAE1C,QAAA,SAAS,EAAE,CAF+B;AAG1C,QAAA,KAAK,EAAE,GAHmC;AAI1C,QAAA,IAAI,EAAE;AAJoC,OAApC,CAAP;AAMA;AA9DF;;AAAA;AAAA,EAA6B,MAA7B","sourceRoot":"","sourcesContent":["import { Effect } from \"./Effect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n * modulates the delayTime of the delay, causing the pitch to rise and fall.\n * @category Effect\n */\nexport class Vibrato extends Effect {\n    constructor() {\n        super(optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]));\n        this.name = \"Vibrato\";\n        const options = optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]);\n        this._delayNode = new Delay({\n            context: this.context,\n            delayTime: 0,\n            maxDelay: options.maxDelay,\n        });\n        this._lfo = new LFO({\n            context: this.context,\n            type: options.type,\n            min: 0,\n            max: options.maxDelay,\n            frequency: options.frequency,\n            phase: -90 // offse the phase so the resting position is in the center\n        }).start().connect(this._delayNode.delayTime);\n        this.frequency = this._lfo.frequency;\n        this.depth = this._lfo.amplitude;\n        this.depth.value = options.depth;\n        readOnly(this, [\"frequency\", \"depth\"]);\n        this.effectSend.chain(this._delayNode, this.effectReturn);\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            maxDelay: 0.005,\n            frequency: 5,\n            depth: 0.1,\n            type: \"sine\"\n        });\n    }\n    /**\n     * Type of oscillator attached to the Vibrato.\n     */\n    get type() {\n        return this._lfo.type;\n    }\n    set type(type) {\n        this._lfo.type = type;\n    }\n    dispose() {\n        super.dispose();\n        this._delayNode.dispose();\n        this._lfo.dispose();\n        this.frequency.dispose();\n        this.depth.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Vibrato.js.map"]},"metadata":{},"sourceType":"module"}