{"ast":null,"code":"import { createInvalidStateError } from './invalid-state-error';\nexport var createGetNativeContext = function createGetNativeContext(contextStore) {\n  return function (context) {\n    var nativeContext = contextStore.get(context);\n\n    if (nativeContext === undefined) {\n      throw createInvalidStateError();\n    }\n\n    return nativeContext;\n  };\n};","map":{"version":3,"sources":["../../../src/factories/get-native-context.ts"],"names":[],"mappings":"AAEA,SAAS,uBAAT,QAAwC,uBAAxC;AAEA,OAAO,IAAM,sBAAsB,GAA6B,SAAnD,sBAAmD,CAAC,YAAD,EAAiB;AAC7E,SAAO,UACH,OADG,EAE8G;AACjH,QAAM,aAAa,GAAG,YAAY,CAAC,GAAb,CAAiB,OAAjB,CAAtB;;AAEA,QAAI,aAAa,KAAK,SAAtB,EAAiC;AAC7B,YAAM,uBAAuB,EAA7B;AACH;;AAED,WACI,aADJ;AAGH,GAZD;AAaH,CAdM","sourceRoot":"","sourcesContent":["import { createInvalidStateError } from './invalid-state-error';\nexport const createGetNativeContext = (contextStore) => {\n    return (context) => {\n        const nativeContext = contextStore.get(context);\n        if (nativeContext === undefined) {\n            throw createInvalidStateError();\n        }\n        return (nativeContext);\n    };\n};\n//# sourceMappingURL=get-native-context.js.map"]},"metadata":{},"sourceType":"module"}