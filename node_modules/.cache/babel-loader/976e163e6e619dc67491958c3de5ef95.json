{"ast":null,"code":"var ResourceLoader = require('resource-loader'),\n    textureParser = require('./textureParser'),\n    spritesheetParser = require('./spritesheetParser'),\n    bitmapFontParser = require('./bitmapFontParser');\n/**\n *\n * The new loader, extends Resource Loader by Chad Engler : https://github.com/englercj/resource-loader\n *\n * ```js\n * var loader = PIXI.loader; // pixi exposes a premade instance for you to use.\n * //or\n * var loader = new PIXI.loaders.Loader(); // you can also create your own if you want\n *\n * loader.add('bunny',\"data/bunny.png\");\n *\n * loader.once('complete',onAssetsLoaded);\n *\n * loader.load();\n * ```\n *\n * @class\n * @extends PIXI.ResourceLoader\n * @memberof PIXI.loaders\n * @param [baseUrl=''] {string} The base url for all resources loaded by this loader.\n * @param [concurrency=10] {number} The number of resources to load concurrently.\n */\n\n\nfunction Loader(baseUrl, concurrency) {\n  ResourceLoader.call(this, baseUrl, concurrency);\n\n  for (var i = 0; i < Loader._pixiMiddleware.length; ++i) {\n    this.use(Loader._pixiMiddleware[i]());\n  }\n}\n\nLoader.prototype = Object.create(ResourceLoader.prototype);\nLoader.prototype.constructor = Loader;\nmodule.exports = Loader;\nLoader._pixiMiddleware = [// parse any blob into more usable objects (e.g. Image)\nResourceLoader.middleware.parsing.blob, // parse any Image objects into textures\ntextureParser, // parse any spritesheet data into multiple textures\nspritesheetParser, // parse any spritesheet data into multiple textures\nbitmapFontParser];\n\nLoader.addPixiMiddleware = function (fn) {\n  Loader._pixiMiddleware.push(fn);\n}; // Add custom extentions\n\n\nvar Resource = ResourceLoader.Resource;\nResource.setExtensionXhrType('fnt', Resource.XHR_RESPONSE_TYPE.DOCUMENT);","map":{"version":3,"sources":["/Users/thebe/Desktop/music-generator-app/node_modules/pixi.js/src/loaders/loader.js"],"names":["ResourceLoader","require","textureParser","spritesheetParser","bitmapFontParser","Loader","baseUrl","concurrency","call","i","_pixiMiddleware","length","use","prototype","Object","create","constructor","module","exports","middleware","parsing","blob","addPixiMiddleware","fn","push","Resource","setExtensionXhrType","XHR_RESPONSE_TYPE","DOCUMENT"],"mappings":"AAAA,IAAIA,cAAc,GAAGC,OAAO,CAAC,iBAAD,CAA5B;AAAA,IACIC,aAAa,GAAGD,OAAO,CAAC,iBAAD,CAD3B;AAAA,IAEIE,iBAAiB,GAAGF,OAAO,CAAC,qBAAD,CAF/B;AAAA,IAGIG,gBAAgB,GAAGH,OAAO,CAAC,oBAAD,CAH9B;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,MAAT,CAAgBC,OAAhB,EAAyBC,WAAzB,EACA;AACIP,EAAAA,cAAc,CAACQ,IAAf,CAAoB,IAApB,EAA0BF,OAA1B,EAAmCC,WAAnC;;AAEA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACK,eAAP,CAAuBC,MAA3C,EAAmD,EAAEF,CAArD,EAAwD;AACpD,SAAKG,GAAL,CAASP,MAAM,CAACK,eAAP,CAAuBD,CAAvB,GAAT;AACH;AACJ;;AAEDJ,MAAM,CAACQ,SAAP,GAAmBC,MAAM,CAACC,MAAP,CAAcf,cAAc,CAACa,SAA7B,CAAnB;AACAR,MAAM,CAACQ,SAAP,CAAiBG,WAAjB,GAA+BX,MAA/B;AAEAY,MAAM,CAACC,OAAP,GAAiBb,MAAjB;AAEAA,MAAM,CAACK,eAAP,GAAyB,CACrB;AACAV,cAAc,CAACmB,UAAf,CAA0BC,OAA1B,CAAkCC,IAFb,EAGrB;AACAnB,aAJqB,EAKrB;AACAC,iBANqB,EAOrB;AACAC,gBARqB,CAAzB;;AAWAC,MAAM,CAACiB,iBAAP,GAA2B,UAAUC,EAAV,EAAc;AACrClB,EAAAA,MAAM,CAACK,eAAP,CAAuBc,IAAvB,CAA4BD,EAA5B;AACH,CAFD,C,CAIA;;;AACA,IAAIE,QAAQ,GAAGzB,cAAc,CAACyB,QAA9B;AAEAA,QAAQ,CAACC,mBAAT,CAA6B,KAA7B,EAAoCD,QAAQ,CAACE,iBAAT,CAA2BC,QAA/D","sourcesContent":["var ResourceLoader = require('resource-loader'),\n    textureParser = require('./textureParser'),\n    spritesheetParser = require('./spritesheetParser'),\n    bitmapFontParser = require('./bitmapFontParser');\n\n/**\n *\n * The new loader, extends Resource Loader by Chad Engler : https://github.com/englercj/resource-loader\n *\n * ```js\n * var loader = PIXI.loader; // pixi exposes a premade instance for you to use.\n * //or\n * var loader = new PIXI.loaders.Loader(); // you can also create your own if you want\n *\n * loader.add('bunny',\"data/bunny.png\");\n *\n * loader.once('complete',onAssetsLoaded);\n *\n * loader.load();\n * ```\n *\n * @class\n * @extends PIXI.ResourceLoader\n * @memberof PIXI.loaders\n * @param [baseUrl=''] {string} The base url for all resources loaded by this loader.\n * @param [concurrency=10] {number} The number of resources to load concurrently.\n */\nfunction Loader(baseUrl, concurrency)\n{\n    ResourceLoader.call(this, baseUrl, concurrency);\n\n    for (var i = 0; i < Loader._pixiMiddleware.length; ++i) {\n        this.use(Loader._pixiMiddleware[i]());\n    }\n}\n\nLoader.prototype = Object.create(ResourceLoader.prototype);\nLoader.prototype.constructor = Loader;\n\nmodule.exports = Loader;\n\nLoader._pixiMiddleware = [\n    // parse any blob into more usable objects (e.g. Image)\n    ResourceLoader.middleware.parsing.blob,\n    // parse any Image objects into textures\n    textureParser,\n    // parse any spritesheet data into multiple textures\n    spritesheetParser,\n    // parse any spritesheet data into multiple textures\n    bitmapFontParser\n];\n\nLoader.addPixiMiddleware = function (fn) {\n    Loader._pixiMiddleware.push(fn);\n};\n\n// Add custom extentions\nvar Resource = ResourceLoader.Resource;\n\nResource.setExtensionXhrType('fnt', Resource.XHR_RESPONSE_TYPE.DOCUMENT);\n"]},"metadata":{},"sourceType":"script"}