{"ast":null,"code":"// data should be the same type of format returned by parseMidi\n// for maximum compatibililty, returns an array of byte values, suitable for conversion to Buffer, Uint8Array, etc.\n// opts:\n// - running              reuse previous eventTypeByte when possible, to compress file\n// - useByte9ForNoteOff   use 0x09 for noteOff when velocity is zero\nfunction writeMidi(data, opts) {\n  if (typeof data !== 'object') throw 'Invalid MIDI data';\n  opts = opts || {};\n  var header = data.header || {};\n  var tracks = data.tracks || [];\n  var i,\n      len = tracks.length;\n  var w = new Writer();\n  writeHeader(w, header, len);\n\n  for (i = 0; i < len; i++) {\n    writeTrack(w, tracks[i], opts);\n  }\n\n  return w.buffer;\n}\n\nfunction writeHeader(w, header, numTracks) {\n  var format = header.format == null ? 1 : header.format;\n  var timeDivision = 128;\n\n  if (header.timeDivision) {\n    timeDivision = header.timeDivision;\n  } else if (header.ticksPerFrame && header.framesPerSecond) {\n    timeDivision = -(header.framesPerSecond & 0xFF) << 8 | header.ticksPerFrame & 0xFF;\n  } else if (header.ticksPerBeat) {\n    timeDivision = header.ticksPerBeat & 0x7FFF;\n  }\n\n  var h = new Writer();\n  h.writeUInt16(format);\n  h.writeUInt16(numTracks);\n  h.writeUInt16(timeDivision);\n  w.writeChunk('MThd', h.buffer);\n}\n\nfunction writeTrack(w, track, opts) {\n  var t = new Writer();\n  var i,\n      len = track.length;\n  var eventTypeByte = null;\n\n  for (i = 0; i < len; i++) {\n    // Reuse last eventTypeByte when opts.running is set, or event.running is explicitly set on it.\n    // parseMidi will set event.running for each event, so that we can get an exact copy by default.\n    // Explicitly set opts.running to false, to override event.running and never reuse last eventTypeByte.\n    if (opts.running === false || !opts.running && !track[i].running) eventTypeByte = null;\n    eventTypeByte = writeEvent(t, track[i], eventTypeByte, opts.useByte9ForNoteOff);\n  }\n\n  w.writeChunk('MTrk', t.buffer);\n}\n\nfunction writeEvent(w, event, lastEventTypeByte, useByte9ForNoteOff) {\n  var type = event.type;\n  var deltaTime = event.deltaTime;\n  var text = event.text || '';\n  var data = event.data || [];\n  var eventTypeByte = null;\n  w.writeVarInt(deltaTime);\n\n  switch (type) {\n    // meta events\n    case 'sequenceNumber':\n      w.writeUInt8(0xFF);\n      w.writeUInt8(0x00);\n      w.writeVarInt(2);\n      w.writeUInt16(event.number);\n      break;\n\n    case 'text':\n      w.writeUInt8(0xFF);\n      w.writeUInt8(0x01);\n      w.writeVarInt(text.length);\n      w.writeString(text);\n      break;\n\n    case 'copyrightNotice':\n      w.writeUInt8(0xFF);\n      w.writeUInt8(0x02);\n      w.writeVarInt(text.length);\n      w.writeString(text);\n      break;\n\n    case 'trackName':\n      w.writeUInt8(0xFF);\n      w.writeUInt8(0x03);\n      w.writeVarInt(text.length);\n      w.writeString(text);\n      break;\n\n    case 'instrumentName':\n      w.writeUInt8(0xFF);\n      w.writeUInt8(0x04);\n      w.writeVarInt(text.length);\n      w.writeString(text);\n      break;\n\n    case 'lyrics':\n      w.writeUInt8(0xFF);\n      w.writeUInt8(0x05);\n      w.writeVarInt(text.length);\n      w.writeString(text);\n      break;\n\n    case 'marker':\n      w.writeUInt8(0xFF);\n      w.writeUInt8(0x06);\n      w.writeVarInt(text.length);\n      w.writeString(text);\n      break;\n\n    case 'cuePoint':\n      w.writeUInt8(0xFF);\n      w.writeUInt8(0x07);\n      w.writeVarInt(text.length);\n      w.writeString(text);\n      break;\n\n    case 'channelPrefix':\n      w.writeUInt8(0xFF);\n      w.writeUInt8(0x20);\n      w.writeVarInt(1);\n      w.writeUInt8(event.channel);\n      break;\n\n    case 'portPrefix':\n      w.writeUInt8(0xFF);\n      w.writeUInt8(0x21);\n      w.writeVarInt(1);\n      w.writeUInt8(event.port);\n      break;\n\n    case 'endOfTrack':\n      w.writeUInt8(0xFF);\n      w.writeUInt8(0x2F);\n      w.writeVarInt(0);\n      break;\n\n    case 'setTempo':\n      w.writeUInt8(0xFF);\n      w.writeUInt8(0x51);\n      w.writeVarInt(3);\n      w.writeUInt24(event.microsecondsPerBeat);\n      break;\n\n    case 'smpteOffset':\n      w.writeUInt8(0xFF);\n      w.writeUInt8(0x54);\n      w.writeVarInt(5);\n      var FRAME_RATES = {\n        24: 0x00,\n        25: 0x20,\n        29: 0x40,\n        30: 0x60\n      };\n      var hourByte = event.hour & 0x1F | FRAME_RATES[event.frameRate];\n      w.writeUInt8(hourByte);\n      w.writeUInt8(event.min);\n      w.writeUInt8(event.sec);\n      w.writeUInt8(event.frame);\n      w.writeUInt8(event.subFrame);\n      break;\n\n    case 'timeSignature':\n      w.writeUInt8(0xFF);\n      w.writeUInt8(0x58);\n      w.writeVarInt(4);\n      w.writeUInt8(event.numerator);\n      var denominator = Math.floor(Math.log(event.denominator) / Math.LN2) & 0xFF;\n      w.writeUInt8(denominator);\n      w.writeUInt8(event.metronome);\n      w.writeUInt8(event.thirtyseconds || 8);\n      break;\n\n    case 'keySignature':\n      w.writeUInt8(0xFF);\n      w.writeUInt8(0x59);\n      w.writeVarInt(2);\n      w.writeInt8(event.key);\n      w.writeUInt8(event.scale);\n      break;\n\n    case 'sequencerSpecific':\n      w.writeUInt8(0xFF);\n      w.writeUInt8(0x7F);\n      w.writeVarInt(data.length);\n      w.writeBytes(data);\n      break;\n\n    case 'unknownMeta':\n      if (event.metatypeByte != null) {\n        w.writeUInt8(0xFF);\n        w.writeUInt8(event.metatypeByte);\n        w.writeVarInt(data.length);\n        w.writeBytes(data);\n      }\n\n      break;\n    // system-exclusive\n\n    case 'sysEx':\n      w.writeUInt8(0xF0);\n      w.writeVarInt(data.length);\n      w.writeBytes(data);\n      break;\n\n    case 'endSysEx':\n      w.writeUInt8(0xF7);\n      w.writeVarInt(data.length);\n      w.writeBytes(data);\n      break;\n    // channel events\n\n    case 'noteOff':\n      // Use 0x90 when opts.useByte9ForNoteOff is set and velocity is zero, or when event.byte9 is explicitly set on it.\n      // parseMidi will set event.byte9 for each event, so that we can get an exact copy by default.\n      // Explicitly set opts.useByte9ForNoteOff to false, to override event.byte9 and always use 0x80 for noteOff events.\n      var noteByte = useByte9ForNoteOff !== false && event.byte9 || useByte9ForNoteOff && event.velocity == 0 ? 0x90 : 0x80;\n      eventTypeByte = noteByte | event.channel;\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte);\n      w.writeUInt8(event.noteNumber);\n      w.writeUInt8(event.velocity);\n      break;\n\n    case 'noteOn':\n      eventTypeByte = 0x90 | event.channel;\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte);\n      w.writeUInt8(event.noteNumber);\n      w.writeUInt8(event.velocity);\n      break;\n\n    case 'noteAftertouch':\n      eventTypeByte = 0xA0 | event.channel;\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte);\n      w.writeUInt8(event.noteNumber);\n      w.writeUInt8(event.amount);\n      break;\n\n    case 'controller':\n      eventTypeByte = 0xB0 | event.channel;\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte);\n      w.writeUInt8(event.controllerType);\n      w.writeUInt8(event.value);\n      break;\n\n    case 'programChange':\n      eventTypeByte = 0xC0 | event.channel;\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte);\n      w.writeUInt8(event.programNumber);\n      break;\n\n    case 'channelAftertouch':\n      eventTypeByte = 0xD0 | event.channel;\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte);\n      w.writeUInt8(event.amount);\n      break;\n\n    case 'pitchBend':\n      eventTypeByte = 0xE0 | event.channel;\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte);\n      var value14 = 0x2000 + event.value;\n      var lsb14 = value14 & 0x7F;\n      var msb14 = value14 >> 7 & 0x7F;\n      w.writeUInt8(lsb14);\n      w.writeUInt8(msb14);\n      break;\n\n    default:\n      throw 'Unrecognized event type: ' + type;\n  }\n\n  return eventTypeByte;\n}\n\nfunction Writer() {\n  this.buffer = [];\n}\n\nWriter.prototype.writeUInt8 = function (v) {\n  this.buffer.push(v & 0xFF);\n};\n\nWriter.prototype.writeInt8 = Writer.prototype.writeUInt8;\n\nWriter.prototype.writeUInt16 = function (v) {\n  var b0 = v >> 8 & 0xFF,\n      b1 = v & 0xFF;\n  this.writeUInt8(b0);\n  this.writeUInt8(b1);\n};\n\nWriter.prototype.writeInt16 = Writer.prototype.writeUInt16;\n\nWriter.prototype.writeUInt24 = function (v) {\n  var b0 = v >> 16 & 0xFF,\n      b1 = v >> 8 & 0xFF,\n      b2 = v & 0xFF;\n  this.writeUInt8(b0);\n  this.writeUInt8(b1);\n  this.writeUInt8(b2);\n};\n\nWriter.prototype.writeInt24 = Writer.prototype.writeUInt24;\n\nWriter.prototype.writeUInt32 = function (v) {\n  var b0 = v >> 24 & 0xFF,\n      b1 = v >> 16 & 0xFF,\n      b2 = v >> 8 & 0xFF,\n      b3 = v & 0xFF;\n  this.writeUInt8(b0);\n  this.writeUInt8(b1);\n  this.writeUInt8(b2);\n  this.writeUInt8(b3);\n};\n\nWriter.prototype.writeInt32 = Writer.prototype.writeUInt32;\n\nWriter.prototype.writeBytes = function (arr) {\n  this.buffer = this.buffer.concat(Array.prototype.slice.call(arr, 0));\n};\n\nWriter.prototype.writeString = function (str) {\n  var i,\n      len = str.length,\n      arr = [];\n\n  for (i = 0; i < len; i++) {\n    arr.push(str.codePointAt(i));\n  }\n\n  this.writeBytes(arr);\n};\n\nWriter.prototype.writeVarInt = function (v) {\n  if (v < 0) throw \"Cannot write negative variable-length integer\";\n\n  if (v <= 0x7F) {\n    this.writeUInt8(v);\n  } else {\n    var i = v;\n    var bytes = [];\n    bytes.push(i & 0x7F);\n    i >>= 7;\n\n    while (i) {\n      var b = i & 0x7F | 0x80;\n      bytes.push(b);\n      i >>= 7;\n    }\n\n    this.writeBytes(bytes.reverse());\n  }\n};\n\nWriter.prototype.writeChunk = function (id, data) {\n  this.writeString(id);\n  this.writeUInt32(data.length);\n  this.writeBytes(data);\n};\n\nmodule.exports = writeMidi;","map":{"version":3,"sources":["/Users/thebe/Desktop/music-generator-app/node_modules/midi-file/lib/midi-writer.js"],"names":["writeMidi","data","opts","header","tracks","i","len","length","w","Writer","writeHeader","writeTrack","buffer","numTracks","format","timeDivision","ticksPerFrame","framesPerSecond","ticksPerBeat","h","writeUInt16","writeChunk","track","t","eventTypeByte","running","writeEvent","useByte9ForNoteOff","event","lastEventTypeByte","type","deltaTime","text","writeVarInt","writeUInt8","number","writeString","channel","port","writeUInt24","microsecondsPerBeat","FRAME_RATES","hourByte","hour","frameRate","min","sec","frame","subFrame","numerator","denominator","Math","floor","log","LN2","metronome","thirtyseconds","writeInt8","key","scale","writeBytes","metatypeByte","noteByte","byte9","velocity","noteNumber","amount","controllerType","value","programNumber","value14","lsb14","msb14","prototype","v","push","b0","b1","writeInt16","b2","writeInt24","writeUInt32","b3","writeInt32","arr","concat","Array","slice","call","str","codePointAt","bytes","b","reverse","id","module","exports"],"mappings":"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","sourcesContent":["// data should be the same type of format returned by parseMidi\n// for maximum compatibililty, returns an array of byte values, suitable for conversion to Buffer, Uint8Array, etc.\n\n// opts:\n// - running              reuse previous eventTypeByte when possible, to compress file\n// - useByte9ForNoteOff   use 0x09 for noteOff when velocity is zero\n\nfunction writeMidi(data, opts) {\n  if (typeof data !== 'object')\n    throw 'Invalid MIDI data'\n\n  opts = opts || {}\n\n  var header = data.header || {}\n  var tracks = data.tracks || []\n  var i, len = tracks.length\n\n  var w = new Writer()\n  writeHeader(w, header, len)\n\n  for (i=0; i < len; i++) {\n    writeTrack(w, tracks[i], opts)\n  }\n\n  return w.buffer\n}\n\nfunction writeHeader(w, header, numTracks) {\n  var format = header.format == null ? 1 : header.format\n\n  var timeDivision = 128\n  if (header.timeDivision) {\n    timeDivision = header.timeDivision\n  } else if (header.ticksPerFrame && header.framesPerSecond) {\n    timeDivision = (-(header.framesPerSecond & 0xFF) << 8) | (header.ticksPerFrame & 0xFF)\n  } else if (header.ticksPerBeat) {\n    timeDivision = header.ticksPerBeat & 0x7FFF\n  }\n\n  var h = new Writer()\n  h.writeUInt16(format)\n  h.writeUInt16(numTracks)\n  h.writeUInt16(timeDivision)\n\n  w.writeChunk('MThd', h.buffer)\n}\n\nfunction writeTrack(w, track, opts) {\n  var t = new Writer()\n  var i, len = track.length\n  var eventTypeByte = null\n  for (i=0; i < len; i++) {\n    // Reuse last eventTypeByte when opts.running is set, or event.running is explicitly set on it.\n    // parseMidi will set event.running for each event, so that we can get an exact copy by default.\n    // Explicitly set opts.running to false, to override event.running and never reuse last eventTypeByte.\n    if (opts.running === false || !opts.running && !track[i].running) eventTypeByte = null\n\n    eventTypeByte = writeEvent(t, track[i], eventTypeByte, opts.useByte9ForNoteOff)\n  }\n  w.writeChunk('MTrk', t.buffer)\n}\n\nfunction writeEvent(w, event, lastEventTypeByte, useByte9ForNoteOff) {\n  var type = event.type\n  var deltaTime = event.deltaTime\n  var text = event.text || ''\n  var data = event.data || []\n  var eventTypeByte = null\n  w.writeVarInt(deltaTime)\n\n  switch (type) {\n    // meta events\n    case 'sequenceNumber':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x00)\n      w.writeVarInt(2)\n      w.writeUInt16(event.number)\n      break;\n\n    case 'text':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x01)\n      w.writeVarInt(text.length)\n      w.writeString(text)\n      break;\n\n    case 'copyrightNotice':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x02)\n      w.writeVarInt(text.length)\n      w.writeString(text)\n      break;\n\n    case 'trackName':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x03)\n      w.writeVarInt(text.length)\n      w.writeString(text)\n      break;\n\n    case 'instrumentName':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x04)\n      w.writeVarInt(text.length)\n      w.writeString(text)\n      break;\n\n    case 'lyrics':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x05)\n      w.writeVarInt(text.length)\n      w.writeString(text)\n      break;\n\n    case 'marker':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x06)\n      w.writeVarInt(text.length)\n      w.writeString(text)\n      break;\n\n    case 'cuePoint':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x07)\n      w.writeVarInt(text.length)\n      w.writeString(text)\n      break;\n\n    case 'channelPrefix':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x20)\n      w.writeVarInt(1)\n      w.writeUInt8(event.channel)\n      break;\n\n    case 'portPrefix':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x21)\n      w.writeVarInt(1)\n      w.writeUInt8(event.port)\n      break;\n\n    case 'endOfTrack':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x2F)\n      w.writeVarInt(0)\n      break;\n\n    case 'setTempo':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x51)\n      w.writeVarInt(3)\n      w.writeUInt24(event.microsecondsPerBeat)\n      break;\n\n    case 'smpteOffset':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x54)\n      w.writeVarInt(5)\n      var FRAME_RATES = { 24: 0x00, 25: 0x20, 29: 0x40, 30: 0x60 }\n      var hourByte = (event.hour & 0x1F) | FRAME_RATES[event.frameRate]\n      w.writeUInt8(hourByte)\n      w.writeUInt8(event.min)\n      w.writeUInt8(event.sec)\n      w.writeUInt8(event.frame)\n      w.writeUInt8(event.subFrame)\n      break;\n\n    case 'timeSignature':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x58)\n      w.writeVarInt(4)\n      w.writeUInt8(event.numerator)\n      var denominator = Math.floor((Math.log(event.denominator) / Math.LN2)) & 0xFF\n      w.writeUInt8(denominator)\n      w.writeUInt8(event.metronome)\n      w.writeUInt8(event.thirtyseconds || 8)\n      break;\n\n    case 'keySignature':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x59)\n      w.writeVarInt(2)\n      w.writeInt8(event.key)\n      w.writeUInt8(event.scale)\n      break;\n\n    case 'sequencerSpecific':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x7F)\n      w.writeVarInt(data.length)\n      w.writeBytes(data)\n      break;\n\n    case 'unknownMeta':\n      if (event.metatypeByte != null) {\n        w.writeUInt8(0xFF)\n        w.writeUInt8(event.metatypeByte)\n        w.writeVarInt(data.length)\n        w.writeBytes(data)\n      }\n      break;\n\n    // system-exclusive\n    case 'sysEx':\n      w.writeUInt8(0xF0)\n      w.writeVarInt(data.length)\n      w.writeBytes(data)\n      break;\n\n    case 'endSysEx':\n      w.writeUInt8(0xF7)\n      w.writeVarInt(data.length)\n      w.writeBytes(data)\n      break;\n\n    // channel events\n    case 'noteOff':\n      // Use 0x90 when opts.useByte9ForNoteOff is set and velocity is zero, or when event.byte9 is explicitly set on it.\n      // parseMidi will set event.byte9 for each event, so that we can get an exact copy by default.\n      // Explicitly set opts.useByte9ForNoteOff to false, to override event.byte9 and always use 0x80 for noteOff events.\n      var noteByte = ((useByte9ForNoteOff !== false && event.byte9) || (useByte9ForNoteOff && event.velocity == 0)) ? 0x90 : 0x80\n\n      eventTypeByte = noteByte | event.channel\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte)\n      w.writeUInt8(event.noteNumber)\n      w.writeUInt8(event.velocity)\n      break;\n\n    case 'noteOn':\n      eventTypeByte = 0x90 | event.channel\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte)\n      w.writeUInt8(event.noteNumber)\n      w.writeUInt8(event.velocity)\n      break;\n\n    case 'noteAftertouch':\n      eventTypeByte = 0xA0 | event.channel\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte)\n      w.writeUInt8(event.noteNumber)\n      w.writeUInt8(event.amount)\n      break;\n\n    case 'controller':\n      eventTypeByte = 0xB0 | event.channel\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte)\n      w.writeUInt8(event.controllerType)\n      w.writeUInt8(event.value)\n      break;\n\n    case 'programChange':\n      eventTypeByte = 0xC0 | event.channel\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte)\n      w.writeUInt8(event.programNumber)\n      break;\n\n    case 'channelAftertouch':\n      eventTypeByte = 0xD0 | event.channel\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte)\n      w.writeUInt8(event.amount)\n      break;\n\n    case 'pitchBend':\n      eventTypeByte = 0xE0 | event.channel\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte)\n      var value14 = 0x2000 + event.value\n      var lsb14 = (value14 & 0x7F)\n      var msb14 = (value14 >> 7) & 0x7F\n      w.writeUInt8(lsb14)\n      w.writeUInt8(msb14)\n    break;\n\n    default:\n      throw 'Unrecognized event type: ' + type\n  }\n  return eventTypeByte\n}\n\n\nfunction Writer() {\n  this.buffer = []\n}\n\nWriter.prototype.writeUInt8 = function(v) {\n  this.buffer.push(v & 0xFF)\n}\nWriter.prototype.writeInt8 = Writer.prototype.writeUInt8\n\nWriter.prototype.writeUInt16 = function(v) {\n  var b0 = (v >> 8) & 0xFF,\n      b1 = v & 0xFF\n\n  this.writeUInt8(b0)\n  this.writeUInt8(b1)\n}\nWriter.prototype.writeInt16 = Writer.prototype.writeUInt16\n\nWriter.prototype.writeUInt24 = function(v) {\n  var b0 = (v >> 16) & 0xFF,\n      b1 = (v >> 8) & 0xFF,\n      b2 = v & 0xFF\n\n  this.writeUInt8(b0)\n  this.writeUInt8(b1)\n  this.writeUInt8(b2)\n}\nWriter.prototype.writeInt24 = Writer.prototype.writeUInt24\n\nWriter.prototype.writeUInt32 = function(v) {\n  var b0 = (v >> 24) & 0xFF,\n      b1 = (v >> 16) & 0xFF,\n      b2 = (v >> 8) & 0xFF,\n      b3 = v & 0xFF\n\n  this.writeUInt8(b0)\n  this.writeUInt8(b1)\n  this.writeUInt8(b2)\n  this.writeUInt8(b3)\n}\nWriter.prototype.writeInt32 = Writer.prototype.writeUInt32\n\n\nWriter.prototype.writeBytes = function(arr) {\n  this.buffer = this.buffer.concat(Array.prototype.slice.call(arr, 0))\n}\n\nWriter.prototype.writeString = function(str) {\n  var i, len = str.length, arr = []\n  for (i=0; i < len; i++) {\n    arr.push(str.codePointAt(i))\n  }\n  this.writeBytes(arr)\n}\n\nWriter.prototype.writeVarInt = function(v) {\n  if (v < 0) throw \"Cannot write negative variable-length integer\"\n\n  if (v <= 0x7F) {\n    this.writeUInt8(v)\n  } else {\n    var i = v\n    var bytes = []\n    bytes.push(i & 0x7F)\n    i >>= 7\n    while (i) {\n      var b = i & 0x7F | 0x80\n      bytes.push(b)\n      i >>= 7\n    }\n    this.writeBytes(bytes.reverse())\n  }\n}\n\nWriter.prototype.writeChunk = function(id, data) {\n  this.writeString(id)\n  this.writeUInt32(data.length)\n  this.writeBytes(data)\n}\n\nmodule.exports = writeMidi\n"]},"metadata":{},"sourceType":"script"}