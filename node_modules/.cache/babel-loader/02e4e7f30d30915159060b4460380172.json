{"ast":null,"code":"import _classCallCheck from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Effect } from \"./Effect\";\n/**\n * FeedbackEffect provides a loop between an audio source and its own output.\n * This is a base-class for feedback effects.\n */\n\nexport var FeedbackEffect = /*#__PURE__*/function (_Effect) {\n  _inherits(FeedbackEffect, _Effect);\n\n  var _super = _createSuper(FeedbackEffect);\n\n  function FeedbackEffect(options) {\n    var _this;\n\n    _classCallCheck(this, FeedbackEffect);\n\n    _this = _super.call(this, options);\n    _this.name = \"FeedbackEffect\";\n    _this._feedbackGain = new Gain({\n      context: _this.context,\n      gain: options.feedback,\n      units: \"normalRange\"\n    });\n    _this.feedback = _this._feedbackGain.gain;\n    readOnly(_assertThisInitialized(_this), \"feedback\"); // the feedback loop\n\n    _this.effectReturn.chain(_this._feedbackGain, _this.effectSend);\n\n    return _this;\n  }\n\n  _createClass(FeedbackEffect, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(FeedbackEffect.prototype), \"dispose\", this).call(this);\n\n      this._feedbackGain.dispose();\n\n      this.feedback.dispose();\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(Effect.getDefaults(), {\n        feedback: 0.125\n      });\n    }\n  }]);\n\n  return FeedbackEffect;\n}(Effect);","map":{"version":3,"sources":["../../../Tone/effect/FeedbackEffect.ts"],"names":[],"mappings":";;;;;;;AAAA,SAAS,IAAT,QAAqB,sBAArB;AAGA,SAAS,QAAT,QAAyB,wBAAzB;AACA,SAAS,MAAT,QAAsC,UAAtC;AAgBA;;;AAGG;;AACH,WAAsB,cAAtB;AAAA;;AAAA;;AAcC,0BAAY,OAAZ,EAA0C;AAAA;;AAAA;;AAEzC,8BAAM,OAAN;AAdQ,UAAA,IAAA,GAAe,gBAAf;AAgBR,UAAK,aAAL,GAAqB,IAAI,IAAJ,CAAS;AAC7B,MAAA,OAAO,EAAE,MAAK,OADe;AAE7B,MAAA,IAAI,EAAE,OAAO,CAAC,QAFe;AAG7B,MAAA,KAAK,EAAE;AAHsB,KAAT,CAArB;AAMA,UAAK,QAAL,GAAgB,MAAK,aAAL,CAAmB,IAAnC;AACA,IAAA,QAAQ,gCAAO,UAAP,CAAR,CAXyC,CAazC;;AACA,UAAK,YAAL,CAAkB,KAAlB,CAAwB,MAAK,aAA7B,EAA4C,MAAK,UAAjD;;AAdyC;AAezC;;AA7BF;AAAA;AAAA,8BAqCQ;AACN;;AACA,WAAK,aAAL,CAAmB,OAAnB;;AACA,WAAK,QAAL,CAAc,OAAd;AACA,aAAO,IAAP;AACA;AA1CF;AAAA;AAAA,kCA+BmB;AACjB,aAAO,MAAM,CAAC,MAAP,CAAc,MAAM,CAAC,WAAP,EAAd,EAAoC;AAC1C,QAAA,QAAQ,EAAE;AADgC,OAApC,CAAP;AAGA;AAnCF;;AAAA;AAAA,EAAoF,MAApF","sourceRoot":"","sourcesContent":["import { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Effect } from \"./Effect\";\n/**\n * FeedbackEffect provides a loop between an audio source and its own output.\n * This is a base-class for feedback effects.\n */\nexport class FeedbackEffect extends Effect {\n    constructor(options) {\n        super(options);\n        this.name = \"FeedbackEffect\";\n        this._feedbackGain = new Gain({\n            context: this.context,\n            gain: options.feedback,\n            units: \"normalRange\",\n        });\n        this.feedback = this._feedbackGain.gain;\n        readOnly(this, \"feedback\");\n        // the feedback loop\n        this.effectReturn.chain(this._feedbackGain, this.effectSend);\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            feedback: 0.125,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._feedbackGain.dispose();\n        this.feedback.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FeedbackEffect.js.map"]},"metadata":{},"sourceType":"module"}