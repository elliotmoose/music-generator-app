{"ast":null,"code":"import _objectSpread from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar DEFAULT_OPTIONS = {\n  channelCount: 2,\n  channelCountMode: 'max',\n  channelInterpretation: 'speakers',\n  fftSize: 2048,\n  maxDecibels: -30,\n  minDecibels: -100,\n  smoothingTimeConstant: 0.8\n};\nexport var createAnalyserNodeConstructor = function createAnalyserNodeConstructor(audionNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext) {\n  return /*#__PURE__*/function (_audionNodeConstructo) {\n    _inherits(AnalyserNode, _audionNodeConstructo);\n\n    var _super = _createSuper(AnalyserNode);\n\n    function AnalyserNode(context, options) {\n      var _this;\n\n      _classCallCheck(this, AnalyserNode);\n\n      var nativeContext = getNativeContext(context);\n\n      var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n\n      var nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);\n      var analyserNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null;\n      _this = _super.call(this, context, false, nativeAnalyserNode, analyserNodeRenderer);\n      _this._nativeAnalyserNode = nativeAnalyserNode;\n      return _this;\n    }\n\n    _createClass(AnalyserNode, [{\n      key: \"getByteFrequencyData\",\n      value: function getByteFrequencyData(array) {\n        this._nativeAnalyserNode.getByteFrequencyData(array);\n      }\n    }, {\n      key: \"getByteTimeDomainData\",\n      value: function getByteTimeDomainData(array) {\n        this._nativeAnalyserNode.getByteTimeDomainData(array);\n      }\n    }, {\n      key: \"getFloatFrequencyData\",\n      value: function getFloatFrequencyData(array) {\n        this._nativeAnalyserNode.getFloatFrequencyData(array);\n      }\n    }, {\n      key: \"getFloatTimeDomainData\",\n      value: function getFloatTimeDomainData(array) {\n        this._nativeAnalyserNode.getFloatTimeDomainData(array);\n      }\n    }, {\n      key: \"fftSize\",\n      get: function get() {\n        return this._nativeAnalyserNode.fftSize;\n      },\n      set: function set(value) {\n        this._nativeAnalyserNode.fftSize = value;\n      }\n    }, {\n      key: \"frequencyBinCount\",\n      get: function get() {\n        return this._nativeAnalyserNode.frequencyBinCount;\n      }\n    }, {\n      key: \"maxDecibels\",\n      get: function get() {\n        return this._nativeAnalyserNode.maxDecibels;\n      },\n      set: function set(value) {\n        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n        var maxDecibels = this._nativeAnalyserNode.maxDecibels;\n        this._nativeAnalyserNode.maxDecibels = value;\n\n        if (!(value > this._nativeAnalyserNode.minDecibels)) {\n          this._nativeAnalyserNode.maxDecibels = maxDecibels;\n          throw createIndexSizeError();\n        }\n      }\n    }, {\n      key: \"minDecibels\",\n      get: function get() {\n        return this._nativeAnalyserNode.minDecibels;\n      },\n      set: function set(value) {\n        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n        var minDecibels = this._nativeAnalyserNode.minDecibels;\n        this._nativeAnalyserNode.minDecibels = value;\n\n        if (!(this._nativeAnalyserNode.maxDecibels > value)) {\n          this._nativeAnalyserNode.minDecibels = minDecibels;\n          throw createIndexSizeError();\n        }\n      }\n    }, {\n      key: \"smoothingTimeConstant\",\n      get: function get() {\n        return this._nativeAnalyserNode.smoothingTimeConstant;\n      },\n      set: function set(value) {\n        this._nativeAnalyserNode.smoothingTimeConstant = value;\n      }\n    }]);\n\n    return AnalyserNode;\n  }(audionNodeConstructor);\n};","map":{"version":3,"sources":["../../../src/factories/analyser-node-constructor.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    fftSize: 2048,\n    maxDecibels: -30,\n    minDecibels: -100,\n    smoothingTimeConstant: 0.8\n};\nexport const createAnalyserNodeConstructor = (audionNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class AnalyserNode extends audionNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);\n            const analyserNodeRenderer = ((isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null));\n            super(context, false, nativeAnalyserNode, analyserNodeRenderer);\n            this._nativeAnalyserNode = nativeAnalyserNode;\n        }\n        get fftSize() {\n            return this._nativeAnalyserNode.fftSize;\n        }\n        set fftSize(value) {\n            this._nativeAnalyserNode.fftSize = value;\n        }\n        get frequencyBinCount() {\n            return this._nativeAnalyserNode.frequencyBinCount;\n        }\n        get maxDecibels() {\n            return this._nativeAnalyserNode.maxDecibels;\n        }\n        set maxDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const maxDecibels = this._nativeAnalyserNode.maxDecibels;\n            this._nativeAnalyserNode.maxDecibels = value;\n            if (!(value > this._nativeAnalyserNode.minDecibels)) {\n                this._nativeAnalyserNode.maxDecibels = maxDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get minDecibels() {\n            return this._nativeAnalyserNode.minDecibels;\n        }\n        set minDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const minDecibels = this._nativeAnalyserNode.minDecibels;\n            this._nativeAnalyserNode.minDecibels = value;\n            if (!(this._nativeAnalyserNode.maxDecibels > value)) {\n                this._nativeAnalyserNode.minDecibels = minDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get smoothingTimeConstant() {\n            return this._nativeAnalyserNode.smoothingTimeConstant;\n        }\n        set smoothingTimeConstant(value) {\n            this._nativeAnalyserNode.smoothingTimeConstant = value;\n        }\n        getByteFrequencyData(array) {\n            this._nativeAnalyserNode.getByteFrequencyData(array);\n        }\n        getByteTimeDomainData(array) {\n            this._nativeAnalyserNode.getByteTimeDomainData(array);\n        }\n        getFloatFrequencyData(array) {\n            this._nativeAnalyserNode.getFloatFrequencyData(array);\n        }\n        getFloatTimeDomainData(array) {\n            this._nativeAnalyserNode.getFloatTimeDomainData(array);\n        }\n    };\n};\n//# sourceMappingURL=analyser-node-constructor.js.map"]},"metadata":{},"sourceType":"module"}