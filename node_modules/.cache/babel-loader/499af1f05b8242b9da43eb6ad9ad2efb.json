{"ast":null,"code":"import _classCallCheck from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Delay } from \"../core/context/Delay\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { FeedbackEffect } from \"./FeedbackEffect\";\n/**\n * FeedbackDelay is a DelayNode in which part of output signal is fed back into the delay.\n *\n * @param delayTime The delay applied to the incoming signal.\n * @param feedback The amount of the effected signal which is fed back through the delay.\n * @example\n * const feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toDestination();\n * const tom = new Tone.MembraneSynth({\n * \toctaves: 4,\n * \tpitchDecay: 0.1\n * }).connect(feedbackDelay);\n * tom.triggerAttackRelease(\"A2\", \"32n\");\n * @category Effect\n */\n\nexport var FeedbackDelay = /*#__PURE__*/function (_FeedbackEffect) {\n  _inherits(FeedbackDelay, _FeedbackEffect);\n\n  var _super = _createSuper(FeedbackDelay);\n\n  function FeedbackDelay() {\n    var _this;\n\n    _classCallCheck(this, FeedbackDelay);\n\n    _this = _super.call(this, optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]));\n    _this.name = \"FeedbackDelay\";\n    var options = optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n    _this._delayNode = new Delay({\n      context: _this.context,\n      delayTime: options.delayTime,\n      maxDelay: options.maxDelay\n    });\n    _this.delayTime = _this._delayNode.delayTime; // connect it up\n\n    _this.connectEffect(_this._delayNode);\n\n    readOnly(_assertThisInitialized(_this), \"delayTime\");\n    return _this;\n  }\n\n  _createClass(FeedbackDelay, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(FeedbackDelay.prototype), \"dispose\", this).call(this);\n\n      this._delayNode.dispose();\n\n      this.delayTime.dispose();\n      return this;\n    }\n  }], [{\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Object.assign(FeedbackEffect.getDefaults(), {\n        delayTime: 0.25,\n        maxDelay: 1\n      });\n    }\n  }]);\n\n  return FeedbackDelay;\n}(FeedbackEffect);","map":{"version":3,"sources":["../../../Tone/effect/FeedbackDelay.ts"],"names":[],"mappings":";;;;;;;AAAA,SAAS,KAAT,QAAsB,uBAAtB;AAGA,SAAS,oBAAT,QAAqC,uBAArC;AACA,SAAS,QAAT,QAAyB,wBAAzB;AACA,SAAS,cAAT,QAAsD,kBAAtD;AAOA;;;;;;;;;;;;;AAaG;;AACH,WAAa,aAAb;AAAA;;AAAA;;AAgBC,2BAAA;AAAA;;AAAA;;AAEC,8BAAM,oBAAoB,CAAC,aAAa,CAAC,WAAd,EAAD,EAA8B,SAA9B,EAAyC,CAAC,WAAD,EAAc,UAAd,CAAzC,CAA1B;AAhBQ,UAAA,IAAA,GAAe,eAAf;AAiBR,QAAM,OAAO,GAAG,oBAAoB,CAAC,aAAa,CAAC,WAAd,EAAD,EAA8B,SAA9B,EAAyC,CAAC,WAAD,EAAc,UAAd,CAAzC,CAApC;AAEA,UAAK,UAAL,GAAkB,IAAI,KAAJ,CAAU;AAC3B,MAAA,OAAO,EAAE,MAAK,OADa;AAE3B,MAAA,SAAS,EAAE,OAAO,CAAC,SAFQ;AAG3B,MAAA,QAAQ,EAAE,OAAO,CAAC;AAHS,KAAV,CAAlB;AAKA,UAAK,SAAL,GAAiB,MAAK,UAAL,CAAgB,SAAjC,CAVD,CAYC;;AACA,UAAK,aAAL,CAAmB,MAAK,UAAxB;;AACA,IAAA,QAAQ,gCAAO,WAAP,CAAR;AAdD;AAeC;;AA/BF;AAAA;AAAA,8BAwCQ;AACN;;AACA,WAAK,UAAL,CAAgB,OAAhB;;AACA,WAAK,SAAL,CAAe,OAAf;AACA,aAAO,IAAP;AACA;AA7CF;AAAA;AAAA,kCAiCmB;AACjB,aAAO,MAAM,CAAC,MAAP,CAAc,cAAc,CAAC,WAAf,EAAd,EAA4C;AAClD,QAAA,SAAS,EAAE,IADuC;AAElD,QAAA,QAAQ,EAAE;AAFwC,OAA5C,CAAP;AAIA;AAtCF;;AAAA;AAAA,EAAmC,cAAnC","sourceRoot":"","sourcesContent":["import { Delay } from \"../core/context/Delay\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { FeedbackEffect } from \"./FeedbackEffect\";\n/**\n * FeedbackDelay is a DelayNode in which part of output signal is fed back into the delay.\n *\n * @param delayTime The delay applied to the incoming signal.\n * @param feedback The amount of the effected signal which is fed back through the delay.\n * @example\n * const feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toDestination();\n * const tom = new Tone.MembraneSynth({\n * \toctaves: 4,\n * \tpitchDecay: 0.1\n * }).connect(feedbackDelay);\n * tom.triggerAttackRelease(\"A2\", \"32n\");\n * @category Effect\n */\nexport class FeedbackDelay extends FeedbackEffect {\n    constructor() {\n        super(optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]));\n        this.name = \"FeedbackDelay\";\n        const options = optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n        this._delayNode = new Delay({\n            context: this.context,\n            delayTime: options.delayTime,\n            maxDelay: options.maxDelay,\n        });\n        this.delayTime = this._delayNode.delayTime;\n        // connect it up\n        this.connectEffect(this._delayNode);\n        readOnly(this, \"delayTime\");\n    }\n    static getDefaults() {\n        return Object.assign(FeedbackEffect.getDefaults(), {\n            delayTime: 0.25,\n            maxDelay: 1,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._delayNode.dispose();\n        this.delayTime.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FeedbackDelay.js.map"]},"metadata":{},"sourceType":"module"}