{"ast":null,"code":"export const createFetchSource = createAbortError => {\n  return async url => {\n    try {\n      const response = await fetch(url);\n\n      if (response.ok) {\n        return response.text();\n      }\n    } catch {// Ignore errors.\n    } // tslint:disable-line:no-empty\n\n\n    throw createAbortError();\n  };\n};","map":{"version":3,"sources":["../../../src/factories/fetch-source.ts"],"names":[],"mappings":"AAEA,OAAO,MAAM,iBAAiB,GAAyB,gBAAD,IAAqB;AACvE,SAAO,MAAO,GAAP,IAAc;AACjB,QAAI;AACA,YAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAD,CAA5B;;AAEA,UAAI,QAAQ,CAAC,EAAb,EAAiB;AACb,eAAO,QAAQ,CAAC,IAAT,EAAP;AACH;AACJ,KAND,CAME,MAAM,CACJ;AACH,KATgB,CASf;;;AAEF,UAAM,gBAAgB,EAAtB;AACH,GAZD;AAaH,CAdM","sourceRoot":"","sourcesContent":["export const createFetchSource = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n            if (response.ok) {\n                return response.text();\n            }\n        }\n        catch {\n            // Ignore errors.\n        } // tslint:disable-line:no-empty\n        throw createAbortError();\n    };\n};\n//# sourceMappingURL=fetch-source.js.map"]},"metadata":{},"sourceType":"module"}