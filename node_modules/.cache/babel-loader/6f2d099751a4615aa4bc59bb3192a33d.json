{"ast":null,"code":"import _regeneratorRuntime from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport { __awaiter } from \"tslib\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\n/**\n * Render a segment of the oscillator to an offline context and return the results as an array\n */\n\nexport function generateWaveform(instance, length) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var duration, context, clone, buffer;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            duration = length / instance.context.sampleRate;\n            context = new OfflineContext(1, duration, instance.context.sampleRate);\n            clone = new instance.constructor(Object.assign(instance.get(), {\n              // should do 2 iterations\n              frequency: 2 / duration,\n              // zero out the detune\n              detune: 0,\n              context: context\n            })).toDestination();\n            clone.start(0);\n            _context.next = 6;\n            return context.render();\n\n          case 6:\n            buffer = _context.sent;\n            return _context.abrupt(\"return\", buffer.getChannelData(0));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}","map":{"version":3,"sources":["../../../../Tone/source/oscillator/OscillatorInterface.ts"],"names":[],"mappings":";;AAIA,SAAS,cAAT,QAA+B,mCAA/B;AAsGA;;AAEG;;AACH,OAAM,SAAgB,gBAAhB,CAAiC,QAAjC,EAAgD,MAAhD,EAA8D;;;;;;;AAC7D,YAAA,Q,GAAW,MAAM,GAAG,QAAQ,CAAC,OAAT,CAAiB,U;AACrC,YAAA,O,GAAU,IAAI,cAAJ,CAAmB,CAAnB,EAAsB,QAAtB,EAAgC,QAAQ,CAAC,OAAT,CAAiB,UAAjD,C;AACV,YAAA,K,GAAQ,IAAI,QAAQ,CAAC,WAAb,CAAyB,MAAM,CAAC,MAAP,CAAc,QAAQ,CAAC,GAAT,EAAd,EAA8B;AACpE;AACA,cAAA,SAAS,EAAE,IAAI,QAFqD;AAGpE;AACA,cAAA,MAAM,EAAE,CAJ4D;AAKpE,cAAA,OAAO,EAAP;AALoE,aAA9B,CAAzB,EAMV,aANU,E;AAOd,YAAA,KAAK,CAAC,KAAN,CAAY,CAAZ;;AACe,mBAAM,OAAO,CAAC,MAAR,EAAN;;;AAAT,YAAA,M;6CACC,MAAM,CAAC,cAAP,CAAsB,CAAtB,C;;;;;;;;;AACP","sourceRoot":"","sourcesContent":["import { __awaiter } from \"tslib\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\n/**\n * Render a segment of the oscillator to an offline context and return the results as an array\n */\nexport function generateWaveform(instance, length) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const duration = length / instance.context.sampleRate;\n        const context = new OfflineContext(1, duration, instance.context.sampleRate);\n        const clone = new instance.constructor(Object.assign(instance.get(), {\n            // should do 2 iterations\n            frequency: 2 / duration,\n            // zero out the detune\n            detune: 0,\n            context\n        })).toDestination();\n        clone.start(0);\n        const buffer = yield context.render();\n        return buffer.getChannelData(0);\n    });\n}\n//# sourceMappingURL=OscillatorInterface.js.map"]},"metadata":{},"sourceType":"module"}