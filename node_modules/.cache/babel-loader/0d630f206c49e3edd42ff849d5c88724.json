{"ast":null,"code":"import _objectSpread from \"/Users/thebe/Desktop/music-generator-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport var sanitizePeriodicWaveOptions = function sanitizePeriodicWaveOptions(options) {\n  var imag = options.imag,\n      real = options.real;\n\n  if (imag === undefined) {\n    if (real === undefined) {\n      return _objectSpread(_objectSpread({}, options), {}, {\n        imag: [0, 0],\n        real: [0, 0]\n      });\n    }\n\n    return _objectSpread(_objectSpread({}, options), {}, {\n      imag: Array.from(real, function () {\n        return 0;\n      }),\n      real: real\n    });\n  }\n\n  if (real === undefined) {\n    return _objectSpread(_objectSpread({}, options), {}, {\n      imag: imag,\n      real: Array.from(imag, function () {\n        return 0;\n      })\n    });\n  }\n\n  return _objectSpread(_objectSpread({}, options), {}, {\n    imag: imag,\n    real: real\n  });\n};","map":{"version":3,"sources":["../../../src/helpers/sanitize-periodic-wave-options.ts"],"names":[],"mappings":";AAEA,OAAO,IAAM,2BAA2B,GAAyC,SAApE,2BAAoE,CAAC,OAAD,EAAY;AAAA,MACjF,IADiF,GAClE,OADkE,CACjF,IADiF;AAAA,MAC3E,IAD2E,GAClE,OADkE,CAC3E,IAD2E;;AAGzF,MAAI,IAAI,KAAK,SAAb,EAAwB;AACpB,QAAI,IAAI,KAAK,SAAb,EAAwB;AACpB,6CAAY,OAAZ;AAAqB,QAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,CAA3B;AAAmC,QAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAzC;AACH;;AAED,2CAAY,OAAZ;AAAqB,MAAA,IAAI,EAAE,KAAK,CAAC,IAAN,CAAW,IAAX,EAAiB;AAAA,eAAM,CAAN;AAAA,OAAjB,CAA3B;AAAsD,MAAA,IAAI,EAAJ;AAAtD;AACH;;AAED,MAAI,IAAI,KAAK,SAAb,EAAwB;AACpB,2CAAY,OAAZ;AAAqB,MAAA,IAAI,EAAJ,IAArB;AAA2B,MAAA,IAAI,EAAE,KAAK,CAAC,IAAN,CAAW,IAAX,EAAiB;AAAA,eAAM,CAAN;AAAA,OAAjB;AAAjC;AACH;;AAED,yCAAY,OAAZ;AAAqB,IAAA,IAAI,EAAJ,IAArB;AAA2B,IAAA,IAAI,EAAJ;AAA3B;AACH,CAhBM","sourceRoot":"","sourcesContent":["export const sanitizePeriodicWaveOptions = (options) => {\n    const { imag, real } = options;\n    if (imag === undefined) {\n        if (real === undefined) {\n            return { ...options, imag: [0, 0], real: [0, 0] };\n        }\n        return { ...options, imag: Array.from(real, () => 0), real };\n    }\n    if (real === undefined) {\n        return { ...options, imag, real: Array.from(imag, () => 0) };\n    }\n    return { ...options, imag, real };\n};\n//# sourceMappingURL=sanitize-periodic-wave-options.js.map"]},"metadata":{},"sourceType":"module"}