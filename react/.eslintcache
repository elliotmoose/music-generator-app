[{"/Users/elliotmoose/Desktop/00 CDS/music-project/generator-app/music-generator-app/react/src/index.js":"1","/Users/elliotmoose/Desktop/00 CDS/music-project/generator-app/music-generator-app/react/src/reportWebVitals.js":"2","/Users/elliotmoose/Desktop/00 CDS/music-project/generator-app/music-generator-app/react/src/App.js":"3","/Users/elliotmoose/Desktop/00 CDS/music-project/generator-app/music-generator-app/react/src/Player.js":"4","/Users/elliotmoose/Desktop/00 CDS/music-project/generator-app/music-generator-app/react/src/components/Playbar.js":"5","/Users/elliotmoose/Desktop/00 CDS/music-project/generator-app/music-generator-app/react/src/public/data.js":"6","/Users/elliotmoose/Desktop/00 CDS/music-project/generator-app/music-generator-app/react/src/Recorder.js":"7","/Users/elliotmoose/Desktop/00 CDS/music-project/generator-app/music-generator-app/react/src/Model.js":"8"},{"size":500,"mtime":1606895649730,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1606895649731,"results":"11","hashOfConfig":"10"},{"size":5549,"mtime":1607334997308,"results":"12","hashOfConfig":"10"},{"size":3270,"mtime":1607334389973,"results":"13","hashOfConfig":"10"},{"size":722,"mtime":1607052373032,"results":"14","hashOfConfig":"10"},{"size":569,"mtime":1607052138284,"results":"15","hashOfConfig":"10"},{"size":2613,"mtime":1607331178421,"results":"16","hashOfConfig":"10"},{"size":309,"mtime":1607334517775,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"g1wh7c",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/elliotmoose/Desktop/00 CDS/music-project/generator-app/music-generator-app/react/src/index.js",[],["36","37"],"/Users/elliotmoose/Desktop/00 CDS/music-project/generator-app/music-generator-app/react/src/reportWebVitals.js",[],"/Users/elliotmoose/Desktop/00 CDS/music-project/generator-app/music-generator-app/react/src/App.js",["38","39","40","41","42","43","44","45","46","47"],"/Users/elliotmoose/Desktop/00 CDS/music-project/generator-app/music-generator-app/react/src/Player.js",[],"/Users/elliotmoose/Desktop/00 CDS/music-project/generator-app/music-generator-app/react/src/components/Playbar.js",[],"/Users/elliotmoose/Desktop/00 CDS/music-project/generator-app/music-generator-app/react/src/public/data.js",[],"/Users/elliotmoose/Desktop/00 CDS/music-project/generator-app/music-generator-app/react/src/Recorder.js",["48"],"export default class Recorder\n{\n    constructor() {\n        this.bpm = 120;\n        this.timeSlice = 1/(this.bpm*4/60); //time slice - time of 16th notes\n        this.windowLength = 30; //number of time slices\n        this.slices = [];\n        this.currentChord = null;\n\n        //callbacks \n        this.onFinishRecording = null;\n    }\n    \n    onChordPressed(chord) {\n        this.currentChord = chord;\n    }\n\n    onChordReleased(chord) {\n        if(this.currentChord == chord) {\n            this.currentChord = null;\n        }\n    }\n\n    startRecording() {\n        console.log('started recording!')\n        this.recording = true;\n        this.slices = [];\n\n        //start slice tracking clock\n        this.interval = setInterval(() => {\n            this.captureSlice();    \n        }, this.timeSlice * 1000);\n    }\n\n    stopRecording() {\n        this.recording = false;\n\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    }\n\n    finishRecording() {\n        this.stopRecording();\n\n        if(this.onFinishRecording) {\n            let result = this.slices;\n            this.onFinishRecording(result);\n        }\n    }\n\n    captureSlice() {\n        if(!this.recording) {\n            return;\n        }\n\n        if(this.slices.length > this.windowLength) {\n            this.finishRecording();\n        }\n\n        // console.log('recording slice: ', this.currentChord)\n        this.slices.push(this.currentChord);\n    }\n\n    getVisualNotes() {\n        let output = []\n        this.slices.forEach((slice, i) => {\n            if(!slice) {\n                return;\n            }\n            slice.array.forEach(noteString => {\n                let midi = noteStringToMidi(noteString); //C6 => 60 \n                output.push({\n                    time: i*this.timeSlice,\n                    duration: this.timeSlice,\n                    midi,\n                    recorded: true\n                })\n            });\n        })\n\n        return output;\n    }\n}\n\nconst noteToScaleIndex = {\n\tcbb: -2, cb: -1, c: 0, \"c#\": 1, cx: 2,\n\tdbb: 0, db: 1, d: 2, \"d#\": 3, dx: 4,\n\tebb: 2, eb: 3, e: 4, \"e#\": 5, ex: 6,\n\tfbb: 3, fb: 4, f: 5, \"f#\": 6, fx: 7,\n\tgbb: 5, gb: 6, g: 7, \"g#\": 8, gx: 9,\n\tabb: 7, ab: 8, a: 9, \"a#\": 10, ax: 11,\n\tbbb: 9, bb: 10, b: 11, \"b#\": 12, bx: 13,\n};\n\nconst noteStringToMidi = (noteString) => {\n    let components = noteString.match(/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i)\n    let pitch = components[1]\n    let octave = components[2]\n    const index = noteToScaleIndex[pitch.toLowerCase()];\n    const noteNumber = index + (parseInt(octave, 10) + 1) * 12;\n    return noteNumber;\n}","/Users/elliotmoose/Desktop/00 CDS/music-project/generator-app/music-generator-app/react/src/Model.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":16,"column":9,"nodeType":"55","messageId":"56","endLine":16,"endColumn":18},{"ruleId":"53","severity":1,"message":"57","line":19,"column":19,"nodeType":"55","messageId":"56","endLine":19,"endColumn":30},{"ruleId":"53","severity":1,"message":"58","line":20,"column":9,"nodeType":"55","messageId":"56","endLine":20,"endColumn":14},{"ruleId":"53","severity":1,"message":"59","line":20,"column":16,"nodeType":"55","messageId":"56","endLine":20,"endColumn":24},{"ruleId":"60","severity":1,"message":"61","line":64,"column":5,"nodeType":"62","endLine":64,"endColumn":7,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":71,"column":13,"nodeType":"66","messageId":"67","endLine":71,"endColumn":15},{"ruleId":"64","severity":1,"message":"68","line":81,"column":13,"nodeType":"66","messageId":"67","endLine":81,"endColumn":15},{"ruleId":"53","severity":1,"message":"69","line":94,"column":17,"nodeType":"55","messageId":"56","endLine":94,"endColumn":27},{"ruleId":"64","severity":1,"message":"68","line":108,"column":23,"nodeType":"66","messageId":"67","endLine":108,"endColumn":25},{"ruleId":"64","severity":1,"message":"68","line":115,"column":29,"nodeType":"66","messageId":"67","endLine":115,"endColumn":31},{"ruleId":"64","severity":1,"message":"68","line":19,"column":30,"nodeType":"66","messageId":"67","endLine":19,"endColumn":32},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'recording' is assigned a value but never used.","Identifier","unusedVar","'setRecorder' is assigned a value but never used.","'model' is assigned a value but never used.","'setModel' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'SampleChords', 'player', 'playerTwo', and 'recorder'. Either include them or remove the dependency array. You can also do a functional update 'setPlayer(p => ...)' if you only need 'player' in the 'setPlayer' call.","ArrayExpression",["72"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'onChordKey' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [SampleChords, player, playerTwo, recorder]",{"range":"75","text":"76"},[1834,1836],"[SampleChords, player, playerTwo, recorder]"]